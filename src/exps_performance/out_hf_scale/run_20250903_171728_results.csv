idx,kind,digits,truth,answer_nl,correct_nl,answer_code,correct_code,answer_code_exec,correct_code_exec,problem
0,ilp_prod,15,106,0,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_p49p5vv8/main.py"", line 10\n    x = {}  # Define decision variables\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.13974356651306152}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [10, 15, 27, 18, 21, 33]
consumption (rows=resources) = [[7, 11, 6, 7, 8, 8], [7, 2, 13, 10, 15, 5], [8, 5, 8, 2, 3, 11], [2, 2, 11, 11, 12, 14]]
capacity = [46, 42, 54, 35]
upper_bounds = [6, 4, 3, 3, 3, 3]"
1,ilp_prod,20,183,42,0,178,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_w0kctyjk/main.py"", line 11, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.3594319820404053}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [25, 41, 39, 3, 6, 47]
consumption (rows=resources) = [[12, 19, 10, 20, 10, 4], [9, 14, 16, 3, 19, 14], [8, 9, 16, 4, 8, 1], [3, 6, 6, 8, 1, 17]]
capacity = [48, 63, 45, 55]
upper_bounds = [4, 3, 3, 3, 3, 3]"
2,ilp_assign,15,70,42,0,143,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/2f05f27ccee64afa982464b99e5fdbf1-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/2f05f27ccee64afa982464b99e5fdbf1-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 70 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 70\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 70 - took 0.00 seconds\nCbc0012I Integer solution of 70 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 70, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 70 to 70\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                70.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n70.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.1721642017364502}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[23, 16, 13, 38, 45, 9, 32], [11, 11, 10, 44, 15, 35, 3], [25, 24, 22, 31, 36, 24, 23], [15, 31, 27, 30, 16, 34, 7], [44, 10, 13, 10, 39, 38, 15], [9, 22, 27, 30, 41, 29, 30], [7, 43, 13, 1, 30, 26, 32]]"
3,ilp_assign,10,36,42,0,42,0,"{'ok': True, 'value': 36, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/d8a66a8f0038454ab5249b4440f9bb45-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/d8a66a8f0038454ab5249b4440f9bb45-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 36 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 36\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 36 - took 0.00 seconds\nCbc0012I Integer solution of 36 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 36, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 36 to 36\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                36.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n36\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.17236995697021484}",1,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[5, 22, 24, 21, 25, 4, 13], [15, 12, 22, 1, 20, 26, 16], [21, 16, 25, 2, 8, 20, 29], [10, 6, 17, 20, 16, 3, 24], [28, 11, 3, 27, 9, 23, 26], [17, 10, 28, 22, 5, 18, 30], [21, 2, 11, 3, 5, 17, 30]]"
4,ilp_prod,10,128,42,0,102,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_xe54bvox/main.py"", line 11, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(num_products), lowBound=0, up=upper_bounds)\nNameError: name \'upper_bounds\' is not defined\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1622600555419922}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [15, 19, 25, 11, 30]
consumption (rows=resources) = [[3, 1, 9, 1, 1], [5, 7, 5, 10, 3], [7, 5, 7, 7, 10], [6, 5, 10, 8, 5]]
capacity = [27, 33, 40, 29]
upper_bounds = [4, 4, 3, 3, 4]"
5,ilp_partition,20,1,42,0,42,0,"{'ok': True, 'value': 17, 'stdout': '17\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.507516622543335}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [25, 1, 39, 21, 40, 4, 42, 9, 48, 48, 40, 55, 5, 30, 48, 47, 16, 21, 23, 9]"
6,ilp_partition,10,0,42,0,42,0,"{'ok': True, 'value': 8, 'stdout': '8\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21016669273376465}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [30, 22, 21, 28, 8, 5, 22, 29, 26, 19]"
7,ilp_partition,15,1,42,0,42,0,"{'ok': True, 'value': 15, 'stdout': '15\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20950531959533691}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [1, 25, 30, 12, 44, 40, 39, 25, 14, 37, 1, 13, 44, 10, 32]"
8,rod,5,45,42,0,42,0,"{'ok': True, 'value': 45, 'stdout': '45\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08762669563293457}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [9, 13, 7, 9, 15]"
9,ilp_assign,20,41,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/3a36497bf91746d5b18170e16188a488-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/3a36497bf91746d5b18170e16188a488-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 41 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 41\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 41 - took 0.00 seconds\nCbc0012I Integer solution of 41 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 41, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 41 to 41\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                41.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_hoahc98x/main.py"", line 27, in <module>\n    print(value(objective))\nNameError: name \'value\' is not defined. Did you mean: \'False\'?\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1798396110534668}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[3, 30, 15, 4, 30, 53, 33], [55, 17, 28, 48, 21, 41, 2], [21, 3, 11, 53, 25, 3, 22], [57, 20, 21, 5, 26, 58, 27], [56, 7, 11, 44, 15, 5, 4], [21, 9, 59, 20, 8, 11, 10], [3, 40, 54, 15, 19, 19, 32]]"
10,ilp_partition,5,2,4,0,6,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'Traceback (most recent call last):\n  File ""/tmp/cot_exec_r_k0n3ky/main.py"", line 32, in <module>\n    print(min_difference(weights))\nNameError: name \'weights\' is not defined\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.20321345329284668}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [10, 6, 13, 3, 10]"
11,ilp_partition,10,0,42,0,4,0,"{'ok': True, 'value': 2, 'stdout': '2\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21799945831298828}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [2, 10, 12, 8, 24, 7, 15, 18, 16, 16]"
12,ilp_prod,20,156,141,0,204,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_tpujef4r/main.py"", line 11, in <module>\n    x = pulp.LpVariable.dicts(""x"", range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.15019845962524414}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [52, 18, 17, 24, 17, 36]
consumption (rows=resources) = [[17, 11, 8, 20, 18, 20], [4, 6, 7, 17, 12, 15], [9, 1, 16, 1, 1, 20], [12, 6, 12, 4, 10, 7]]
capacity = [56, 80, 66, 40]
upper_bounds = [3, 5, 3, 3, 3, 3]"
13,ilp_prod,15,190,42,0,128,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_zidbf3cg/main.py"", line 11, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.15028762817382812}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [26, 14, 7, 30, 36, 4]
consumption (rows=resources) = [[4, 13, 13, 7, 10, 3], [9, 14, 2, 14, 8, 1], [4, 14, 6, 6, 2, 3], [4, 11, 15, 1, 8, 3]]
capacity = [45, 60, 39, 36]
upper_bounds = [6, 3, 3, 4, 4, 10]"
14,ilp_prod,20,194,42,0,230,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_x75ocba4/main.py"", line 11, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1648266315460205}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [4, 26, 34, 44, 30, 28]
consumption (rows=resources) = [[11, 12, 17, 17, 11, 15], [1, 3, 17, 8, 10, 9], [13, 6, 6, 4, 11, 9], [1, 3, 20, 9, 4, 7]]
capacity = [75, 67, 71, 71]
upper_bounds = [5, 6, 3, 4, 6, 5]"
15,ilp_prod,15,124,42,0,167,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/cd7ed69331544b90b41dcd96f8366d65-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/cd7ed69331544b90b41dcd96f8366d65-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 9 COLUMNS\nAt line 52 RHS\nAt line 57 BOUNDS\nAt line 64 ENDATA\nProblem MODEL has 4 rows, 6 columns and 24 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 142.355 - 0.00 seconds\nCgl0004I processed model has 4 rows, 6 columns (6 integer (0 of which binary)) and 24 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0012I Integer solution of -108 found by DiveCoefficient after 0 iterations and 0 nodes (0.00 seconds)\nCbc0038I Full problem 4 rows 6 columns, reduced to 4 rows 3 columns\nCbc0012I Integer solution of -116 found by DiveCoefficient after 265 iterations and 0 nodes (0.01 seconds)\nCbc0031I 2 added rows had average density of 4\nCbc0013I At root node, 2 cuts changed objective from -142.35468 to -133.79652 in 100 passes\nCbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100\nCbc0014I Cut generator 1 (Gomory) - 220 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1\nCbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100\nCbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100\nCbc0014I Cut generator 6 (TwoMirCuts) - 60 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1\nCbc0010I After 0 nodes, 1 on tree, -116 best solution, best possible -133.79278 (0.01 seconds)\nCbc0004I Integer solution of -124 found after 293 iterations and 1 nodes (0.01 seconds)\nCbc0001I Search completed - best objective -124, took 299 iterations and 2 nodes (0.02 seconds)\nCbc0032I Strong branching done 8 times (10 iterations), fathomed 1 nodes and fixed 1 variables\nCbc0035I Maximum depth 0, 1 variables fixed on reduced cost\nCuts at root node changed objective from -142.355 to -133.793\nProbing was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)\nGomory was tried 110 times and created 246 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)\nKnapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)\nFlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)\nTwoMirCuts was tried 110 times and created 100 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)\nZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                124.00000000\nEnumerated nodes:               2\nTotal iterations:               299\nTime (CPU seconds):             0.02\nTime (Wallclock seconds):       0.02\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.02   (Wallclock seconds):       0.02\n\n124.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.16945457458496094}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [28, 44, 36, 5, 16, 23]
consumption (rows=resources) = [[3, 15, 10, 12, 4, 15], [11, 12, 3, 10, 7, 2], [13, 3, 8, 11, 5, 15], [12, 8, 6, 9, 12, 9]]
capacity = [37, 52, 31, 35]
upper_bounds = [3, 3, 3, 3, 3, 3]"
16,lcs,10,5,4,0,4,0,"{'ok': True, 'value': 5, 'stdout': '5\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2079181671142578}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""adaacdadca""
T = ""baaaacbbb"""
17,rod,20,900,177,0,109,0,"{'ok': True, 'value': 900, 'stdout': '900\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.07908082008361816}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [45, 13, 8, 1, 47, 1, 25, 50, 60, 42, 6, 50, 19, 13, 24, 11, 10, 47, 21, 21]"
18,lcs,20,11,42,0,9,0,"{'ok': True, 'value': 11, 'stdout': '11\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.19734573364257812}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""acbbccbbbcccaaccadad""
T = ""bbcccbdadcbadabadbab"""
19,rod,15,225,42,0,42,0,"{'ok': True, 'value': 225, 'stdout': '225\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08958268165588379}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [15, 4, 5, 17, 4, 37, 14, 28, 14, 36, 40, 13, 3, 5, 20]"
20,ilp_partition,15,0,42,0,42,0,"{'ok': True, 'value': 14, 'stdout': '14\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20684552192687988}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [44, 26, 25, 42, 34, 25, 35, 34, 24, 3, 18, 19, 35, 29, 13]"
21,ilp_assign,20,83,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_5uk0hh12/main.py"", line 9, in <module>\n    worker_assignment = pulp.LpVariable.dicts(""worker"", range(n), range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 289, in __init__\n    if not math.isfinite(self.lowBound):\nTypeError: must be real number, not range\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16060471534729004}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[54, 12, 33, 23, 28, 26, 51], [40, 33, 24, 47, 37, 51, 18], [8, 28, 33, 32, 13, 37, 18], [39, 27, 18, 27, 11, 15, 1], [14, 42, 19, 38, 55, 49, 43], [32, 35, 58, 8, 13, 36, 8], [56, 49, 3, 19, 16, 43, 60]]"
22,rod,5,20,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_ftnggu7a/main.py"", line 2\n    dp = [0] * (N + 1)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08987259864807129}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [4, 5, 12, 12, 11]"
23,knap,5,42,42,1,35,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_quac80su/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10217595100402832}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [1, 1, 8, 6, 7]
V = [19, 10, 7, 13, 6]
C = 11"
24,ilp_assign,10,57,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/9f52513561554c3790a9aaf49ee98c77-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/9f52513561554c3790a9aaf49ee98c77-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 57 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 57\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 57 - took 0.00 seconds\nCbc0012I Integer solution of 57 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 57, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 57 to 57\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                57.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n57.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.1716921329498291}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[26, 30, 13, 30, 4, 13, 25], [17, 19, 24, 27, 26, 28, 28], [25, 27, 8, 15, 25, 16, 18], [3, 6, 25, 1, 30, 12, 2], [19, 15, 5, 25, 16, 13, 7], [28, 24, 7, 20, 2, 11, 7], [16, 9, 24, 6, 18, 16, 17]]"
25,ilp_prod,15,132,42,0,204,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_zxeg2ulq/main.py"", line 11, in <module>\n    x = pulp.LpVariable.dicts(""x"", range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16813445091247559}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [17, 40, 44, 44, 34, 40]
consumption (rows=resources) = [[12, 1, 13, 7, 13, 8], [6, 13, 10, 12, 10, 15], [14, 5, 12, 3, 4, 10], [8, 15, 4, 8, 6, 14]]
capacity = [36, 33, 54, 35]
upper_bounds = [3, 3, 3, 3, 3, 3]"
26,rod,10,110,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_msorba8p/main.py"", line 4\n    dp = [0] * (N + 1)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09120678901672363}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [11, 12, 3, 4, 30, 26, 29, 18, 8, 7]"
27,ilp_assign,10,33,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_smza3bb6/main.py"", line 12, in <module>\n    model += pulp.lpSum(C[i][j] * variables[i][j] for i in range(n) for j in range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 2469, in lpSum\n    return LpAffineExpression().addInPlace(vector)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 968, in addInPlace\n    for e in other:\n  File ""/tmp/cot_exec_smza3bb6/main.py"", line 12, in <genexpr>\n    model += pulp.lpSum(C[i][j] * variables[i][j] for i in range(n) for j in range(n))\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1673874855041504}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[8, 16, 11, 15, 14, 25, 3], [17, 19, 15, 2, 14, 7, 13], [19, 19, 22, 25, 9, 20, 20], [25, 5, 5, 28, 28, 13, 2], [1, 21, 27, 2, 15, 1, 12], [17, 27, 15, 11, 26, 6, 23], [22, 7, 24, 15, 20, 7, 22]]"
28,ilp_partition,15,0,42,0,42,0,"{'ok': True, 'value': 6, 'stdout': '6\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22822880744934082}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [35, 28, 17, 1, 30, 24, 1, 19, 21, 10, 26, 22, 35, 32, 45]"
29,ilp_partition,15,1,42,0,42,0,"{'ok': True, 'value': 27, 'stdout': '27\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22087931632995605}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [10, 45, 1, 11, 29, 45, 40, 9, 2, 4, 26, 6, 20, 26, 35]"
30,ilp_prod,10,126,42,0,99,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_nej54clr/main.py"", line 12, in <module>\n    variables = pulp.LpVariable.dicts(""x"", range(len(profit)), cat=""Integer"", lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16631007194519043}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [25, 12, 21, 7, 20]
consumption (rows=resources) = [[10, 9, 1, 4, 2], [8, 8, 4, 9, 6], [2, 5, 3, 5, 7], [5, 2, 1, 1, 6]]
capacity = [36, 25, 21, 30]
upper_bounds = [3, 3, 6, 3, 3]"
31,rod,15,212,42,0,42,0,"{'ok': True, 'value': 212, 'stdout': '212\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09240245819091797}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [9, 29, 10, 33, 35, 26, 26, 8, 2, 11, 13, 40, 37, 16, 18]"
32,rod,10,230,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_ogl_4xe7/main.py"", line 8\n    for i in range(1, N + 1):\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.11357665061950684}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [23, 17, 17, 21, 14, 18, 14, 6, 26, 8]"
33,rod,15,555,42,0,42,0,"{'ok': True, 'value': 555, 'stdout': '555\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.10281944274902344}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [37, 10, 25, 38, 43, 44, 38, 9, 43, 12, 25, 25, 33, 10, 43]"
34,ilp_prod,10,53,42,0,69,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_i1wm7izq/main.py"", line 12, in <module>\n    x = pulp.LpVariable.dicts(""x"", range(len(profit)), lowBound=0, cat=\'Integer\', up=upper_bounds)\nTypeError: LpVariable.dicts() got an unexpected keyword argument \'up\'\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17945408821105957}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [7, 16, 4, 17, 19]
consumption (rows=resources) = [[8, 9, 1, 7, 2], [5, 7, 8, 2, 9], [7, 7, 1, 5, 10], [1, 5, 5, 6, 9]]
capacity = [20, 24, 37, 21]
upper_bounds = [3, 3, 3, 3, 3]"
35,ilp_assign,15,63,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_37iq9px2/main.py"", line 9\n    x = pulp.LpVariable.dicts(""x"", [(i, j) for i in range(n) for j in range(n)], cat=\'Binary\')\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1021263599395752}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[6, 10, 1, 16, 32, 21, 21], [6, 20, 43, 10, 12, 1, 33], [13, 33, 33, 4, 18, 31, 7], [17, 22, 20, 18, 24, 41, 15], [43, 35, 13, 40, 30, 5, 35], [38, 45, 43, 18, 25, 9, 36], [10, 7, 22, 42, 8, 20, 10]]"
36,lcs,10,6,4,0,5,0,"{'ok': True, 'value': 6, 'stdout': '6\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22220492362976074}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""adcccbbdad""
T = ""abbdacdbca"""
37,ilp_partition,15,0,42,0,42,0,"{'ok': True, 'value': 4, 'stdout': '4\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2199563980102539}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [8, 31, 13, 1, 15, 1, 30, 30, 13, 37, 31, 10, 23, 34, 3]"
38,ilp_partition,20,1,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'Traceback (most recent call last):\n  File ""/tmp/cot_exec_h6kxu3ha/main.py"", line 12, in <module>\n    model += abs(lpSum(weights[i] * x[i] for i in range(num_items)) - lpSum(weights[i] * (1 - x[i]) for i in range(num_items)))\nTypeError: bad operand type for abs(): \'LpAffineExpression\'\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17640233039855957}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [15, 32, 17, 48, 36, 54, 10, 53, 54, 52, 32, 27, 55, 12, 31, 51, 5, 56, 16, 37]"
39,ilp_partition,20,0,42,0,42,0,"{'ok': True, 'value': 24, 'stdout': '24\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2285308837890625}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [43, 56, 24, 44, 58, 34, 36, 45, 32, 48, 56, 41, 46, 42, 60, 16, 44, 42, 43, 6]"
40,ilp_partition,5,1,42,0,4,0,"{'ok': True, 'value': 1, 'stdout': '1\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22549128532409668}",1,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [9, 12, 3, 10, 15]"
41,knap,10,136,42,0,77,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec__zgjvf1m/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10261368751525879}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [4, 3, 8, 14, 17, 7, 10, 16, 2, 13]
V = [14, 4, 20, 20, 40, 14, 28, 1, 30, 21]
C = 47"
42,lcs,15,7,12,0,5,0,"{'ok': True, 'value': 7, 'stdout': '7\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21564936637878418}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""ddbcdbdcacacaca""
T = ""ccadcaacccbcdc"""
43,ilp_assign,20,73,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'no_fenced_code', 'retcode': None, 'timeout': False, 'duration_s': 0.0}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[59, 5, 31, 27, 36, 12, 55], [48, 37, 41, 3, 37, 21, 54], [20, 8, 16, 58, 42, 49, 45], [46, 2, 21, 50, 11, 27, 16], [57, 22, 54, 51, 55, 52, 20], [10, 6, 46, 48, 58, 48, 50], [54, 46, 9, 27, 38, 50, 48]]"
44,ilp_partition,20,0,42,0,42,0,"{'ok': True, 'value': 34, 'stdout': '34\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.23442983627319336}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [25, 40, 17, 28, 33, 40, 49, 24, 40, 10, 8, 18, 16, 37, 11, 52, 35, 24, 32, 7]"
45,ilp_partition,10,1,42,0,42,0,"{'ok': True, 'value': 7, 'stdout': '7\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22738099098205566}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [19, 1, 8, 16, 13, 9, 20, 27, 9, 3]"
46,lcs,10,6,4,0,5,0,"{'ok': True, 'value': 6, 'stdout': '6\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21239686012268066}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""ddcdcaaddb""
T = ""bbcddccddd"""
47,knap,20,619,42,0,750,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_3cs84ltb/main.py"", line 11\n    dp = np.zeros((len(W) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10744309425354004}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [19, 19, 24, 10, 32, 21, 29, 23, 1, 12, 3, 34, 7, 28, 10, 27, 21, 19, 37, 11]
V = [21, 63, 55, 7, 24, 17, 46, 15, 51, 54, 37, 75, 44, 23, 51, 35, 61, 53, 30, 29]
C = 193"
48,rod,5,30,42,0,42,0,"{'ok': True, 'value': 30, 'stdout': '30\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08620691299438477}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [6, 6, 13, 11, 6]"
49,rod,10,180,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_2tcn_q1n/main.py"", line 4\n    dp = [0] * (N + 1)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09419035911560059}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [18, 5, 5, 13, 5, 20, 23, 24, 11, 7]"
50,lcs,20,11,42,0,12,0,"{'ok': True, 'value': 11, 'stdout': '11\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.23223018646240234}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""acaaabcbbbbddcdadcbb""
T = ""abcddcbbbbccbbdbbcbcd"""
51,rod,20,590,42,0,107,0,"{'ok': True, 'value': 590, 'stdout': '590\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09741997718811035}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [23, 59, 13, 29, 30, 16, 46, 43, 4, 47, 26, 9, 58, 41, 41, 11, 51, 31, 8, 22]"
52,ilp_assign,15,63,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_682ffciy/main.py"", line 12, in <module>\n    model += pulp.lpSum(C[i][j] * vars[i][j] for i in range(n) for j in range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 2469, in lpSum\n    return LpAffineExpression().addInPlace(vector)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 968, in addInPlace\n    for e in other:\n  File ""/tmp/cot_exec_682ffciy/main.py"", line 12, in <genexpr>\n    model += pulp.lpSum(C[i][j] * vars[i][j] for i in range(n) for j in range(n))\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.20456767082214355}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[1, 28, 32, 40, 45, 10, 13], [8, 21, 41, 32, 28, 5, 21], [23, 14, 5, 14, 40, 27, 8], [37, 27, 36, 9, 33, 25, 27], [28, 30, 31, 40, 16, 40, 28], [37, 16, 44, 5, 2, 21, 23], [15, 18, 41, 27, 21, 43, 11]]"
53,ilp_prod,5,60,42,0,55,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/5a9957ab6b1143f8a86cb36871918118-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/5a9957ab6b1143f8a86cb36871918118-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 8 COLUMNS\nAt line 21 RHS\nAt line 25 BOUNDS\nAt line 29 ENDATA\nProblem MODEL has 3 rows, 3 columns and 9 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nPresolve 3 (0) rows, 3 (0) columns and 9 (0) elements\n0  Obj -0 Dual inf 34 (3)\n1  Obj 60\nOptimal - objective value 60\nOptimal objective 60 - 1 iterations time 0.002\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n60.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.19172382354736328}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [15, 5, 14]
consumption (rows=resources) = [[5, 4, 5], [2, 1, 5], [3, 5, 2]]
capacity = [20, 13, 15]
upper_bounds = [4, 3, 3]"
54,ilp_prod,5,39,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_dbg33m97/main.py"", line 12, in <module>\n    vars = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1752626895904541}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [9, 7, 6]
consumption (rows=resources) = [[3, 5, 2], [1, 5, 5], [1, 2, 2]]
capacity = [13, 16, 14]
upper_bounds = [4, 3, 3]"
55,rod,20,740,137,0,102,0,"{'ok': True, 'value': 740, 'stdout': '740\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09731030464172363}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [37, 54, 26, 60, 45, 54, 51, 27, 24, 8, 40, 59, 28, 23, 2, 9, 14, 9, 50, 56]"
56,rod,5,40,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_4qlgwm8u/main.py"", line 2\n    dp = [0] * (N + 1)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1208033561706543}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [8, 12, 2, 14, 14]"
57,ilp_assign,5,25,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_7glpk37i/main.py"", line 13, in <module>\n    model += pulp.lpSum([C[i][j] * variables[i][j] for i in range(n) for j in range(n)])\n  File ""/tmp/cot_exec_7glpk37i/main.py"", line 13, in <listcomp>\n    model += pulp.lpSum([C[i][j] * variables[i][j] for i in range(n) for j in range(n)])\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1723649501800537}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[9, 15, 14, 6, 14], [14, 13, 9, 11, 13], [11, 6, 6, 11, 2], [3, 7, 1, 5, 15], [10, 12, 13, 4, 1]]"
58,rod,10,91,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_mzs9zhzs/main.py"", line 4\n    dp = [0] * (N + 1)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1020665168762207}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [4, 9, 29, 14, 12, 20, 28, 2, 18, 2]"
59,knap,5,49,42,0,39,0,"{'ok': True, 'value': 0, 'stdout': '49.0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22281742095947266}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [4, 5, 5, 10, 5]
V = [15, 6, 18, 12, 16]
C = 14"
60,ilp_prod,20,192,42,0,195,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec__jwqlgnn/main.py"", line 11, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17233014106750488}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [46, 45, 44, 11, 54, 26]
consumption (rows=resources) = [[20, 19, 19, 3, 1, 18], [11, 18, 20, 12, 12, 9], [16, 18, 10, 3, 7, 19], [16, 2, 10, 5, 8, 17]]
capacity = [66, 45, 55, 59]
upper_bounds = [3, 3, 3, 3, 3, 3]"
61,ilp_assign,15,57,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_am3m9gi2/main.py"", line 8\n    tasks = range(7)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08759093284606934}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[22, 17, 1, 21, 20, 15, 33], [7, 25, 29, 43, 33, 24, 22], [18, 31, 14, 33, 42, 23, 4], [26, 27, 35, 43, 21, 31, 2], [8, 22, 39, 29, 30, 41, 34], [7, 17, 9, 14, 1, 44, 43], [44, 29, 35, 1, 5, 9, 2]]"
62,knap,15,346,121,0,192,0,"{'ok': True, 'value': 346, 'stdout': '346\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20969629287719727}",1,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [6, 18, 27, 18, 11, 8, 30, 7, 25, 5, 10, 23, 22, 3, 21]
V = [53, 5, 45, 16, 8, 42, 20, 49, 1, 9, 26, 26, 55, 41, 4]
C = 117"
63,rod,15,525,42,0,42,0,"{'ok': True, 'value': 525, 'stdout': '525\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09647417068481445}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [35, 39, 6, 29, 31, 44, 24, 21, 5, 35, 34, 14, 15, 43, 45]"
64,lcs,10,4,4,1,5,0,"{'ok': True, 'value': 4, 'stdout': '4\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.24111533164978027}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""ddadabdcac""
T = ""accbbdcdbdd"""
65,knap,20,708,42,0,1342,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_xxrc55vi/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.11220312118530273}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [4, 10, 16, 26, 14, 18, 35, 19, 19, 29, 13, 20, 12, 34, 39, 5, 25, 34, 27, 20]
V = [59, 17, 77, 56, 80, 72, 51, 58, 39, 66, 60, 39, 30, 16, 53, 24, 33, 9, 67, 59]
C = 209"
66,ilp_prod,10,120,42,0,98,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/763481f5b7304fbab68fa0060c7da31a-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/763481f5b7304fbab68fa0060c7da31a-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 9 COLUMNS\nAt line 45 RHS\nAt line 50 BOUNDS\nAt line 56 ENDATA\nProblem MODEL has 4 rows, 5 columns and 20 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 120 - 0.00 seconds\nCgl0004I processed model has 4 rows, 5 columns (5 integer (0 of which binary)) and 20 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0012I Integer solution of -120 found by DiveCoefficient after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective -120, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from -120 to -120\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                120.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n120.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.18329548835754395}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [5, 9, 22, 22, 30]
consumption (rows=resources) = [[6, 8, 9, 3, 3], [3, 7, 1, 2, 6], [5, 5, 6, 6, 5], [7, 7, 8, 8, 6]]
capacity = [30, 39, 33, 24]
upper_bounds = [3, 3, 3, 3, 4]"
67,rod,10,140,42,0,42,0,"{'ok': True, 'value': 12, 'stdout': '12\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09998536109924316}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [14, 18, 17, 28, 5, 14, 16, 20, 4, 12]"
68,lcs,15,10,12,0,8,0,"{'ok': True, 'value': 10, 'stdout': '10\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20978760719299316}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""ddabadadabbdcba""
T = ""dcaabccadcdcbbba"""
69,ilp_partition,15,1,42,0,42,0,"{'ok': True, 'value': 33, 'stdout': '33\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20613694190979004}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [37, 26, 1, 14, 23, 16, 6, 34, 13, 36, 14, 39, 33, 39, 42]"
70,ilp_assign,15,77,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/a46123c254344e28ab596799e9407d0f-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/a46123c254344e28ab596799e9407d0f-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 77 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 77\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 77 - took 0.00 seconds\nCbc0012I Integer solution of 77 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 77, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 77 to 77\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                77.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n77.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.17331862449645996}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[7, 14, 24, 35, 32, 36, 11], [21, 25, 8, 15, 26, 28, 30], [26, 40, 19, 45, 9, 14, 21], [2, 35, 5, 41, 6, 21, 28], [4, 32, 40, 34, 8, 1, 42], [30, 44, 16, 31, 43, 40, 19], [25, 23, 17, 35, 14, 45, 45]]"
71,ilp_partition,5,5,42,0,4,0,"{'ok': True, 'value': 5, 'stdout': '5\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21133732795715332}",1,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [9, 12, 10, 12, 14]"
72,knap,5,36,42,0,32,0,"{'ok': True, 'value': 0, 'stdout': '36.0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20292353630065918}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [3, 10, 8, 4, 2]
V = [14, 20, 18, 14, 4]
C = 13"
73,ilp_prod,15,194,120,0,143,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_nyoif4nb/main.py"", line 12, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1591646671295166}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [18, 20, 23, 19, 40, 39]
consumption (rows=resources) = [[11, 13, 13, 12, 6, 2], [5, 9, 4, 14, 7, 3], [10, 7, 3, 10, 4, 7], [1, 6, 7, 2, 12, 7]]
capacity = [58, 50, 48, 33]
upper_bounds = [4, 4, 4, 3, 3, 4]"
74,ilp_assign,5,30,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_4gr6xw2h/main.py"", line 12, in <module>\n    model += pulp.lpSum(C[i][j] * vars[i][j] for i in range(n) for j in range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 2469, in lpSum\n    return LpAffineExpression().addInPlace(vector)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 968, in addInPlace\n    for e in other:\n  File ""/tmp/cot_exec_4gr6xw2h/main.py"", line 12, in <genexpr>\n    model += pulp.lpSum(C[i][j] * vars[i][j] for i in range(n) for j in range(n))\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17331194877624512}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[13, 13, 13, 9, 12], [10, 11, 6, 5, 5], [7, 7, 15, 9, 8], [13, 14, 14, 2, 4], [7, 4, 10, 1, 10]]"
75,rod,20,680,42,0,112,0,"{'ok': True, 'value': 680, 'stdout': '680\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.0913383960723877}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [34, 38, 59, 36, 20, 25, 19, 5, 30, 34, 43, 4, 44, 35, 27, 14, 58, 25, 17, 13]"
76,ilp_partition,20,1,42,0,42,0,"{'ok': True, 'value': 13, 'stdout': '13\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21742558479309082}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [11, 8, 17, 54, 49, 13, 1, 25, 37, 32, 1, 3, 23, 4, 10, 45, 27, 31, 36, 54]"
77,ilp_prod,5,74,42,0,58,0,"{'ok': True, 'value': 3333332, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/548e62c2fc94498ba01cc525facb09f0-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/548e62c2fc94498ba01cc525facb09f0-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 8 COLUMNS\nAt line 21 RHS\nAt line 25 BOUNDS\nAt line 29 ENDATA\nProblem MODEL has 3 rows, 3 columns and 9 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nPresolve 3 (0) rows, 3 (0) columns and 9 (0) elements\n0  Obj -0 Dual inf 30 (3)\n2  Obj 75.333333\nOptimal - objective value 75.333333\nOptimal objective 75.33333333 - 2 iterations time 0.002\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n75.3333332\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.17991328239440918}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [6, 14, 10]
consumption (rows=resources) = [[4, 4, 1], [1, 2, 2], [2, 2, 1]]
capacity = [11, 14, 12]
upper_bounds = [3, 3, 7]"
78,rod,10,170,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_yomh0efg/main.py"", line 4\n    dp = [0] * (N + 1)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10093927383422852}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [17, 7, 23, 15, 13, 3, 24, 1, 3, 10]"
79,ilp_assign,5,13,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/9b4ff44f949943298a251bdba7268603-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/9b4ff44f949943298a251bdba7268603-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 15 COLUMNS\nAt line 141 RHS\nAt line 152 BOUNDS\nAt line 178 ENDATA\nProblem MODEL has 10 rows, 25 columns and 50 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 13 - 0.00 seconds\nCgl0004I processed model has 10 rows, 25 columns (25 integer (25 of which binary)) and 50 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 13\nCbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 13 - took 0.00 seconds\nCbc0012I Integer solution of 13 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 13, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 13 to 13\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                13.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_qoslk16s/main.py"", line 26, in <module>\n    print(value(model.objective))\nNameError: name \'value\' is not defined. Did you mean: \'False\'?\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.18615984916687012}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[7, 3, 9, 6, 15], [8, 15, 2, 14, 3], [11, 6, 2, 11, 3], [8, 9, 1, 1, 12], [4, 11, 6, 12, 6]]"
80,knap,20,648,42,0,1144,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_j3y25k9l/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1)) \nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10054230690002441}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [7, 23, 37, 22, 10, 11, 4, 11, 20, 32, 30, 10, 32, 40, 3, 23, 23, 22, 22, 3]
V = [14, 52, 53, 64, 60, 27, 26, 14, 6, 69, 8, 62, 33, 77, 31, 68, 70, 11, 50, 69]
C = 192"
81,ilp_assign,5,25,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_4qp_ywbn/main.py"", line 12, in <module>\n    model += pulp.lpSum(C[i][j] * vars[i][j] for i in range(n) for j in range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 2469, in lpSum\n    return LpAffineExpression().addInPlace(vector)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 968, in addInPlace\n    for e in other:\n  File ""/tmp/cot_exec_4qp_ywbn/main.py"", line 12, in <genexpr>\n    model += pulp.lpSum(C[i][j] * vars[i][j] for i in range(n) for j in range(n))\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.15026307106018066}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[12, 4, 5, 12, 5], [9, 7, 14, 4, 12], [1, 12, 5, 13, 4], [6, 6, 6, 8, 13], [14, 15, 11, 14, 10]]"
82,ilp_assign,10,41,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_aekgzffb/main.py"", line 21, in <module>\n    pulp.lpSolve(prob)\nAttributeError: module \'pulp\' has no attribute \'lpSolve\'. Did you mean: \'LpSolver\'?\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16523051261901855}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[22, 16, 30, 16, 24, 22, 21], [21, 6, 13, 2, 9, 13, 22], [13, 13, 15, 1, 23, 22, 8], [18, 5, 3, 16, 13, 7, 4], [27, 25, 23, 30, 23, 15, 7], [13, 21, 13, 14, 1, 26, 9], [1, 25, 2, 16, 24, 14, 5]]"
83,ilp_assign,20,66,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_ofkzi6oj/main.py"", line 12, in <module>\n    model += pulp.lpSum(C[i][j] * vars[i][j] for i in range(n) for j in range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 2469, in lpSum\n    return LpAffineExpression().addInPlace(vector)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 968, in addInPlace\n    for e in other:\n  File ""/tmp/cot_exec_ofkzi6oj/main.py"", line 12, in <genexpr>\n    model += pulp.lpSum(C[i][j] * vars[i][j] for i in range(n) for j in range(n))\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.176530122756958}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[6, 56, 38, 43, 37, 40, 20], [31, 33, 37, 17, 38, 37, 60], [53, 45, 27, 2, 49, 31, 14], [27, 51, 40, 39, 25, 55, 1], [29, 34, 18, 40, 21, 8, 36], [7, 52, 10, 33, 40, 1, 18], [18, 52, 5, 34, 6, 33, 41]]"
84,rod,10,95,42,0,42,0,"{'ok': True, 'value': 95, 'stdout': '95\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08791136741638184}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [4, 19, 22, 21, 1, 23, 4, 14, 3, 7]"
85,lcs,10,3,4,0,5,0,"{'ok': True, 'value': 3, 'stdout': '3\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20659279823303223}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""cabdddbcbc""
T = ""bbbdbaada"""
86,lcs,5,2,3,0,3,0,"{'ok': True, 'value': 2, 'stdout': '2\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20495295524597168}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""addad""
T = ""bacaa"""
87,rod,20,1180,42,0,109,0,"{'ok': True, 'value': 1180, 'stdout': '1180\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08189630508422852}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [59, 17, 29, 17, 39, 7, 17, 4, 49, 11, 27, 44, 1, 17, 8, 59, 33, 15, 56, 14]"
88,knap,10,169,42,0,99,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/2f9aa133809d43e6abf1cfd9c569eeb8-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/2f9aa133809d43e6abf1cfd9c569eeb8-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 6 COLUMNS\nAt line 47 RHS\nAt line 49 BOUNDS\nAt line 60 ENDATA\nProblem MODEL has 1 rows, 10 columns and 10 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 172.474 - 0.00 seconds\nCgl0004I processed model has 1 rows, 9 columns (9 integer (8 of which binary)) and 9 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 1 integers unsatisfied sum - 0.263158\nCbc0038I Pass   1: suminf.    0.05263 (1) obj. -130.895 iterations 1\nCbc0038I Solution found of -111\nCbc0038I Cleaned solution of -111\nCbc0038I Rounding solution of -158 is better than previous of -111\n\nCbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -160.347\nCbc0038I Reduced cost fixing fixed 4 variables on major pass 2\nCbc0038I Pass   2: suminf.    0.26316 (1) obj. -172.474 iterations 0\nCbc0038I Pass   3: suminf.    0.15939 (1) obj. -160.347 iterations 1\nCbc0038I Pass   4: suminf.    0.17647 (1) obj. -160.824 iterations 3\nCbc0038I Pass   5: suminf.    0.11178 (1) obj. -160.347 iterations 2\nCbc0038I Pass   6: suminf.    0.15789 (1) obj. -161.316 iterations 1\nCbc0038I Pass   7: suminf.    0.15939 (1) obj. -160.347 iterations 2\nCbc0038I Pass   8: suminf.    0.17647 (1) obj. -170.176 iterations 2\nCbc0038I Pass   9: suminf.    0.17647 (1) obj. -170.176 iterations 0\nCbc0038I Pass  10: suminf.    0.17647 (1) obj. -160.824 iterations 1\nCbc0038I Pass  11: suminf.    0.17647 (1) obj. -160.824 iterations 0\nCbc0038I Pass  12: suminf.    0.48480 (2) obj. -160.347 iterations 2\nCbc0038I Pass  13: suminf.    0.41203 (1) obj. -160.347 iterations 2\nCbc0038I Solution found of -169\nCbc0038I Cleaned solution of -169\nCbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 9 columns, reduced to 1 rows 3 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -170.495\nCbc0038I Reduced cost fixing fixed 7 variables on major pass 3\nCbc0038I Pass  14: suminf.    0.26316 (1) obj. -172.474 iterations 0\nCbc0038I Pass  15: suminf.    0.35740 (1) obj. -170.495 iterations 1\nCbc0038I Pass  16: suminf.    0.35740 (1) obj. -170.495 iterations 0\nCbc0038I Pass  17: suminf.    0.35740 (1) obj. -170.495 iterations 0\nCbc0038I Pass  18: suminf.    0.35740 (1) obj. -170.495 iterations 0\nCbc0038I Pass  19: suminf.    0.26316 (1) obj. -172.474 iterations 1\nCbc0038I Pass  20: suminf.    0.35740 (1) obj. -170.495 iterations 1\nCbc0038I Pass  21: suminf.    0.35740 (1) obj. -170.495 iterations 0\nCbc0038I Pass  22: suminf.    0.35740 (1) obj. -170.495 iterations 0\nCbc0038I Pass  23: suminf.    0.35740 (1) obj. -170.495 iterations 0\nCbc0038I Pass  24: suminf.    0.16607 (1) obj. -170.495 iterations 1\nCbc0038I Pass  25: suminf.    0.16607 (1) obj. -170.495 iterations 0\nCbc0038I Pass  26: suminf.    0.16607 (1) obj. -170.495 iterations 0\nCbc0038I Pass  27: suminf.    0.16607 (1) obj. -170.495 iterations 0\nCbc0038I Pass  28: suminf.    0.16607 (1) obj. -170.495 iterations 0\nCbc0038I Pass  29: suminf.    0.16607 (1) obj. -170.495 iterations 0\nCbc0038I Pass  30: suminf.    0.16607 (1) obj. -170.495 iterations 0\nCbc0038I Pass  31: suminf.    0.16607 (1) obj. -170.495 iterations 0\nCbc0038I Pass  32: suminf.    0.16607 (1) obj. -170.495 iterations 0\nCbc0038I Pass  33: suminf.    0.16607 (1) obj. -170.495 iterations 0\nCbc0038I Pass  34: suminf.    0.16607 (1) obj. -170.495 iterations 0\nCbc0038I Pass  35: suminf.    0.16607 (1) obj. -170.495 iterations 0\nCbc0038I Pass  36: suminf.    0.16607 (1) obj. -170.495 iterations 0\nCbc0038I Pass  37: suminf.    0.16607 (1) obj. -170.495 iterations 0\nCbc0038I Pass  38: suminf.    0.16607 (1) obj. -170.495 iterations 0\nCbc0038I Pass  39: suminf.    0.16607 (1) obj. -170.495 iterations 0\nCbc0038I Pass  40: suminf.    0.16607 (1) obj. -170.495 iterations 0\nCbc0038I Pass  41: suminf.    0.16607 (1) obj. -170.495 iterations 0\nCbc0038I Pass  42: suminf.    0.16607 (1) obj. -170.495 iterations 0\nCbc0038I Pass  43: suminf.    0.16607 (1) obj. -170.495 iterations 0\nCbc0038I No solution found this major pass\nCbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 9 columns, reduced to 1 rows 2 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -169 - took 0.00 seconds\nCbc0012I Integer solution of -169 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0038I Full problem 1 rows 9 columns, reduced to 1 rows 2 columns\nCbc0006I The LP relaxation is infeasible or too expensive\nCbc0013I At root node, 0 cuts changed objective from -172.47368 to -172.47368 in 1 passes\nCbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0001I Search completed - best objective -169, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 6 variables fixed on reduced cost\nCuts at root node changed objective from -172.474 to -172.474\nProbing was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                169.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n169.0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.18793010711669922}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [19, 7, 11, 2, 17, 10, 2, 14, 4, 20]
V = [21, 9, 1, 23, 16, 40, 23, 34, 28, 16]
C = 53"
89,lcs,20,12,42,0,12,1,"{'ok': True, 'value': 12, 'stdout': '12\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2136681079864502}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""aacdabcbaaadabdbcdaa""
T = ""acbbddbcadabacbddac"""
90,knap,5,35,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_f67yfd4l/main.py"", line 8\n    dp = np.zeros((len(W) + 1, C + 1)) \nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08411979675292969}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [10, 3, 6, 7, 10]
V = [18, 17, 2, 12, 18]
C = 18"
91,ilp_assign,5,20,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/afaf8118ec0e459180850d9f26fa6e62-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/afaf8118ec0e459180850d9f26fa6e62-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 15 COLUMNS\nAt line 141 RHS\nAt line 152 BOUNDS\nAt line 178 ENDATA\nProblem MODEL has 10 rows, 25 columns and 50 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 20 - 0.00 seconds\nCgl0004I processed model has 10 rows, 25 columns (25 integer (25 of which binary)) and 50 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 20\nCbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 20 - took 0.00 seconds\nCbc0012I Integer solution of 20 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 20, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 20 to 20\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                20.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_5nbwhm2d/main.py"", line 26, in <module>\n    print(value(objective_function))\nNameError: name \'value\' is not defined. Did you mean: \'False\'?\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17049336433410645}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[9, 12, 12, 3, 3], [8, 11, 11, 3, 3], [3, 2, 14, 10, 5], [4, 6, 11, 6, 3], [5, 14, 8, 5, 2]]"
92,knap,10,165,42,0,86,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_8u7cp4da/main.py"", line 12\n    dp = np.zeros((K + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1090090274810791}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [20, 8, 18, 15, 10, 14, 13, 20, 1, 3]
V = [26, 10, 38, 14, 31, 26, 32, 7, 27, 11]
C = 61"
93,ilp_prod,15,151,0,0,135,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/87095ba3f471475d989be5ddaafa74a2-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/87095ba3f471475d989be5ddaafa74a2-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 9 COLUMNS\nAt line 52 RHS\nAt line 57 BOUNDS\nAt line 64 ENDATA\nProblem MODEL has 4 rows, 6 columns and 24 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 174.35 - 0.00 seconds\nCgl0004I processed model has 4 rows, 6 columns (6 integer (0 of which binary)) and 24 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0012I Integer solution of -126 found by DiveCoefficient after 0 iterations and 0 nodes (0.00 seconds)\nCbc0038I Full problem 4 rows 6 columns, reduced to 0 rows 0 columns\nCbc0012I Integer solution of -150 found by RINS after 0 iterations and 0 nodes (0.00 seconds)\nCbc0012I Integer solution of -151 found by DiveCoefficient after 4 iterations and 0 nodes (0.00 seconds)\nCbc0013I At root node, 0 cuts changed objective from -158.82105 to -151 in 3 passes\nCbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 1 (Gomory) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0001I Search completed - best objective -151, took 4 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 1 variables fixed on reduced cost\nCuts at root node changed objective from -158.821 to -151\nProbing was tried 3 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 3 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                151.00000000\nEnumerated nodes:               0\nTotal iterations:               4\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n151.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.17312335968017578}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [42, 6, 25, 14, 24, 31]
consumption (rows=resources) = [[6, 1, 11, 8, 1, 12], [9, 9, 11, 11, 11, 13], [1, 7, 2, 13, 7, 11], [11, 15, 9, 13, 2, 11]]
capacity = [55, 41, 42, 43]
upper_bounds = [3, 3, 3, 3, 3, 3]"
94,ilp_partition,5,0,42,0,4,0,"{'ok': True, 'value': 8, 'stdout': '8\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2116532325744629}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [10, 4, 10, 8, 8]"
95,lcs,20,9,42,0,12,0,"{'ok': True, 'value': 8, 'stdout': '8\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20899319648742676}",0,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""dcaaabddbddcaccbcbbc""
T = ""acbaddbbcbdcbdddadaad"""
96,lcs,20,12,42,0,10,0,"{'ok': True, 'value': 12, 'stdout': '12\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21676921844482422}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""daccdbbdbcdaddcbcbdc""
T = ""dbbaabbcdbbadcacbab"""
97,rod,10,260,42,0,42,0,"{'ok': True, 'value': 260, 'stdout': '260\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08150911331176758}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [26, 1, 3, 20, 15, 1, 26, 21, 8, 5]"
98,knap,10,152,42,0,124,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_87kjazz1/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10462737083435059}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [19, 18, 8, 5, 18, 19, 4, 14, 14, 12]
V = [15, 29, 36, 26, 22, 37, 12, 4, 4, 24]
C = 65"
99,lcs,15,8,16,0,6,0,"{'ok': True, 'value': 8, 'stdout': '8\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21515655517578125}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""ddbcdccbaaadadc""
T = ""acdabdadcacaabd"""
100,rod,15,285,42,0,42,0,"{'ok': True, 'value': 285, 'stdout': '285\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.07889938354492188}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [19, 19, 2, 24, 32, 2, 39, 15, 15, 4, 36, 43, 35, 19, 12]"
101,ilp_prod,20,277,169,0,178,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_8ajad82t/main.py"", line 12, in <module>\n    vars = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16582298278808594}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [32, 5, 36, 29, 25, 49]
consumption (rows=resources) = [[7, 19, 18, 20, 8, 12], [11, 20, 11, 13, 19, 13], [8, 6, 19, 2, 15, 1], [19, 12, 2, 3, 19, 1]]
capacity = [68, 77, 80, 68]
upper_bounds = [3, 3, 3, 3, 3, 5]"
102,ilp_assign,15,71,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/4395dae9045e4e2cbd7d2d84e9fd1cd3-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/4395dae9045e4e2cbd7d2d84e9fd1cd3-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 71 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 71\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 71 - took 0.00 seconds\nCbc0012I Integer solution of 71 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 71, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 71 to 71\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                71.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n71.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.17661261558532715}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[29, 7, 8, 4, 45, 4, 5], [41, 3, 10, 13, 27, 44, 20], [41, 35, 36, 15, 19, 42, 6], [34, 5, 40, 17, 33, 20, 29], [32, 40, 18, 28, 28, 16, 2], [24, 7, 11, 44, 43, 40, 10], [33, 45, 10, 30, 11, 40, 1]]"
103,ilp_assign,20,104,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_lpwip0zn/main.py"", line 12, in <module>\n    objective = pulp.lpSum([C[i][j] * vars[i][j] for i in range(n) for j in range(n)])\n  File ""/tmp/cot_exec_lpwip0zn/main.py"", line 12, in <listcomp>\n    objective = pulp.lpSum([C[i][j] * vars[i][j] for i in range(n) for j in range(n)])\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1650378704071045}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[33, 39, 6, 44, 60, 35, 48], [11, 4, 58, 24, 59, 39, 14], [2, 25, 58, 7, 17, 39, 45], [39, 21, 58, 47, 57, 23, 26], [33, 36, 36, 50, 52, 48, 59], [46, 57, 59, 11, 31, 41, 1], [13, 23, 10, 20, 31, 42, 36]]"
104,knap,15,339,42,0,291,0,"{'ok': True, 'value': 339, 'stdout': '339\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2480018138885498}",1,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [3, 2, 10, 16, 2, 4, 21, 10, 26, 28, 20, 12, 26, 30, 12]
V = [16, 14, 17, 59, 13, 11, 22, 18, 56, 56, 43, 48, 21, 24, 59]
C = 111"
105,ilp_assign,5,31,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/843b7d85f3db43109f867fdafedb628a-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/843b7d85f3db43109f867fdafedb628a-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 15 COLUMNS\nAt line 141 RHS\nAt line 152 BOUNDS\nAt line 178 ENDATA\nProblem MODEL has 10 rows, 25 columns and 50 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 31 - 0.00 seconds\nCgl0004I processed model has 10 rows, 25 columns (25 integer (25 of which binary)) and 50 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 31\nCbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 31 - took 0.00 seconds\nCbc0012I Integer solution of 31 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 31, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 31 to 31\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                31.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n31.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.1736011505126953}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[9, 9, 14, 8, 10], [11, 12, 10, 15, 14], [13, 8, 10, 8, 3], [14, 5, 11, 14, 9], [5, 10, 13, 13, 7]]"
106,ilp_prod,5,75,42,0,75,1,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/2dc43954cbe948d2bce38ca313db9ab2-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/2dc43954cbe948d2bce38ca313db9ab2-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 8 COLUMNS\nAt line 21 RHS\nAt line 25 BOUNDS\nAt line 29 ENDATA\nProblem MODEL has 3 rows, 3 columns and 9 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nPresolve 3 (0) rows, 3 (0) columns and 9 (0) elements\n0  Obj -0 Dual inf 42 (3)\n1  Obj 75\nOptimal - objective value 75\nOptimal objective 75 - 1 iterations time 0.002\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n75.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.17143535614013672}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [7, 15, 15]
consumption (rows=resources) = [[3, 4, 3], [4, 4, 1], [4, 3, 2]]
capacity = [16, 12, 10]
upper_bounds = [3, 3, 5]"
107,ilp_prod,15,225,42,0,178,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_029is2k7/main.py"", line 11, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1775808334350586}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [37, 45, 25, 32, 39, 27]
consumption (rows=resources) = [[2, 6, 10, 15, 11, 2], [6, 8, 5, 2, 7, 13], [5, 13, 11, 8, 7, 8], [3, 4, 13, 14, 6, 10]]
capacity = [53, 36, 42, 34]
upper_bounds = [6, 3, 3, 3, 4, 3]"
108,rod,5,60,42,0,42,0,"{'ok': True, 'value': 60, 'stdout': '60\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09534692764282227}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [12, 12, 9, 9, 1]"
109,rod,5,24,42,0,42,0,"{'ok': True, 'value': 24, 'stdout': '24\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09961819648742676}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [4, 10, 8, 14, 15]"
110,ilp_partition,20,1,42,0,42,0,"{'ok': True, 'value': 27, 'stdout': '27\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22528576850891113}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [45, 32, 9, 1, 7, 2, 17, 52, 11, 22, 58, 56, 42, 40, 40, 8, 6, 41, 56, 52]"
111,ilp_assign,5,17,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/cb5a364fcb5642ba93b4c86fd640506a-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/cb5a364fcb5642ba93b4c86fd640506a-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 15 COLUMNS\nAt line 141 RHS\nAt line 152 BOUNDS\nAt line 178 ENDATA\nProblem MODEL has 10 rows, 25 columns and 50 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 17 - 0.00 seconds\nCgl0004I processed model has 10 rows, 25 columns (25 integer (25 of which binary)) and 50 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 17\nCbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 17 - took 0.00 seconds\nCbc0012I Integer solution of 17 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 17, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 17 to 17\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                17.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_ayemgqui/main.py"", line 28, in <module>\n    print(value(objective))\nNameError: name \'value\' is not defined. Did you mean: \'False\'?\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.15705490112304688}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[4, 14, 13, 5, 13], [7, 9, 5, 10, 13], [10, 2, 2, 12, 3], [15, 15, 5, 7, 2], [3, 5, 9, 12, 11]]"
112,ilp_prod,15,190,42,0,129,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_l8p8m_9_/main.py"", line 11, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.14911174774169922}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [20, 38, 15, 16, 14, 37]
consumption (rows=resources) = [[4, 4, 5, 11, 13, 15], [2, 14, 2, 12, 5, 4], [4, 10, 6, 4, 14, 3], [11, 3, 7, 8, 15, 2]]
capacity = [46, 48, 34, 36]
upper_bounds = [3, 3, 5, 4, 3, 3]"
113,ilp_partition,20,0,42,0,42,0,"{'ok': True, 'value': 12, 'stdout': '12\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.25127077102661133}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [5, 23, 58, 51, 51, 55, 58, 3, 41, 25, 23, 42, 2, 34, 43, 23, 56, 60, 32, 43]"
114,knap,15,297,142,0,192,0,"{'ok': True, 'value': 297, 'stdout': '297\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21023797988891602}",1,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [11, 9, 16, 3, 1, 26, 5, 11, 3, 21, 12, 2, 2, 21, 13]
V = [21, 56, 14, 9, 28, 59, 15, 56, 19, 22, 1, 15, 14, 17, 26]
C = 78"
115,ilp_assign,20,102,42,0,157,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/6ed4b65cf84544a8b83e8e890eaa5d48-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/6ed4b65cf84544a8b83e8e890eaa5d48-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 102 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 102\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 102 - took 0.00 seconds\nCbc0012I Integer solution of 102 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 102, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 102 to 102\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                102.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n102.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.1637728214263916}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[53, 55, 45, 17, 14, 44, 59], [21, 34, 24, 13, 58, 7, 12], [4, 27, 6, 17, 35, 14, 34], [55, 32, 51, 49, 18, 37, 57], [53, 56, 51, 5, 22, 14, 41], [11, 22, 50, 53, 46, 49, 16], [58, 46, 53, 13, 16, 42, 29]]"
116,knap,5,29,42,0,22,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_fls_8gq_/main.py"", line 8\n    dp = np.zeros((len(V)+1, C+1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09076428413391113}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [5, 1, 7, 1, 5]
V = [11, 5, 9, 13, 4]
C = 9"
117,ilp_assign,15,65,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_2wnf0_7w/main.py"", line 12, in <module>\n    model += pulp.lpSum(C[i][j] * vars[i][j] for i in range(n) for j in range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 2469, in lpSum\n    return LpAffineExpression().addInPlace(vector)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 968, in addInPlace\n    for e in other:\n  File ""/tmp/cot_exec_2wnf0_7w/main.py"", line 12, in <genexpr>\n    model += pulp.lpSum(C[i][j] * vars[i][j] for i in range(n) for j in range(n))\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1818079948425293}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[43, 41, 14, 14, 29, 13, 34], [5, 6, 27, 27, 28, 40, 36], [43, 30, 12, 32, 37, 17, 7], [13, 20, 7, 41, 24, 20, 23], [6, 1, 14, 21, 7, 40, 14], [29, 44, 26, 25, 35, 13, 16], [28, 28, 9, 23, 18, 41, 24]]"
118,ilp_partition,10,1,42,0,42,0,"{'ok': True, 'value': 3, 'stdout': '3\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21903538703918457}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [7, 7, 21, 29, 14, 4, 11, 19, 19, 30]"
119,rod,20,510,107,0,100,0,"{'ok': True, 'value': 510, 'stdout': '510\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09109020233154297}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [17, 51, 42, 60, 26, 17, 28, 39, 1, 42, 44, 1, 59, 6, 31, 59, 20, 19, 22, 20]"
120,ilp_partition,10,1,42,0,42,0,"{'ok': True, 'value': 17, 'stdout': '17\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22863054275512695}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [21, 23, 2, 22, 29, 2, 20, 8, 2, 24]"
121,ilp_prod,5,66,42,0,58,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_l3s311g0/main.py"", line 10, in <module>\n    x = pulp.LpVariable.dicts(""x"", range(len(profit)), lowBound=0, cat=\'Integer\', upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1496140956878662}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [14, 13, 12]
consumption (rows=resources) = [[1, 3, 4], [4, 3, 1], [1, 1, 1]]
capacity = [16, 14, 17]
upper_bounds = [3, 4, 4]"
122,ilp_prod,5,18,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_0cbwv25_/main.py"", line 12, in <module>\n    vars = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1479930877685547}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [9, 5, 5]
consumption (rows=resources) = [[3, 2, 4], [5, 5, 1], [5, 5, 5]]
capacity = [12, 16, 14]
upper_bounds = [3, 3, 3]"
123,ilp_partition,5,1,4,0,4,0,"{'ok': True, 'value': 9, 'stdout': '9\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21607542037963867}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [5, 3, 11, 5, 1]"
124,ilp_partition,10,1,42,0,4,0,"{'ok': True, 'value': 13, 'stdout': '13\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21276140213012695}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [2, 12, 6, 28, 26, 18, 22, 6, 14, 27]"
125,rod,5,75,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'no_fenced_code', 'retcode': None, 'timeout': False, 'duration_s': 0.0}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [15, 4, 7, 8, 11]"
126,lcs,15,9,14,0,8,0,"{'ok': True, 'value': 9, 'stdout': '9\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21559548377990723}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""abbdccddaabcadc""
T = ""bacacbdcacaddbba"""
127,ilp_assign,20,71,42,0,116,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/ef1ab00908b5428d8ca8e7956619adce-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/ef1ab00908b5428d8ca8e7956619adce-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 71 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 71\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 71 - took 0.00 seconds\nCbc0012I Integer solution of 71 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 71, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 71 to 71\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                71.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\nOptimal\n71.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.15629792213439941}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[44, 36, 44, 32, 32, 57, 33], [48, 7, 3, 15, 4, 11, 11], [10, 31, 23, 48, 54, 44, 55], [40, 11, 41, 33, 13, 7, 16], [33, 41, 50, 7, 46, 39, 43], [36, 60, 55, 37, 1, 15, 23], [31, 35, 6, 12, 58, 45, 36]]"
128,ilp_assign,10,40,42,0,42,0,"{'ok': True, 'value': 40, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/7600e8a10ce449c7a17a1e975d6f4286-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/7600e8a10ce449c7a17a1e975d6f4286-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 40 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 40\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 40 - took 0.00 seconds\nCbc0012I Integer solution of 40 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 40, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 40 to 40\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                40.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n40\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.16637539863586426}",1,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[23, 5, 6, 22, 25, 1, 20], [18, 1, 2, 3, 25, 18, 12], [30, 16, 2, 22, 28, 17, 21], [22, 18, 3, 15, 15, 19, 30], [22, 1, 9, 12, 15, 3, 12], [3, 6, 6, 25, 19, 1, 19], [13, 7, 19, 22, 8, 5, 16]]"
129,ilp_partition,15,1,42,0,42,0,"{'ok': True, 'value': 11, 'stdout': '11\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22486352920532227}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [42, 2, 27, 20, 43, 12, 9, 21, 41, 3, 16, 42, 24, 37, 24]"
130,ilp_prod,20,215,42,0,178,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_83hxzh7a/main.py"", line 12, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, cat=\'Integer\', up=upper_bounds)\nTypeError: LpVariable.dicts() got an unexpected keyword argument \'up\'\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.14816713333129883}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [23, 11, 11, 38, 7, 59]
consumption (rows=resources) = [[16, 5, 9, 9, 16, 12], [2, 16, 15, 11, 7, 1], [19, 12, 20, 4, 11, 12], [20, 5, 19, 3, 2, 2]]
capacity = [47, 57, 61, 43]
upper_bounds = [3, 3, 3, 5, 3, 3]"
131,lcs,15,9,42,0,6,0,"{'ok': True, 'value': 9, 'stdout': '9\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2055211067199707}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""ddbbddadaabcbaa""
T = ""babcacbbdabcaba"""
132,ilp_prod,10,50,42,0,62,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_l6743ycg/main.py"", line 7, in <module>\n    vars = pulp.LpVariable.dicts(""x"", range(len(profit)), lowBound=0, cat=\'Integer\')\nNameError: name \'profit\' is not defined\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16340947151184082}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [10, 10, 6, 10, 5]
consumption (rows=resources) = [[5, 9, 6, 2, 2], [10, 10, 6, 4, 9], [5, 5, 2, 3, 7], [4, 8, 3, 4, 2]]
capacity = [33, 22, 32, 24]
upper_bounds = [3, 3, 3, 5, 3]"
133,lcs,10,6,4,0,5,0,"{'ok': True, 'value': 6, 'stdout': '6\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22085952758789062}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""abaaddaaca""
T = ""dbcdaccddca"""
134,ilp_partition,15,1,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_vvnxh3q0/main.py"", line 8\n    x = LpVariable.dicts(\'x\', range(num_items), cat=\'Binary\')\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.0997474193572998}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [41, 38, 35, 29, 19, 34, 34, 37, 5, 10, 21, 20, 22, 9, 1]"
135,ilp_assign,5,31,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_ibjfys0h/main.py"", line 8\n    tasks = range(5)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10570907592773438}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[7, 14, 11, 7, 2], [7, 15, 4, 14, 14], [8, 15, 6, 15, 3], [10, 11, 2, 4, 2], [13, 13, 7, 15, 5]]"
136,lcs,5,3,3,1,3,1,"{'ok': True, 'value': 3, 'stdout': '3\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22091150283813477}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""bbdca""
T = ""abcac"""
137,rod,5,45,42,0,42,0,"{'ok': True, 'value': 45, 'stdout': '45\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08690428733825684}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [9, 11, 10, 9, 5]"
138,ilp_assign,20,50,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/38b3da2eeb0548d6b36454142ea800a0-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/38b3da2eeb0548d6b36454142ea800a0-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 50 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 50\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 50 - took 0.00 seconds\nCbc0012I Integer solution of 50 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 50, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 50 to 50\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                50.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n50.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.16785883903503418}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[39, 49, 47, 21, 4, 29, 5], [28, 9, 37, 45, 56, 1, 44], [23, 42, 21, 7, 47, 32, 20], [41, 38, 15, 57, 7, 49, 24], [26, 16, 34, 10, 27, 57, 17], [10, 48, 11, 5, 59, 27, 19], [6, 5, 4, 9, 7, 10, 11]]"
139,ilp_prod,10,90,42,0,102,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_xi31ac8l/main.py"", line 11\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, cat=\'Integer\', upBound=upper_bounds)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.07873272895812988}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [17, 28, 30, 29, 21]
consumption (rows=resources) = [[6, 5, 6, 6, 6], [1, 2, 7, 5, 5], [1, 9, 8, 5, 1], [8, 6, 7, 8, 10]]
capacity = [37, 36, 27, 25]
upper_bounds = [3, 3, 3, 3, 3]"
140,knap,10,162,42,0,84,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/7988121ff2144f66b0593aefe9bb39c3-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/7988121ff2144f66b0593aefe9bb39c3-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 6 COLUMNS\nAt line 47 RHS\nAt line 49 BOUNDS\nAt line 60 ENDATA\nProblem MODEL has 1 rows, 10 columns and 10 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 166.667 - 0.00 seconds\nCgl0004I processed model has 1 rows, 10 columns (10 integer (10 of which binary)) and 10 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 1 integers unsatisfied sum - 0.444444\nCbc0038I Solution found of -156\nCbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 10 columns, reduced to 0 rows 0 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -157.967\nCbc0038I Reduced cost fixing fixed 3 variables on major pass 2\nCbc0038I Pass   1: suminf.    0.06344 (1) obj. -157.967 iterations 2\nCbc0038I Pass   2: suminf.    0.28571 (1) obj. -164.857 iterations 1\nCbc0038I Pass   3: suminf.    0.07584 (1) obj. -157.967 iterations 4\nCbc0038I Solution found of -161\nCbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 10 columns, reduced to 1 rows 2 columns\nCbc0038I Mini branch and bound improved solution from -161 to -162 (0.00 seconds)\nCbc0038I Round again with cutoff of -163.733\nCbc0038I Reduced cost fixing fixed 8 variables on major pass 3\nCbc0038I Pass   4: suminf.    0.32222 (1) obj. -163.733 iterations 1\nCbc0038I Pass   5: suminf.    0.44444 (1) obj. -166.667 iterations 1\nCbc0038I Pass   6: suminf.    0.32222 (1) obj. -163.733 iterations 1\nCbc0038I Pass   7: suminf.    0.44444 (1) obj. -166.667 iterations 1\nCbc0038I Pass   8: suminf.    0.32222 (1) obj. -163.733 iterations 1\nCbc0038I Pass   9: suminf.    0.32222 (1) obj. -163.733 iterations 0\nCbc0038I Pass  10: suminf.    0.32222 (1) obj. -163.733 iterations 0\nCbc0038I Pass  11: suminf.    0.32222 (1) obj. -163.733 iterations 0\nCbc0038I Pass  12: suminf.    0.32222 (1) obj. -163.733 iterations 0\nCbc0038I Pass  13: suminf.    0.32222 (1) obj. -163.733 iterations 0\nCbc0038I Pass  14: suminf.    0.32222 (1) obj. -163.733 iterations 0\nCbc0038I Pass  15: suminf.    0.32222 (1) obj. -163.733 iterations 0\nCbc0038I Pass  16: suminf.    0.44444 (1) obj. -166.222 iterations 2\nCbc0038I Pass  17: suminf.    0.44444 (1) obj. -166.222 iterations 0\nCbc0038I Pass  18: suminf.    0.32222 (1) obj. -163.733 iterations 2\nCbc0038I Pass  19: suminf.    0.32222 (1) obj. -163.733 iterations 0\nCbc0038I Pass  20: suminf.    0.32222 (1) obj. -163.733 iterations 0\nCbc0038I Pass  21: suminf.    0.32222 (1) obj. -163.733 iterations 0\nCbc0038I Pass  22: suminf.    0.32222 (1) obj. -163.733 iterations 0\nCbc0038I Pass  23: suminf.    0.32222 (1) obj. -163.733 iterations 0\nCbc0038I Pass  24: suminf.    0.32222 (1) obj. -163.733 iterations 0\nCbc0038I Pass  25: suminf.    0.44444 (1) obj. -166.222 iterations 2\nCbc0038I Pass  26: suminf.    0.44444 (1) obj. -166.222 iterations 0\nCbc0038I Pass  27: suminf.    0.32222 (1) obj. -163.733 iterations 2\nCbc0038I Pass  28: suminf.    0.44444 (1) obj. -166.222 iterations 2\nCbc0038I Pass  29: suminf.    0.44444 (1) obj. -166.222 iterations 0\nCbc0038I Pass  30: suminf.    0.44444 (1) obj. -166.222 iterations 0\nCbc0038I Pass  31: suminf.    0.32222 (1) obj. -163.733 iterations 2\nCbc0038I Pass  32: suminf.    0.32222 (1) obj. -163.733 iterations 0\nCbc0038I Pass  33: suminf.    0.32222 (1) obj. -163.733 iterations 0\nCbc0038I No solution found this major pass\nCbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -162 - took 0.00 seconds\nCbc0012I Integer solution of -162 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0038I Full problem 1 rows 10 columns, reduced to 0 rows 0 columns\nCbc0001I Search completed - best objective -162, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 8 variables fixed on reduced cost\nCuts at root node changed objective from -166.667 to -156\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                162.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n162.0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.1712949275970459}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [9, 7, 9, 13, 2, 2, 5, 16, 14, 10]
V = [24, 26, 23, 40, 13, 19, 18, 17, 31, 40]
C = 43"
141,rod,5,35,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_gi4jlz8w/main.py"", line 2\n    dp = [0] * (N + 1)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08818197250366211}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [7, 5, 8, 10, 6]"
142,lcs,20,12,42,0,10,0,"{'ok': True, 'value': 12, 'stdout': '12\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21591520309448242}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""abaccaacabbcadccdbad""
T = ""dabacdbbdbabcbcdddbd"""
143,lcs,5,2,3,0,3,0,"{'ok': True, 'value': 2, 'stdout': '2\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2055819034576416}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""cbcaa""
T = ""babd"""
144,lcs,5,3,3,1,3,1,"{'ok': True, 'value': 3, 'stdout': '3\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20641279220581055}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""badbc""
T = ""bdbd"""
145,lcs,20,10,42,0,10,1,"{'ok': True, 'value': 10, 'stdout': '10\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2043764591217041}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""cadbbacaadcddabcacbc""
T = ""bbbabcdbaccbcbabdddbd"""
146,rod,20,1180,164,0,102,0,"{'ok': True, 'value': 1180, 'stdout': '1180\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09063577651977539}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [59, 55, 9, 5, 2, 48, 8, 49, 47, 30, 31, 12, 53, 2, 38, 42, 53, 30, 17, 32]"
147,lcs,20,12,42,0,12,1,"{'ok': True, 'value': 12, 'stdout': '12\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22516918182373047}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""abadccbabccdcaaaddab""
T = ""addabacababbabcbcdcb"""
148,ilp_assign,5,10,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_5qvdgizj/main.py"", line 8\n    tasks = range(5)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08809208869934082}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[3, 4, 1, 12, 5], [6, 1, 10, 2, 8], [4, 13, 4, 11, 3], [2, 1, 4, 1, 12], [12, 2, 2, 13, 13]]"
149,ilp_prod,5,45,,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_st9g5dn7/main.py"", line 10, in <module>\n    x = pulp.LpVariable.dicts(""x"", range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16939568519592285}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [15, 12, 11]
consumption (rows=resources) = [[5, 2, 5], [4, 2, 5], [2, 5, 4]]
capacity = [16, 13, 11]
upper_bounds = [3, 3, 3]"
150,ilp_assign,20,64,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_qpo0nx_h/main.py"", line 13, in <module>\n    objective = pulp.lpSum([C[i][j] * variables[i][j] for i in range(n) for j in range(n)])\n  File ""/tmp/cot_exec_qpo0nx_h/main.py"", line 13, in <listcomp>\n    objective = pulp.lpSum([C[i][j] * variables[i][j] for i in range(n) for j in range(n)])\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16038942337036133}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[49, 44, 58, 31, 28, 52, 48], [42, 4, 56, 6, 11, 11, 48], [11, 52, 45, 49, 37, 1, 29], [50, 9, 44, 14, 1, 22, 29], [44, 1, 20, 38, 8, 51, 54], [2, 47, 29, 7, 54, 48, 36], [34, 42, 51, 36, 30, 36, 5]]"
151,rod,15,360,42,0,42,0,"{'ok': True, 'value': 360, 'stdout': '360\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08070707321166992}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [24, 30, 31, 32, 1, 13, 22, 13, 7, 22, 30, 3, 45, 12, 17]"
152,knap,15,369,42,0,198,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_b_jj7__n/main.py"", line 10\n    dp = np.zeros((num_items + 1, C + 1)) \nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08075308799743652}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [9, 24, 30, 6, 27, 2, 1, 19, 7, 7, 6, 24, 30, 23, 4]
V = [41, 24, 4, 43, 46, 43, 43, 20, 8, 39, 11, 14, 1, 4, 59]
C = 109"
153,knap,5,40,42,0,32,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_zn6to_6w/main.py"", line 8\n    dp = np.zeros((len(V)+1, C+1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08839821815490723}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [3, 2, 8, 5, 1]
V = [2, 18, 2, 17, 5]
C = 9"
154,ilp_assign,20,84,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec__g8woqkc/main.py"", line 11, in <module>\n    model += variables[i, j] * C[i][j]\nKeyError: (0, 0)\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17248249053955078}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[12, 26, 19, 40, 44, 33, 59], [34, 7, 29, 19, 46, 49, 42], [49, 6, 27, 34, 36, 9, 56], [36, 20, 12, 15, 51, 25, 8], [5, 54, 9, 38, 43, 27, 40], [21, 32, 41, 55, 27, 2, 1], [16, 38, 13, 47, 39, 21, 5]]"
155,knap,15,344,42,0,199,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/10af392b9b354e09bd25545a4d8b3103-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/10af392b9b354e09bd25545a4d8b3103-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 6 COLUMNS\nAt line 67 RHS\nAt line 69 BOUNDS\nAt line 85 ENDATA\nProblem MODEL has 1 rows, 15 columns and 15 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 344.048 - 0.00 seconds\nCgl0004I processed model has 1 rows, 15 columns (15 integer (15 of which binary)) and 15 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 1 integers unsatisfied sum - 0.047619\nCbc0038I Pass   1: suminf.    0.04762 (1) obj. -344.048 iterations 0\nCbc0038I Solution found of -305\nCbc0038I Rounding solution of -344 is better than previous of -305\n\nCbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -344 - took 0.00 seconds\nCbc0012I Integer solution of -344 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective -344, took 1 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 14 variables fixed on reduced cost\nCuts at root node changed objective from -344.048 to -305\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                344.00000000\nEnumerated nodes:               0\nTotal iterations:               1\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n344.0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.1571640968322754}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [4, 20, 2, 5, 15, 13, 29, 28, 10, 8, 6, 16, 8, 21, 19]
V = [15, 39, 17, 34, 49, 27, 52, 30, 38, 37, 45, 19, 9, 41, 43]
C = 102"
156,rod,10,170,42,0,42,0,"{'ok': True, 'value': 170, 'stdout': '170\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08657145500183105}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [17, 24, 16, 12, 23, 4, 15, 11, 1, 8]"
157,lcs,5,2,3,0,3,0,"{'ok': True, 'value': 2, 'stdout': '2\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2295701503753662}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""acabb""
T = ""bcca"""
158,rod,20,250,42,0,102,0,"{'ok': True, 'value': 250, 'stdout': '250\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08914589881896973}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [8, 5, 2, 50, 39, 27, 21, 10, 21, 41, 34, 24, 57, 58, 29, 24, 27, 28, 47, 36]"
159,ilp_assign,10,26,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec__cscvzfh/main.py"", line 12, in <module>\n    model += pulp.lpSum(C[i][j] * variables[i][j] for i in range(n) for j in range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 2469, in lpSum\n    return LpAffineExpression().addInPlace(vector)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 968, in addInPlace\n    for e in other:\n  File ""/tmp/cot_exec__cscvzfh/main.py"", line 12, in <genexpr>\n    model += pulp.lpSum(C[i][j] * variables[i][j] for i in range(n) for j in range(n))\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16111230850219727}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[14, 28, 14, 1, 17, 21, 13], [7, 15, 26, 13, 18, 28, 20], [29, 6, 26, 2, 2, 1, 11], [19, 3, 12, 20, 30, 30, 13], [7, 20, 23, 12, 28, 15, 10], [3, 9, 3, 15, 23, 25, 18], [6, 23, 14, 3, 1, 15, 26]]"
160,rod,20,1040,42,0,102,0,"{'ok': True, 'value': 1040, 'stdout': '1040\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09436178207397461}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [52, 6, 26, 24, 38, 12, 47, 35, 21, 2, 45, 24, 47, 9, 7, 3, 13, 35, 5, 17]"
161,knap,20,698,42,0,351,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'Traceback (most recent call last):\n  File ""/tmp/cot_exec_vdy67fny/main.py"", line 11, in <module>\n    max_value = max(max_value, V[i] + knapsack(W[:i], V[:i], j - W[i]))\nNameError: name \'knapsack\' is not defined\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.21565961837768555}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [32, 34, 39, 27, 12, 20, 15, 34, 29, 12, 26, 10, 27, 3, 31, 6, 14, 9, 34, 25]
V = [32, 28, 24, 59, 78, 34, 71, 67, 58, 34, 66, 44, 32, 26, 56, 12, 75, 74, 51, 6]
C = 219"
162,ilp_prod,20,291,42,0,285,0,"{'ok': True, 'value': 22857163, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/0cba7a0bcd0744f5b21c2de0b27f3bd3-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/0cba7a0bcd0744f5b21c2de0b27f3bd3-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 15 COLUMNS\nAt line 52 RHS\nAt line 63 BOUNDS\nAt line 64 ENDATA\nProblem MODEL has 10 rows, 6 columns and 30 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nPresolve 4 (-6) rows, 6 (0) columns and 24 (-6) elements\n0  Obj -0 Dual inf 84.976011 (6)\n4  Obj 305.22857\nOptimal - objective value 305.22857\nAfter Postsolve, objective 305.22857, infeasibilities - dual 0 (0), primal 0 (0)\nOptimal objective 305.2285714 - 4 iterations time 0.002, Presolve 0.00\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n305.22857163\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.18465805053710938}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [10, 57, 60, 19, 25, 21]
consumption (rows=resources) = [[5, 13, 15, 17, 11, 5], [6, 11, 7, 7, 6, 14], [9, 11, 20, 8, 19, 11], [19, 1, 11, 12, 20, 20]]
capacity = [70, 60, 76, 62]
upper_bounds = [3, 5, 3, 4, 3, 3]"
163,lcs,20,11,42,0,10,0,"{'ok': True, 'value': 11, 'stdout': '11\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21053361892700195}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""ccabcbbddabcddbabddc""
T = ""aaaacdacbdadbbaaccadc"""
164,rod,20,980,164,0,107,0,"{'ok': True, 'value': 980, 'stdout': '980\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.10024261474609375}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [49, 20, 35, 60, 39, 17, 15, 12, 14, 10, 42, 20, 32, 53, 44, 45, 13, 8, 44, 11]"
165,ilp_assign,15,22,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/540ccbbad46d4ef48f146c6a6139e12c-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/540ccbbad46d4ef48f146c6a6139e12c-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 22 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 22\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 22 - took 0.00 seconds\nCbc0012I Integer solution of 22 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 22, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 22 to 22\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                22.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n22.0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.18360280990600586}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[26, 4, 40, 15, 20, 22, 22], [33, 39, 3, 1, 27, 19, 1], [7, 9, 38, 19, 7, 3, 18], [4, 39, 31, 32, 4, 14, 13], [4, 23, 18, 24, 33, 15, 21], [21, 32, 3, 38, 41, 9, 9], [37, 13, 42, 16, 4, 6, 3]]"
166,rod,10,105,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_rgd3bdak/main.py"", line 4\n    dp = [0 for i in range(N + 1)]\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09076213836669922}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [4, 21, 1, 8, 16, 30, 3, 7, 11, 7]"
167,lcs,15,7,42,0,8,0,"{'ok': True, 'value': 7, 'stdout': '7\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20493769645690918}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""cbbbbdcddacadcd""
T = ""aacdabbadabaccaa"""
168,ilp_partition,5,1,4,0,4,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'Traceback (most recent call last):\n  File ""/tmp/cot_exec_lro1b0yh/main.py"", line 30, in <module>\n    print(min_difference(weights))\nNameError: name \'weights\' is not defined\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.2115483283996582}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [15, 15, 10, 1, 8]"
169,ilp_partition,15,0,42,0,42,0,"{'ok': True, 'value': 14, 'stdout': '14\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20389795303344727}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [13, 34, 22, 12, 32, 39, 27, 14, 33, 42, 4, 28, 15, 23, 34]"
170,lcs,15,8,12,0,7,0,"{'ok': True, 'value': 8, 'stdout': '8\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21275687217712402}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""cbdbcbcdabdaccc""
T = ""daabdbdccdccbd"""
171,lcs,5,1,3,0,3,0,"{'ok': True, 'value': 1, 'stdout': '1\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22242045402526855}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""aaada""
T = ""bbdb"""
172,lcs,20,10,42,0,10,1,"{'ok': True, 'value': 10, 'stdout': '10\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20731806755065918}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""cbacababccacdccaccbc""
T = ""bacaddcbdbbbbdbabcb"""
173,ilp_assign,5,19,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/d0a7f6053d824e0f81febd0cf2af3f8f-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/d0a7f6053d824e0f81febd0cf2af3f8f-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 15 COLUMNS\nAt line 141 RHS\nAt line 152 BOUNDS\nAt line 178 ENDATA\nProblem MODEL has 10 rows, 25 columns and 50 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 19 - 0.00 seconds\nCgl0004I processed model has 10 rows, 25 columns (25 integer (25 of which binary)) and 50 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 19\nCbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 19 - took 0.00 seconds\nCbc0012I Integer solution of 19 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 19, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 19 to 19\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                19.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n19.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.16863679885864258}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[8, 9, 6, 6, 7], [11, 2, 4, 10, 3], [4, 11, 10, 5, 15], [10, 7, 10, 8, 6], [1, 8, 1, 15, 2]]"
174,ilp_partition,20,1,42,0,42,0,"{'ok': True, 'value': 39, 'stdout': '39\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22955846786499023}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [26, 13, 55, 35, 5, 45, 8, 20, 34, 33, 48, 56, 29, 17, 50, 25, 41, 6, 46, 13]"
175,ilp_partition,5,0,42,0,4,0,"{'ok': True, 'value': 0, 'stdout': '0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20819377899169922}",1,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [5, 14, 2, 8, 13]"
176,rod,20,590,189,0,102,0,"{'ok': True, 'value': 590, 'stdout': '590\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08816838264465332}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [18, 59, 8, 25, 9, 45, 36, 21, 55, 57, 56, 2, 30, 10, 37, 42, 34, 9, 12, 45]"
177,rod,10,260,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_c_be1gym/main.py"", line 8\n    for i in range(1, N + 1):\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10019564628601074}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [26, 5, 25, 16, 23, 25, 30, 5, 30, 29]"
178,lcs,20,11,42,0,10,0,"{'ok': True, 'value': 11, 'stdout': '11\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22471308708190918}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""bbbacaacaaacbadbcdca""
T = ""dbdcbacadbddcabbcaab"""
179,ilp_partition,5,1,42,0,2,0,"{'ok': True, 'value': 13, 'stdout': '13\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21868562698364258}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [8, 8, 14, 9, 8]"
180,rod,15,300,42,0,42,0,"{'ok': True, 'value': 300, 'stdout': '300\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09974241256713867}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [20, 9, 17, 42, 43, 2, 10, 12, 12, 40, 25, 8, 16, 26, 11]"
181,lcs,5,2,3,0,3,0,"{'ok': True, 'value': 2, 'stdout': '2\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21979928016662598}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""acaaa""
T = ""accddb"""
182,rod,5,17,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_h9mg5pbw/main.py"", line 2\n    dp = [0] * (N + 1)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09762191772460938}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [3, 5, 11, 1, 7]"
183,lcs,10,5,4,0,4,0,"{'ok': True, 'value': 5, 'stdout': '5\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22134065628051758}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""bbabdbadca""
T = ""aaddbbdad"""
184,lcs,5,3,3,1,3,1,"{'ok': True, 'value': 3, 'stdout': '3\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20802593231201172}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""cbcdb""
T = ""adcdb"""
185,ilp_assign,15,77,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/cd5509609da644bb918269d3c316944b-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/cd5509609da644bb918269d3c316944b-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 77 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 77\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 77 - took 0.00 seconds\nCbc0012I Integer solution of 77 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 77, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 77 to 77\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                77.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_4otcv2m8/main.py"", line 27, in <module>\n    print(value(cost))\nNameError: name \'value\' is not defined. Did you mean: \'False\'?\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1716594696044922}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[44, 23, 16, 43, 41, 15, 39], [23, 2, 38, 22, 38, 10, 5], [6, 24, 37, 42, 34, 23, 31], [30, 23, 41, 6, 30, 41, 27], [4, 25, 13, 36, 19, 3, 21], [15, 43, 26, 2, 26, 32, 28], [20, 29, 14, 41, 25, 37, 18]]"
186,ilp_assign,10,33,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/71eae45801884256b2d9bcc07a3fab34-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/71eae45801884256b2d9bcc07a3fab34-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 33 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 33\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 33 - took 0.00 seconds\nCbc0012I Integer solution of 33 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 33, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 33 to 33\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                33.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n33.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.1706831455230713}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[12, 20, 13, 4, 29, 26, 20], [20, 7, 11, 1, 14, 15, 24], [7, 6, 1, 17, 9, 15, 8], [29, 26, 3, 3, 7, 30, 20], [24, 5, 30, 8, 26, 8, 23], [28, 18, 12, 17, 17, 1, 19], [17, 7, 15, 2, 28, 4, 6]]"
187,lcs,20,11,42,0,10,0,"{'ok': True, 'value': 11, 'stdout': '11\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21230030059814453}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""cadabaaacbbadaccbadd""
T = ""adcabcdabdddacabaca"""
188,ilp_prod,20,275,42,0,292,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_94_nqlk0/main.py"", line 10\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.0910639762878418}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [25, 57, 48, 54, 55, 29]
consumption (rows=resources) = [[13, 15, 18, 17, 12, 18], [2, 15, 14, 12, 9, 4], [6, 8, 9, 9, 13, 18], [4, 5, 13, 9, 7, 3]]
capacity = [66, 45, 71, 65]
upper_bounds = [5, 3, 3, 3, 5, 3]"
189,ilp_assign,20,71,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'Traceback (most recent call last):\n  File ""/tmp/cot_exec_2r4d7vzt/main.py"", line 3, in <module>\n    model = pulp.LpProblem(\'Assignment Problem\', pulp.LpMinimize)\nNameError: name \'pulp\' is not defined\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08867216110229492}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[30, 8, 60, 52, 57, 29, 14], [11, 35, 55, 4, 57, 7, 3], [4, 31, 35, 41, 48, 12, 40], [9, 58, 8, 40, 39, 39, 34], [48, 26, 34, 51, 25, 56, 42], [57, 4, 38, 43, 39, 54, 57], [46, 26, 3, 20, 43, 43, 6]]"
190,knap,5,36,42,0,35,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_srmp48_o/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08560395240783691}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [4, 7, 9, 7, 3]
V = [16, 9, 20, 11, 8]
C = 15"
191,ilp_partition,20,1,42,0,42,0,"{'ok': True, 'value': 1, 'stdout': '1\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20886540412902832}",1,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [24, 56, 47, 39, 54, 3, 24, 12, 13, 5, 6, 16, 25, 36, 3, 32, 2, 48, 45, 53]"
192,knap,20,573,42,0,614,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_4_kd87f5/main.py"", line 8\n    dp = np.zeros((len(W) + 1, C + 1)) \nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09167361259460449}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [27, 6, 18, 35, 37, 21, 1, 23, 2, 7, 11, 15, 37, 3, 9, 27, 35, 36, 10, 28]
V = [47, 67, 39, 23, 34, 8, 41, 51, 48, 6, 8, 1, 42, 55, 15, 24, 61, 3, 44, 78]
C = 194"
193,ilp_prod,10,84,42,0,90,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_6umuoiiy/main.py"", line 12, in <module>\n    x = pulp.LpVariable.dicts(""x"", range(len(profit)), lowBound=0, cat=\'Integer\', up=upper_bounds)\nTypeError: LpVariable.dicts() got an unexpected keyword argument \'up\'\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.18225646018981934}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [13, 12, 4, 12, 28]
consumption (rows=resources) = [[8, 1, 6, 5, 9], [4, 5, 5, 3, 5], [9, 6, 9, 2, 1], [3, 3, 7, 6, 6]]
capacity = [35, 25, 29, 20]
upper_bounds = [3, 4, 3, 3, 3]"
194,lcs,20,12,42,0,8,0,"{'ok': True, 'value': 12, 'stdout': '12\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20387649536132812}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""acacbbbcdacbabbacbbc""
T = ""dcabcddcabbcbddcdaddc"""
195,lcs,5,2,3,0,3,0,"{'ok': True, 'value': 2, 'stdout': '2\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21174097061157227}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""abadb""
T = ""ddbcd"""
196,lcs,20,12,42,0,10,0,"{'ok': True, 'value': 12, 'stdout': '12\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2135927677154541}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""dcddacbaadcddbbbbbdd""
T = ""badcaddaccbdabdacdccb"""
197,rod,15,150,42,0,42,0,"{'ok': True, 'value': 150, 'stdout': '150\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09001016616821289}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [9, 11, 18, 41, 24, 3, 19, 13, 25, 41, 41, 5, 30, 4, 10]"
198,knap,10,111,42,0,95,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'Traceback (most recent call last):\n  File ""/tmp/cot_exec_3xikzfec/main.py"", line 10, in <module>\n    model = PuLP.LpProblem(""Knapsack"", PuLP.LpMaximize)\nNameError: name \'PuLP\' is not defined\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.2025308609008789}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [13, 19, 18, 5, 17, 3, 20, 19, 20, 13]
V = [17, 26, 32, 3, 19, 11, 18, 25, 18, 8]
C = 73"
199,lcs,5,3,3,1,3,1,"{'ok': True, 'value': 3, 'stdout': '3\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.19804596900939941}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""aadbd""
T = ""abddbc"""
200,knap,10,156,67,0,79,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_jypqp68q/main.py"", line 8\n    dp = np.zeros((N + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08291840553283691}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [8, 7, 10, 4, 19, 1, 2, 20, 11, 3]
V = [34, 12, 30, 35, 6, 27, 9, 35, 3, 9]
C = 42"
201,knap,15,361,42,0,282,0,"{'ok': True, 'value': 361, 'stdout': '361\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2088015079498291}",1,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [23, 27, 27, 27, 28, 10, 2, 1, 23, 27, 2, 14, 28, 12, 28]
V = [3, 33, 30, 38, 47, 44, 30, 41, 33, 19, 35, 26, 26, 44, 49]
C = 139"
202,ilp_assign,15,57,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/05aad12fc20d4756bd1b21a984ee233a-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/05aad12fc20d4756bd1b21a984ee233a-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 57 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 57\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 57 - took 0.00 seconds\nCbc0012I Integer solution of 57 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 57, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 57 to 57\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                57.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_tiu_oivy/main.py"", line 25, in <module>\n    print(int(value(model.objective)))\nNameError: name \'value\' is not defined. Did you mean: \'False\'?\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.19367313385009766}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[36, 3, 29, 16, 13, 5, 1], [28, 10, 1, 4, 35, 18, 21], [5, 15, 1, 35, 9, 7, 23], [41, 13, 18, 31, 12, 43, 30], [40, 10, 35, 21, 11, 26, 38], [14, 20, 39, 44, 43, 17, 30], [29, 9, 12, 12, 11, 32, 27]]"
203,ilp_partition,20,0,42,0,42,0,"{'ok': True, 'value': 18, 'stdout': '18\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.19916319847106934}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [39, 55, 23, 52, 36, 29, 11, 21, 12, 21, 43, 59, 41, 25, 19, 23, 9, 48, 8, 6]"
204,ilp_partition,5,1,4,0,4,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'Traceback (most recent call last):\n  File ""/tmp/cot_exec_xlcoh44h/main.py"", line 30, in <module>\n    print(min_difference(weights))\nNameError: name \'weights\' is not defined\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.22417259216308594}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [10, 5, 11, 3, 6]"
205,lcs,15,9,12,0,6,0,"{'ok': True, 'value': 9, 'stdout': '9\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.19525909423828125}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""addcccaabbaabbd""
T = ""badababbcbcbccd"""
206,knap,20,693,42,0,745,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_h2tj4le9/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08181238174438477}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [28, 31, 19, 28, 32, 8, 29, 28, 20, 11, 22, 38, 18, 40, 28, 32, 18, 38, 29, 13]
V = [21, 50, 78, 67, 77, 4, 64, 33, 50, 65, 1, 38, 52, 15, 38, 73, 77, 4, 69, 21]
C = 255"
207,lcs,15,10,12,0,6,0,"{'ok': True, 'value': 10, 'stdout': '10\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20028376579284668}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""acaddaadbdcaaab""
T = ""cacbaadbcaacbb"""
208,rod,15,300,42,0,42,0,"{'ok': True, 'value': 300, 'stdout': '300\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08401060104370117}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [20, 36, 17, 18, 34, 33, 25, 16, 34, 15, 22, 20, 18, 37, 21]"
209,lcs,20,9,42,0,12,0,"{'ok': True, 'value': 9, 'stdout': '9\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.1936964988708496}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""dcacdaabbbccbcbddcdb""
T = ""cbcdaddbdcbadabaaabab"""
210,lcs,5,1,3,0,3,0,"{'ok': True, 'value': 1, 'stdout': '1\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21120333671569824}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""aaabb""
T = ""bccc"""
211,rod,10,140,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'no_fenced_code', 'retcode': None, 'timeout': False, 'duration_s': 0.0}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [14, 17, 20, 20, 21, 3, 7, 29, 14, 12]"
212,lcs,20,11,42,0,12,0,"{'ok': True, 'value': 11, 'stdout': '11\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20569515228271484}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""adadbcabbaaabadacbaa""
T = ""dbbdacbccbaadbcaaccc"""
213,lcs,5,2,3,0,3,0,"{'ok': True, 'value': 2, 'stdout': '2\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.19639277458190918}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""cccac""
T = ""dbac"""
214,knap,10,147,42,0,85,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_d4exk10p/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09141969680786133}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [5, 4, 15, 17, 7, 6, 7, 9, 12, 11]
V = [23, 17, 37, 10, 2, 15, 17, 31, 39, 35]
C = 46"
215,ilp_assign,10,52,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_bajfo3nb/main.py"", line 11, in <module>\n    model += variables[i, j] * C[i][j]\nKeyError: (0, 0)\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1748805046081543}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[30, 14, 17, 13, 20, 15, 4], [26, 7, 2, 13, 7, 18, 23], [7, 14, 17, 27, 24, 17, 23], [20, 28, 17, 20, 16, 25, 12], [21, 4, 13, 21, 22, 25, 10], [17, 26, 12, 11, 28, 6, 29], [28, 14, 22, 26, 18, 8, 7]]"
216,ilp_partition,5,1,42,0,6,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'Traceback (most recent call last):\n  File ""/tmp/cot_exec_4xjeplob/main.py"", line 32, in <module>\n    print(min_difference(weights))\nNameError: name \'weights\' is not defined\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.19985008239746094}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [10, 10, 6, 1, 14]"
217,rod,20,420,107,0,164,0,"{'ok': True, 'value': 420, 'stdout': '420\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09481096267700195}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [21, 11, 42, 48, 12, 20, 36, 33, 17, 2, 15, 6, 34, 50, 49, 31, 55, 55, 55, 57]"
218,lcs,5,2,3,0,3,0,"{'ok': True, 'value': 2, 'stdout': '2\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2224268913269043}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""dccdc""
T = ""adbbda"""
219,rod,5,60,42,0,42,0,"{'ok': True, 'value': 60, 'stdout': '60\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09890246391296387}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [12, 10, 1, 13, 2]"
220,ilp_prod,10,139,42,0,122,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_phlclnl7/main.py"", line 12, in <module>\n    x = pulp.LpVariable.dicts(""x"", range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.14713573455810547}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [10, 15, 29, 28, 12]
consumption (rows=resources) = [[9, 3, 5, 3, 5], [9, 2, 5, 9, 2], [4, 8, 7, 2, 1], [7, 8, 1, 5, 8]]
capacity = [35, 31, 25, 26]
upper_bounds = [3, 3, 3, 3, 3]"
221,ilp_prod,5,104,118,0,95,0,"{'ok': True, 'value': 22222248, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/f8ca4068546e4f7dbb6dca8dd37a1f71-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/f8ca4068546e4f7dbb6dca8dd37a1f71-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 8 COLUMNS\nAt line 21 RHS\nAt line 25 BOUNDS\nAt line 29 ENDATA\nProblem MODEL has 3 rows, 3 columns and 9 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nPresolve 3 (0) rows, 3 (0) columns and 9 (0) elements\n0  Obj -0 Dual inf 46 (3)\n3  Obj 104.22222\nOptimal - objective value 104.22222\nOptimal objective 104.2222222 - 3 iterations time 0.002\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n104.22222248\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.16324496269226074}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [7, 13, 13]
consumption (rows=resources) = [[5, 1, 5], [1, 2, 4], [5, 1, 4]]
capacity = [10, 16, 19]
upper_bounds = [3, 8, 3]"
222,knap,15,223,142,0,177,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_9jz_ba4v/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09014678001403809}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [24, 5, 8, 24, 28, 6, 11, 22, 23, 1, 4, 5, 29, 7, 5]
V = [36, 33, 4, 25, 49, 9, 9, 22, 31, 30, 7, 2, 25, 10, 25]
C = 101"
223,knap,5,21,42,0,30,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_mc4j5iz9/main.py"", line 8\n    dp = np.zeros((len(V)+1, C+1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08706998825073242}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [7, 2, 4, 10, 7]
V = [7, 10, 4, 1, 4]
C = 15"
224,rod,5,50,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_k8tqpsc1/main.py"", line 2\n    dp = [0] * (N + 1)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09029817581176758}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [10, 6, 15, 14, 8]"
225,ilp_assign,20,123,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/a1cb38446c774da98d18a81582265fe8-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/a1cb38446c774da98d18a81582265fe8-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 123 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 123\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 123 - took 0.00 seconds\nCbc0012I Integer solution of 123 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 123, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 123 to 123\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                123.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.01\n\n123.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.1723804473876953}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[26, 5, 35, 13, 13, 21, 53], [43, 15, 60, 19, 44, 53, 51], [55, 31, 19, 59, 34, 20, 28], [28, 19, 21, 46, 51, 41, 31], [30, 45, 41, 39, 53, 46, 28], [25, 30, 47, 53, 50, 13, 13], [12, 55, 14, 51, 23, 14, 29]]"
226,knap,5,37,42,0,31,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_1oix7ufv/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08999919891357422}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [6, 5, 2, 10, 3]
V = [4, 8, 13, 8, 16]
C = 13"
227,rod,5,40,42,0,42,0,"{'ok': True, 'value': 40, 'stdout': '40\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08902096748352051}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [8, 10, 3, 9, 13]"
228,rod,10,60,42,0,37,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_f6byqja6/main.py"", line 4\n    dp = [0 for i in range(N + 1)]\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09043526649475098}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [6, 9, 1, 10, 8, 23, 28, 2, 16, 2]"
229,ilp_assign,5,17,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_ib8z7aq0/main.py"", line 12, in <module>\n    objective = pulp.lpSum(C[i][j] * vars[i][j] for i in range(n) for j in range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 2469, in lpSum\n    return LpAffineExpression().addInPlace(vector)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 968, in addInPlace\n    for e in other:\n  File ""/tmp/cot_exec_ib8z7aq0/main.py"", line 12, in <genexpr>\n    objective = pulp.lpSum(C[i][j] * vars[i][j] for i in range(n) for j in range(n))\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17151975631713867}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[15, 4, 4, 2, 10], [3, 10, 9, 2, 12], [5, 8, 4, 13, 1], [6, 8, 6, 15, 10], [12, 6, 4, 15, 15]]"
230,ilp_partition,5,2,42,0,3,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'Traceback (most recent call last):\n  File ""/tmp/cot_exec_5cegd92k/main.py"", line 30, in <module>\n    print(min_difference(weights))\nNameError: name \'weights\' is not defined\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.22044968605041504}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [7, 1, 7, 9, 12]"
231,knap,15,366,42,0,321,0,"{'ok': True, 'value': 366, 'stdout': '366\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2194066047668457}",1,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [10, 25, 19, 21, 19, 16, 10, 22, 9, 4, 18, 21, 9, 29, 6]
V = [12, 34, 48, 39, 11, 28, 45, 20, 60, 26, 26, 15, 59, 11, 27]
C = 119"
232,ilp_prod,20,264,42,0,228,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_kscfu_bb/main.py"", line 10\n    x_j = [pulp.LpVariable(f\'x_{i}\', lowBound=0, upBound=upper_bounds[i]) for i in range(len(profit))]\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08748412132263184}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [39, 24, 30, 35, 60, 47]
consumption (rows=resources) = [[6, 3, 7, 5, 1, 1], [2, 14, 14, 8, 13, 14], [16, 4, 19, 13, 9, 16], [16, 7, 11, 5, 13, 8]]
capacity = [71, 71, 44, 77]
upper_bounds = [3, 5, 3, 3, 4, 3]"
233,ilp_partition,10,0,42,0,42,0,"{'ok': True, 'value': 12, 'stdout': '12\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22206950187683105}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [26, 27, 21, 20, 2, 17, 20, 28, 20, 23]"
234,ilp_partition,5,1,4,0,4,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'Traceback (most recent call last):\n  File ""/tmp/cot_exec_ud7c8yu1/main.py"", line 30, in <module>\n    print(min_difference(weights))\nNameError: name \'weights\' is not defined\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.21784543991088867}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [4, 5, 6, 13, 11]"
235,ilp_prod,10,103,42,0,90,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_3k8cx6nt/main.py"", line 12, in <module>\n    x = pulp.LpVariable.dicts(""x"", range(len(profit)), lowBound=0, cat=\'Integer\', up=upper_bounds)\nTypeError: LpVariable.dicts() got an unexpected keyword argument \'up\'\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16262269020080566}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [17, 26, 5, 8, 23]
consumption (rows=resources) = [[5, 8, 6, 3, 4], [1, 5, 8, 9, 9], [8, 10, 5, 4, 1], [5, 8, 3, 4, 4]]
capacity = [25, 29, 22, 28]
upper_bounds = [3, 3, 3, 3, 3]"
236,knap,5,29,42,0,30,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_h0_5dx3c/main.py"", line 8\n    dp = np.zeros((len(V)+1, C+1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09953474998474121}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [4, 9, 4, 4, 6]
V = [9, 3, 3, 17, 12]
C = 13"
237,ilp_prod,5,29,36,0,58,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'no_fenced_code', 'retcode': None, 'timeout': False, 'duration_s': 0.0}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [4, 12, 5]
consumption (rows=resources) = [[5, 5, 3], [5, 3, 5], [3, 4, 2]]
capacity = [19, 13, 11]
upper_bounds = [3, 3, 3]"
238,ilp_prod,10,96,42,0,115,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_j6geh07a/main.py"", line 10, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16011357307434082}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [12, 11, 30, 17, 5]
consumption (rows=resources) = [[2, 6, 8, 5, 9], [4, 9, 6, 4, 3], [3, 5, 4, 7, 1], [7, 7, 4, 3, 2]]
capacity = [22, 25, 34, 39]
upper_bounds = [5, 3, 3, 4, 3]"
239,lcs,10,6,4,0,5,0,"{'ok': True, 'value': 6, 'stdout': '6\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.206773042678833}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""dacccdbcbc""
T = ""dbadcbbacd"""
240,ilp_prod,20,179,42,0,165,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_x3wcpyv4/main.py"", line 10\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08762812614440918}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [56, 13, 13, 11, 11, 6]
consumption (rows=resources) = [[8, 19, 2, 12, 6, 3], [8, 2, 5, 8, 16, 17], [14, 20, 8, 3, 3, 5], [13, 16, 17, 3, 18, 20]]
capacity = [73, 46, 62, 43]
upper_bounds = [3, 3, 3, 5, 3, 3]"
241,rod,5,25,42,0,42,0,"{'ok': True, 'value': 25, 'stdout': '25\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09280943870544434}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [5, 8, 5, 3, 9]"
242,knap,15,375,42,0,335,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/bfcb68526f4e4ad192f8fe641d46c8e0-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/bfcb68526f4e4ad192f8fe641d46c8e0-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 6 COLUMNS\nAt line 67 RHS\nAt line 69 BOUNDS\nAt line 85 ENDATA\nProblem MODEL has 1 rows, 15 columns and 15 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 380.042 - 0.00 seconds\nCgl0004I processed model has 1 rows, 15 columns (15 integer (15 of which binary)) and 15 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 1 integers unsatisfied sum - 0.458333\nCbc0038I Solution found of -364\nCbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 15 columns, reduced to 0 rows 0 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -366.504\nCbc0038I Reduced cost fixing fixed 8 variables on major pass 2\nCbc0038I Pass   1: suminf.    0.07155 (1) obj. -366.504 iterations 1\nCbc0038I Pass   2: suminf.    0.45833 (1) obj. -380.042 iterations 1\nCbc0038I Pass   3: suminf.    0.12869 (1) obj. -366.504 iterations 4\nCbc0038I Pass   4: suminf.    0.20833 (1) obj. -369.292 iterations 1\nCbc0038I Pass   5: suminf.    0.12869 (1) obj. -366.504 iterations 1\nCbc0038I Pass   6: suminf.    0.80307 (2) obj. -366.504 iterations 3\nCbc0038I Pass   7: suminf.    0.12869 (1) obj. -366.504 iterations 3\nCbc0038I Pass   8: suminf.    0.33333 (1) obj. -373.667 iterations 1\nCbc0038I Pass   9: suminf.    0.00000 (0) obj. -375 iterations 2\nCbc0038I Solution found of -375\nCbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 15 columns, reduced to 1 rows 4 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -376.808\nCbc0038I Reduced cost fixing fixed 12 variables on major pass 3\nCbc0038I Pass  10: suminf.    0.36595 (1) obj. -376.808 iterations 0\nCbc0038I Pass  11: suminf.    0.45833 (1) obj. -380.042 iterations 1\nCbc0038I Pass  12: suminf.    0.07534 (1) obj. -376.808 iterations 3\nCbc0038I Pass  13: suminf.    0.37500 (1) obj. -377.125 iterations 2\nCbc0038I Pass  14: suminf.    0.36595 (1) obj. -376.808 iterations 1\nCbc0038I Pass  15: suminf.    0.36595 (1) obj. -376.808 iterations 0\nCbc0038I Pass  16: suminf.    0.36595 (1) obj. -376.808 iterations 3\nCbc0038I Pass  17: suminf.    0.38889 (1) obj. -378.667 iterations 2\nCbc0038I Pass  18: suminf.    0.38889 (1) obj. -378.667 iterations 0\nCbc0038I Pass  19: suminf.    0.38889 (1) obj. -378.667 iterations 0\nCbc0038I Pass  20: suminf.    0.38889 (1) obj. -378.667 iterations 0\nCbc0038I Pass  21: suminf.    0.38889 (1) obj. -378.667 iterations 0\nCbc0038I Pass  22: suminf.    0.38889 (1) obj. -378.667 iterations 0\nCbc0038I Pass  23: suminf.    0.38889 (1) obj. -378.667 iterations 0\nCbc0038I Pass  24: suminf.    0.38889 (1) obj. -378.667 iterations 0\nCbc0038I Pass  25: suminf.    0.36595 (1) obj. -376.808 iterations 2\nCbc0038I Pass  26: suminf.    0.45833 (1) obj. -380.042 iterations 1\nCbc0038I Pass  27: suminf.    0.45833 (1) obj. -380.042 iterations 0\nCbc0038I Pass  28: suminf.    0.07534 (1) obj. -376.808 iterations 3\nCbc0038I Pass  29: suminf.    0.37500 (1) obj. -377.125 iterations 2\nCbc0038I Pass  30: suminf.    0.36595 (1) obj. -376.808 iterations 1\nCbc0038I Pass  31: suminf.    0.36595 (1) obj. -376.808 iterations 0\nCbc0038I Pass  32: suminf.    0.07534 (1) obj. -376.808 iterations 1\nCbc0038I Pass  33: suminf.    0.07534 (1) obj. -376.808 iterations 0\nCbc0038I Pass  34: suminf.    0.07534 (1) obj. -376.808 iterations 0\nCbc0038I Pass  35: suminf.    0.07534 (1) obj. -376.808 iterations 0\nCbc0038I Pass  36: suminf.    0.07534 (1) obj. -376.808 iterations 0\nCbc0038I Pass  37: suminf.    0.38889 (1) obj. -378.667 iterations 4\nCbc0038I Pass  38: suminf.    0.38889 (1) obj. -378.667 iterations 0\nCbc0038I Pass  39: suminf.    0.36595 (1) obj. -376.808 iterations 2\nCbc0038I No solution found this major pass\nCbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 15 columns, reduced to 1 rows 3 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -375 - took 0.00 seconds\nCbc0012I Integer solution of -375 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0038I Full problem 1 rows 15 columns, reduced to 1 rows 2 columns\nCbc0006I The LP relaxation is infeasible or too expensive\nCbc0013I At root node, 0 cuts changed objective from -380.04167 to -380.04167 in 1 passes\nCbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0001I Search completed - best objective -375, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 12 variables fixed on reduced cost\nCuts at root node changed objective from -380.042 to -380.042\nProbing was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                375.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n375.0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.18788504600524902}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [24, 13, 6, 19, 25, 21, 12, 3, 18, 27, 15, 10, 16, 29, 24]
V = [60, 24, 13, 22, 25, 53, 50, 54, 24, 11, 57, 29, 24, 17, 35]
C = 131"
243,knap,15,318,42,0,42,0,"{'ok': True, 'value': 318, 'stdout': '318\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2175450325012207}",1,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [8, 8, 13, 23, 19, 12, 20, 20, 18, 24, 2, 10, 15, 17, 30]
V = [55, 45, 23, 42, 1, 10, 31, 32, 49, 53, 2, 3, 26, 42, 45]
C = 119"
244,knap,15,326,42,0,262,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_frdhzicl/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08731865882873535}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [24, 26, 8, 7, 4, 5, 20, 30, 28, 9, 12, 23, 30, 24, 11]
V = [28, 17, 27, 23, 43, 15, 5, 30, 52, 15, 41, 18, 41, 1, 56]
C = 130"
245,knap,10,169,42,0,91,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_omyntgwx/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09530854225158691}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [1, 5, 14, 12, 9, 16, 2, 13, 4, 10]
V = [27, 16, 15, 34, 38, 28, 37, 17, 1, 1]
C = 43"
246,ilp_prod,15,124,186,0,195,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_hpst_dn0/main.py"", line 11, in <module>\n    x = pulp.LpVariable.dicts(""x"", range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17181015014648438}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [44, 27, 21, 36, 28, 44]
consumption (rows=resources) = [[11, 1, 3, 1, 14, 14], [13, 4, 14, 15, 12, 4], [10, 15, 7, 12, 10, 6], [6, 8, 10, 6, 1, 13]]
capacity = [31, 33, 32, 57]
upper_bounds = [3, 3, 3, 3, 3, 3]"
247,rod,15,345,42,0,42,0,"{'ok': True, 'value': 345, 'stdout': '345\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.10110664367675781}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [23, 42, 15, 43, 40, 11, 40, 1, 42, 25, 25, 37, 3, 11, 41]"
248,lcs,5,3,3,1,3,1,"{'ok': True, 'value': 3, 'stdout': '3\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20505905151367188}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""cbbba""
T = ""bbcdb"""
249,knap,20,602,42,0,1428,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_phytoy1s/main.py"", line 8\n    dp = np.zeros((len(V)+1, C+1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1164255142211914}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [18, 10, 12, 2, 4, 39, 3, 32, 12, 24, 15, 36, 14, 2, 36, 35, 35, 18, 38, 15]
V = [63, 75, 69, 6, 14, 12, 42, 58, 61, 31, 55, 28, 3, 17, 25, 21, 35, 3, 48, 59]
C = 200"
250,knap,15,270,42,0,283,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/aa8ac38909364c7db8de456785529a01-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/aa8ac38909364c7db8de456785529a01-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 6 COLUMNS\nAt line 67 RHS\nAt line 69 BOUNDS\nAt line 85 ENDATA\nProblem MODEL has 1 rows, 15 columns and 15 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 279 - 0.00 seconds\nCgl0004I processed model has 1 rows, 15 columns (15 integer (15 of which binary)) and 15 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 1 integers unsatisfied sum - 0.5\nCbc0038I Solution found of -267\nCbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 15 columns, reduced to 0 rows 0 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -269.1\nCbc0038I Reduced cost fixing fixed 9 variables on major pass 2\nCbc0038I Pass   1: suminf.    0.08750 (1) obj. -269.1 iterations 1\nCbc0038I Pass   2: suminf.    0.41379 (1) obj. -276.931 iterations 2\nCbc0038I Pass   3: suminf.    0.35588 (1) obj. -269.1 iterations 1\nCbc0038I Pass   4: suminf.    0.35588 (1) obj. -269.1 iterations 0\nCbc0038I Pass   5: suminf.    0.46419 (2) obj. -269.1 iterations 3\nCbc0038I Pass   6: suminf.    0.37931 (1) obj. -270.103 iterations 1\nCbc0038I Pass   7: suminf.    0.40883 (1) obj. -269.1 iterations 1\nCbc0038I Pass   8: suminf.    0.67736 (2) obj. -269.1 iterations 3\nCbc0038I Pass   9: suminf.    0.46765 (1) obj. -269.1 iterations 1\nCbc0038I Pass  10: suminf.    0.37931 (1) obj. -272.103 iterations 1\nCbc0038I Pass  11: suminf.    0.46300 (2) obj. -269.1 iterations 3\nCbc0038I Pass  12: suminf.    0.46300 (2) obj. -269.1 iterations 0\nCbc0038I Pass  13: suminf.    0.33750 (1) obj. -269.1 iterations 1\nCbc0038I Pass  14: suminf.    0.33750 (1) obj. -269.1 iterations 0\nCbc0038I Pass  15: suminf.    0.46090 (2) obj. -269.1 iterations 2\nCbc0038I Pass  16: suminf.    0.41698 (2) obj. -269.1 iterations 1\nCbc0038I Pass  17: suminf.    0.33750 (1) obj. -269.1 iterations 2\nCbc0038I Pass  18: suminf.    0.46090 (2) obj. -269.1 iterations 2\nCbc0038I Pass  19: suminf.    0.64165 (2) obj. -269.1 iterations 2\nCbc0038I Pass  20: suminf.    0.64165 (2) obj. -269.1 iterations 0\nCbc0038I Pass  21: suminf.    0.64165 (2) obj. -269.1 iterations 0\nCbc0038I Pass  22: suminf.    0.64165 (2) obj. -269.1 iterations 0\nCbc0038I Pass  23: suminf.    0.64165 (2) obj. -269.1 iterations 0\nCbc0038I Pass  24: suminf.    0.00000 (0) obj. -270 iterations 3\nCbc0038I Solution found of -270\nCbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 15 columns, reduced to 1 rows 5 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -272.6\nCbc0038I Reduced cost fixing fixed 12 variables on major pass 3\nCbc0038I Pass  25: suminf.    0.23333 (1) obj. -272.6 iterations 0\nCbc0038I Pass  26: suminf.    0.41379 (1) obj. -276.931 iterations 2\nCbc0038I Pass  27: suminf.    0.45882 (1) obj. -272.6 iterations 1\nCbc0038I Pass  28: suminf.    0.48570 (2) obj. -272.6 iterations 1\nCbc0038I Pass  29: suminf.    0.40000 (2) obj. -272.6 iterations 1\nCbc0038I Pass  30: suminf.    0.48333 (1) obj. -272.6 iterations 1\nCbc0038I Pass  31: suminf.    0.48333 (1) obj. -272.6 iterations 0\nCbc0038I Pass  32: suminf.    0.48333 (1) obj. -272.6 iterations 0\nCbc0038I Pass  33: suminf.    0.48333 (1) obj. -272.6 iterations 0\nCbc0038I Pass  34: suminf.    0.23333 (1) obj. -272.6 iterations 1\nCbc0038I Pass  35: suminf.    0.41379 (1) obj. -276.931 iterations 2\nCbc0038I Pass  36: suminf.    0.45882 (1) obj. -272.6 iterations 1\nCbc0038I Pass  37: suminf.    0.45882 (1) obj. -272.6 iterations 0\nCbc0038I Pass  38: suminf.    0.45882 (1) obj. -272.6 iterations 0\nCbc0038I Pass  39: suminf.    0.45882 (1) obj. -272.6 iterations 0\nCbc0038I Pass  40: suminf.    0.48570 (2) obj. -272.6 iterations 1\nCbc0038I Pass  41: suminf.    0.40000 (2) obj. -272.6 iterations 1\nCbc0038I Pass  42: suminf.    0.48333 (1) obj. -272.6 iterations 1\nCbc0038I Pass  43: suminf.    0.48333 (1) obj. -272.6 iterations 0\nCbc0038I Pass  44: suminf.    0.48333 (1) obj. -272.6 iterations 0\nCbc0038I Pass  45: suminf.    0.48333 (1) obj. -272.6 iterations 0\nCbc0038I Pass  46: suminf.    0.48333 (1) obj. -272.6 iterations 0\nCbc0038I Pass  47: suminf.    0.48333 (1) obj. -272.6 iterations 0\nCbc0038I Pass  48: suminf.    0.48333 (1) obj. -272.6 iterations 0\nCbc0038I Pass  49: suminf.    0.48333 (1) obj. -272.6 iterations 0\nCbc0038I Pass  50: suminf.    0.40000 (2) obj. -272.6 iterations 2\nCbc0038I Pass  51: suminf.    0.41379 (1) obj. -276.931 iterations 2\nCbc0038I Pass  52: suminf.    0.45882 (1) obj. -272.6 iterations 1\nCbc0038I Pass  53: suminf.    0.41379 (1) obj. -276.931 iterations 1\nCbc0038I Pass  54: suminf.    0.41379 (1) obj. -276.931 iterations 0\nCbc0038I No solution found this major pass\nCbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 15 columns, reduced to 1 rows 3 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -270 - took 0.00 seconds\nCbc0012I Integer solution of -270 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0038I Full problem 1 rows 15 columns, reduced to 0 rows 0 columns\nCbc0006I The LP relaxation is infeasible or too expensive\nCbc0013I At root node, 0 cuts changed objective from -279 to -279 in 1 passes\nCbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0001I Search completed - best objective -270, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 10 variables fixed on reduced cost\nCuts at root node changed objective from -279 to -279\nProbing was tried 1 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                270.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n270.0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.17122292518615723}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [18, 12, 20, 17, 1, 29, 7, 24, 4, 12, 24, 2, 21, 23, 15]
V = [5, 21, 41, 7, 6, 34, 60, 24, 15, 45, 6, 22, 9, 16, 23]
C = 114"
251,ilp_partition,5,0,42,0,4,0,"{'ok': True, 'value': 2, 'stdout': '2\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22126245498657227}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [8, 15, 14, 1, 6]"
252,ilp_assign,15,42,42,1,42,1,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec__3n1qz4r/main.py"", line 9\n    x = pulp.LpVariable.dicts(""x"", ((i, j) for i in range(n) for j in range(n)), cat=\'Binary\')\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09976911544799805}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[22, 22, 17, 4, 2, 33, 5], [16, 26, 37, 12, 34, 38, 36], [3, 34, 13, 42, 16, 16, 33], [22, 28, 21, 4, 45, 42, 1], [36, 42, 40, 29, 22, 22, 11], [15, 32, 1, 26, 3, 19, 36], [28, 1, 19, 10, 9, 41, 26]]"
253,knap,10,143,42,0,89,0,"{'ok': True, 'value': 143, 'stdout': '143\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20079278945922852}",1,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [11, 12, 15, 7, 13, 15, 3, 13, 12, 1]
V = [19, 14, 38, 23, 24, 1, 7, 29, 26, 20]
C = 51"
254,rod,15,555,42,0,42,0,"{'ok': True, 'value': 555, 'stdout': '555\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.10011148452758789}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [37, 25, 17, 16, 39, 40, 6, 42, 32, 11, 24, 36, 43, 37, 11]"
255,ilp_partition,5,1,42,0,4,0,"{'ok': True, 'value': 7, 'stdout': '7\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2141861915588379}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [3, 8, 7, 3, 8]"
256,ilp_prod,20,230,42,0,189,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_m4h50bsk/main.py"", line 11, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17406821250915527}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [5, 35, 34, 44, 32, 9]
consumption (rows=resources) = [[8, 7, 13, 15, 8, 4], [18, 12, 18, 1, 9, 2], [7, 4, 15, 6, 16, 15], [15, 8, 4, 13, 2, 12]]
capacity = [80, 49, 76, 47]
upper_bounds = [3, 4, 3, 3, 4, 3]"
257,ilp_partition,10,1,42,0,42,0,"{'ok': True, 'value': 7, 'stdout': '7\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22484111785888672}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [3, 13, 28, 13, 25, 9, 7, 21, 22, 16]"
258,lcs,5,3,3,1,3,1,"{'ok': True, 'value': 3, 'stdout': '3\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22229528427124023}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""dcdaa""
T = ""dacbd"""
259,ilp_assign,20,44,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/701539f316ee4ecb85785cdf24079017-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/701539f316ee4ecb85785cdf24079017-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 44 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 44\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 44 - took 0.00 seconds\nCbc0012I Integer solution of 44 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 44, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 44 to 44\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                44.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\nOptimal\n44.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.20371007919311523}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[30, 30, 3, 13, 28, 17, 22], [49, 21, 11, 12, 24, 49, 27], [29, 1, 25, 41, 33, 58, 28], [28, 54, 29, 26, 59, 51, 4], [9, 26, 57, 17, 34, 21, 23], [1, 21, 15, 41, 46, 2, 36], [50, 48, 41, 1, 60, 38, 41]]"
260,knap,10,135,42,0,92,0,"{'ok': True, 'value': 135, 'stdout': '135\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21963977813720703}",1,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [12, 19, 9, 17, 8, 7, 18, 1, 4, 7]
V = [18, 11, 21, 15, 11, 3, 39, 15, 25, 17]
C = 51"
261,lcs,15,9,42,0,6,0,"{'ok': True, 'value': 9, 'stdout': '9\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22316551208496094}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""caddaaddcddddda""
T = ""caabddaadcaaadb"""
262,ilp_partition,15,0,42,0,42,0,"{'ok': True, 'value': 8, 'stdout': '8\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2197403907775879}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [42, 30, 15, 30, 20, 19, 9, 41, 35, 25, 4, 7, 13, 32, 16]"
263,rod,10,115,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_cvo971kq/main.py"", line 4\n    dp = [0] * (N + 1)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09676980972290039}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [7, 23, 15, 13, 7, 14, 2, 24, 27, 6]"
264,ilp_prod,15,288,42,0,153,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/124737ba44004a98bb8e3cf62b99f88c-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/124737ba44004a98bb8e3cf62b99f88c-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 15 COLUMNS\nAt line 64 RHS\nAt line 75 BOUNDS\nAt line 82 ENDATA\nProblem MODEL has 10 rows, 6 columns and 30 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 306.178 - 0.00 seconds\nCgl0004I processed model has 4 rows, 6 columns (6 integer (0 of which binary)) and 24 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0012I Integer solution of -288 found by DiveCoefficient after 0 iterations and 0 nodes (0.00 seconds)\nCbc0006I The LP relaxation is infeasible or too expensive\nCbc0013I At root node, 0 cuts changed objective from -306.17797 to -306.17797 in 1 passes\nCbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0001I Search completed - best objective -288, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from -306.178 to -306.178\nProbing was tried 1 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                288.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n288.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.16997456550598145}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [28, 5, 32, 35, 19, 30]
consumption (rows=resources) = [[10, 6, 1, 11, 13, 15], [11, 13, 6, 5, 15, 13], [4, 12, 1, 12, 11, 1], [9, 11, 4, 11, 15, 5]]
capacity = [36, 58, 33, 41]
upper_bounds = [3, 3, 9, 3, 3, 3]"
265,ilp_assign,5,14,42,0,42,0,"{'ok': True, 'value': 99999845999999, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/73a4fbbfb41e445795c47f65dae981cb-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/73a4fbbfb41e445795c47f65dae981cb-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 15 COLUMNS\nAt line 117 RHS\nAt line 128 BOUNDS\nAt line 155 ENDATA\nProblem MODEL has 10 rows, 26 columns and 50 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nProblem is infeasible - 0.00 seconds\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n4.99999845999999\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.18245267868041992}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[2, 1, 10, 3, 9], [11, 2, 13, 3, 4], [4, 3, 5, 15, 13], [2, 1, 13, 6, 15], [12, 3, 2, 14, 8]]"
266,knap,15,345,42,0,199,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/0ba8dff4f76e430099148ae11309dd67-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/0ba8dff4f76e430099148ae11309dd67-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 6 COLUMNS\nAt line 67 RHS\nAt line 69 BOUNDS\nAt line 85 ENDATA\nProblem MODEL has 1 rows, 15 columns and 15 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 354.4 - 0.00 seconds\nCgl0004I processed model has 1 rows, 15 columns (15 integer (15 of which binary)) and 15 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 1 integers unsatisfied sum - 0.4\nCbc0038I Solution found of -342\nCbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 15 columns, reduced to 0 rows 0 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -344.14\nCbc0038I Reduced cost fixing fixed 10 variables on major pass 2\nCbc0038I Pass   1: suminf.    0.06903 (1) obj. -344.14 iterations 1\nCbc0038I Pass   2: suminf.    0.42857 (1) obj. -353 iterations 2\nCbc0038I Pass   3: suminf.    0.17543 (1) obj. -344.14 iterations 1\nCbc0038I Pass   4: suminf.    0.17543 (1) obj. -344.14 iterations 0\nCbc0038I Pass   5: suminf.    0.06903 (1) obj. -344.14 iterations 1\nCbc0038I Pass   6: suminf.    0.09524 (1) obj. -351.667 iterations 3\nCbc0038I Pass   7: suminf.    0.09524 (1) obj. -351.667 iterations 0\nCbc0038I Pass   8: suminf.    0.31029 (1) obj. -344.14 iterations 1\nCbc0038I Pass   9: suminf.    0.44710 (1) obj. -344.14 iterations 2\nCbc0038I Pass  10: suminf.    0.38095 (1) obj. -344.667 iterations 2\nCbc0038I Pass  11: suminf.    0.39600 (1) obj. -344.14 iterations 1\nCbc0038I Pass  12: suminf.    0.38095 (1) obj. -344.667 iterations 1\nCbc0038I Pass  13: suminf.    0.39600 (1) obj. -344.14 iterations 1\nCbc0038I Pass  14: suminf.    0.38095 (1) obj. -344.667 iterations 1\nCbc0038I Pass  15: suminf.    0.05000 (1) obj. -349.45 iterations 2\nCbc0038I Pass  16: suminf.    0.05000 (1) obj. -349.45 iterations 0\nCbc0038I Pass  17: suminf.    0.31029 (1) obj. -344.14 iterations 2\nCbc0038I Pass  18: suminf.    0.09524 (1) obj. -351.667 iterations 1\nCbc0038I Pass  19: suminf.    0.09524 (1) obj. -351.667 iterations 0\nCbc0038I Pass  20: suminf.    0.42857 (1) obj. -353 iterations 3\nCbc0038I Pass  21: suminf.    0.17543 (1) obj. -344.14 iterations 1\nCbc0038I Pass  22: suminf.    0.42857 (1) obj. -353 iterations 1\nCbc0038I Pass  23: suminf.    0.05000 (1) obj. -349.45 iterations 2\nCbc0038I Pass  24: suminf.    0.05000 (1) obj. -349.45 iterations 0\nCbc0038I Pass  25: suminf.    0.02457 (1) obj. -344.14 iterations 4\nCbc0038I Solution found of -345\nCbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 15 columns, reduced to 1 rows 4 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -347.68\nCbc0038I Reduced cost fixing fixed 10 variables on major pass 3\nCbc0038I Pass  26: suminf.    0.18322 (1) obj. -347.68 iterations 0\nCbc0038I Pass  27: suminf.    0.42857 (1) obj. -353 iterations 2\nCbc0038I Pass  28: suminf.    0.27657 (1) obj. -347.68 iterations 1\nCbc0038I Pass  29: suminf.    0.08982 (2) obj. -347.68 iterations 2\nCbc0038I Pass  30: suminf.    0.08982 (2) obj. -347.68 iterations 0\nCbc0038I Pass  31: suminf.    0.42857 (1) obj. -353 iterations 3\nCbc0038I Pass  32: suminf.    0.27657 (1) obj. -347.68 iterations 1\nCbc0038I Pass  33: suminf.    0.18322 (1) obj. -347.68 iterations 1\nCbc0038I Pass  34: suminf.    0.18322 (1) obj. -347.68 iterations 0\nCbc0038I Pass  35: suminf.    0.42857 (1) obj. -353 iterations 2\nCbc0038I Pass  36: suminf.    0.27657 (1) obj. -347.68 iterations 1\nCbc0038I Pass  37: suminf.    0.39130 (1) obj. -349.739 iterations 2\nCbc0038I Pass  38: suminf.    0.27657 (1) obj. -347.68 iterations 2\nCbc0038I Pass  39: suminf.    0.45667 (2) obj. -347.68 iterations 3\nCbc0038I Pass  40: suminf.    0.45667 (2) obj. -347.68 iterations 0\nCbc0038I Pass  41: suminf.    0.45667 (2) obj. -347.68 iterations 0\nCbc0038I Pass  42: suminf.    0.45667 (2) obj. -347.68 iterations 0\nCbc0038I Pass  43: suminf.    0.45667 (2) obj. -347.68 iterations 0\nCbc0038I Pass  44: suminf.    0.18322 (1) obj. -347.68 iterations 2\nCbc0038I Pass  45: suminf.    0.42857 (1) obj. -353 iterations 2\nCbc0038I Pass  46: suminf.    0.18322 (1) obj. -347.68 iterations 2\nCbc0038I Pass  47: suminf.    0.42857 (1) obj. -353 iterations 2\nCbc0038I Pass  48: suminf.    0.27657 (1) obj. -347.68 iterations 1\nCbc0038I Pass  49: suminf.    0.05000 (1) obj. -349.45 iterations 3\nCbc0038I Pass  50: suminf.    0.20915 (1) obj. -347.68 iterations 2\nCbc0038I Pass  51: suminf.    0.09524 (1) obj. -351.667 iterations 1\nCbc0038I Pass  52: suminf.    0.09524 (1) obj. -351.667 iterations 0\nCbc0038I Pass  53: suminf.    0.09524 (1) obj. -351.667 iterations 0\nCbc0038I Pass  54: suminf.    0.05000 (1) obj. -349.45 iterations 1\nCbc0038I Pass  55: suminf.    0.05000 (1) obj. -349.45 iterations 0\nCbc0038I No solution found this major pass\nCbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 15 columns, reduced to 1 rows 5 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -345 - took 0.00 seconds\nCbc0012I Integer solution of -345 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0038I Full problem 1 rows 15 columns, reduced to 1 rows 2 columns\nCbc0031I 1 added rows had average density of 5\nCbc0013I At root node, 7 cuts changed objective from -354.4 to -345 in 2 passes\nCbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 1 (Gomory) - 3 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 6 (TwoMirCuts) - 4 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0001I Search completed - best objective -345, took 5 iterations and 0 nodes (0.01 seconds)\nCbc0035I Maximum depth 0, 10 variables fixed on reduced cost\nCuts at root node changed objective from -354.4 to -345\nProbing was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 2 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 2 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 2 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                345.00000000\nEnumerated nodes:               0\nTotal iterations:               5\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.01\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.01\n\n345.0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.16349148750305176}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [2, 30, 13, 14, 12, 26, 23, 13, 6, 10, 21, 7, 25, 20, 3]
V = [55, 20, 2, 28, 3, 53, 30, 1, 26, 13, 35, 40, 54, 31, 51]
C = 112"
267,ilp_partition,10,0,42,0,42,0,"{'ok': True, 'value': 6, 'stdout': '6\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21486830711364746}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [30, 14, 24, 26, 8, 27, 23, 24, 6, 28]"
268,knap,5,33,42,0,31,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_q8nwol9y/main.py"", line 8\n    dp = np.zeros((len(V)+1, C+1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10828304290771484}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [4, 5, 2, 2, 4]
V = [13, 11, 16, 4, 6]
C = 8"
269,ilp_partition,10,0,42,0,42,0,"{'ok': True, 'value': 16, 'stdout': '16\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2136399745941162}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [7, 25, 25, 27, 21, 6, 21, 9, 20, 23]"
270,knap,20,591,42,0,414,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_yvwt7b7z/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1)) \nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08209395408630371}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [33, 37, 30, 26, 39, 26, 3, 18, 6, 38, 7, 22, 37, 34, 26, 20, 27, 35, 32, 40]
V = [60, 41, 49, 4, 29, 7, 63, 63, 45, 37, 31, 79, 25, 15, 24, 53, 3, 20, 68, 28]
C = 268"
271,ilp_assign,10,37,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_q254khb1/main.py"", line 21, in <module>\n    pulp.lpSolve(prob)\nAttributeError: module \'pulp\' has no attribute \'lpSolve\'. Did you mean: \'LpSolver\'?\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.169036865234375}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[24, 28, 17, 14, 30, 2, 5], [7, 1, 27, 10, 14, 23, 3], [6, 21, 1, 13, 10, 17, 29], [5, 10, 5, 6, 30, 10, 30], [17, 8, 26, 26, 22, 10, 28], [26, 15, 20, 7, 17, 7, 23], [2, 7, 20, 13, 11, 12, 22]]"
272,ilp_assign,5,12,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/80523bda8a6a4c6f90850beb3f591cc3-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/80523bda8a6a4c6f90850beb3f591cc3-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 15 COLUMNS\nAt line 141 RHS\nAt line 152 BOUNDS\nAt line 178 ENDATA\nProblem MODEL has 10 rows, 25 columns and 50 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 12 - 0.00 seconds\nCgl0004I processed model has 10 rows, 25 columns (25 integer (25 of which binary)) and 50 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 12\nCbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 12 - took 0.00 seconds\nCbc0012I Integer solution of 12 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 12, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 12 to 12\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                12.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_mf_1fcrh/main.py"", line 26, in <module>\n    print(value(objective_function))\nNameError: name \'value\' is not defined. Did you mean: \'False\'?\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1742396354675293}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[6, 4, 7, 13, 2], [5, 4, 4, 13, 3], [3, 13, 4, 1, 3], [8, 6, 3, 1, 13], [6, 2, 10, 4, 11]]"
273,rod,20,1060,107,0,107,0,"{'ok': True, 'value': 1060, 'stdout': '1060\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08835053443908691}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [53, 46, 34, 30, 13, 12, 18, 41, 55, 35, 43, 36, 29, 38, 1, 31, 18, 36, 23, 35]"
274,rod,20,1020,107,0,102,0,"{'ok': True, 'value': 1020, 'stdout': '1020\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09874486923217773}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [51, 1, 24, 52, 46, 29, 27, 20, 56, 21, 56, 23, 11, 49, 20, 37, 32, 11, 2, 28]"
275,ilp_prod,5,40,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_3dsaaonc/main.py"", line 12, in <module>\n    vars = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1700148582458496}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [8, 3, 4]
consumption (rows=resources) = [[2, 4, 3], [2, 1, 3], [3, 1, 5]]
capacity = [15, 11, 15]
upper_bounds = [5, 3, 3]"
276,rod,15,285,42,0,42,0,"{'ok': True, 'value': 285, 'stdout': '285\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.10508418083190918}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [19, 23, 40, 34, 9, 26, 8, 40, 25, 24, 15, 1, 7, 14, 45]"
277,ilp_partition,20,1,42,0,42,0,"{'ok': True, 'value': 15, 'stdout': '15\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2112903594970703}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [6, 41, 7, 42, 2, 4, 42, 3, 19, 11, 41, 28, 16, 8, 12, 42, 33, 58, 36, 56]"
278,lcs,5,3,3,1,3,1,"{'ok': True, 'value': 3, 'stdout': '3\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22964072227478027}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""adcda""
T = ""cbbaca"""
279,ilp_prod,15,202,42,0,188,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_jsw_b1vh/main.py"", line 10, in <module>\n    variables = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16324162483215332}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [37, 21, 5, 19, 45, 32]
consumption (rows=resources) = [[1, 10, 4, 15, 13, 3], [15, 9, 3, 7, 15, 6], [10, 3, 13, 13, 11, 8], [8, 6, 10, 2, 13, 2]]
capacity = [49, 54, 48, 49]
upper_bounds = [3, 4, 3, 3, 3, 6]"
280,ilp_partition,10,1,42,0,4,0,"{'ok': True, 'value': 11, 'stdout': '11\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20207905769348145}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [9, 29, 9, 20, 15, 6, 30, 15, 7, 13]"
281,ilp_partition,5,2,42,0,2,1,"{'ok': True, 'value': 6, 'stdout': '6\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21827983856201172}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [11, 3, 9, 4, 7]"
282,rod,20,540,107,0,102,0,"{'ok': True, 'value': 540, 'stdout': '540\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.0798492431640625}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [27, 41, 11, 38, 18, 54, 16, 20, 50, 22, 25, 6, 26, 52, 33, 38, 53, 48, 39, 9]"
283,knap,5,36,42,0,31,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_6uifnavd/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08132028579711914}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [5, 7, 9, 5, 3]
V = [15, 9, 16, 6, 15]
C = 14"
284,ilp_prod,5,45,0,0,57,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_7tqabpur/main.py"", line 13\n    x[f\'x_{j}\'] = pulp.LpVariable(f\'x_{j}\', lowBound=0, upBound=upper_bounds[j])\n    ^\nIndentationError: expected an indented block after \'for\' statement on line 12\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09595322608947754}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [3, 15, 14]
consumption (rows=resources) = [[3, 3, 1], [5, 4, 3], [1, 2, 5]]
capacity = [14, 14, 13]
upper_bounds = [3, 3, 3]"
285,ilp_assign,5,20,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/5f30a81f1d844347ab46c0d6ae530268-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/5f30a81f1d844347ab46c0d6ae530268-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 15 COLUMNS\nAt line 141 RHS\nAt line 152 BOUNDS\nAt line 178 ENDATA\nProblem MODEL has 10 rows, 25 columns and 50 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 20 - 0.00 seconds\nCgl0004I processed model has 10 rows, 25 columns (25 integer (25 of which binary)) and 50 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 20\nCbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 20 - took 0.00 seconds\nCbc0012I Integer solution of 20 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 20, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 20 to 20\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                20.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n20.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.18274474143981934}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[12, 14, 4, 2, 8], [11, 11, 4, 10, 6], [3, 10, 12, 14, 14], [11, 12, 15, 1, 4], [6, 15, 8, 9, 1]]"
286,ilp_prod,15,132,42,0,102,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_ppo5dtwq/main.py"", line 11, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17012262344360352}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [40, 7, 12, 6, 4, 9]
consumption (rows=resources) = [[1, 14, 7, 13, 15, 6], [10, 11, 4, 9, 9, 15], [4, 4, 8, 8, 10, 8], [7, 1, 1, 13, 15, 13]]
capacity = [39, 36, 39, 52]
upper_bounds = [3, 3, 4, 3, 3, 3]"
287,knap,10,164,42,0,95,0,"{'ok': True, 'value': 164, 'stdout': '164\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22269248962402344}",1,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [6, 8, 3, 20, 15, 18, 18, 11, 9, 7]
V = [33, 39, 17, 25, 16, 19, 40, 17, 10, 18]
C = 57"
288,lcs,5,3,3,1,3,1,"{'ok': True, 'value': 3, 'stdout': '3\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22585535049438477}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""abcad""
T = ""cddad"""
289,rod,15,675,42,0,42,0,"{'ok': True, 'value': 675, 'stdout': '675\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.10567140579223633}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [45, 43, 12, 30, 3, 28, 1, 8, 12, 6, 3, 3, 22, 31, 39]"
290,rod,15,171,42,0,42,0,"{'ok': True, 'value': 171, 'stdout': '171\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.11007118225097656}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [10, 23, 22, 35, 34, 33, 35, 11, 11, 41, 13, 38, 14, 14, 35]"
291,lcs,20,12,42,0,10,0,"{'ok': True, 'value': 12, 'stdout': '12\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21660614013671875}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""dbadabddcbcbdcbbcadc""
T = ""ddbbbdbcdddbabcabba"""
292,ilp_prod,5,50,42,0,57,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_ffo8i4p9/main.py"", line 13\n    x[f\'x_{j}\'] = pulp.LpVariable(f\'x_{j}\', lowBound=0, upBound=upper_bounds[j])\n    ^\nIndentationError: expected an indented block after \'for\' statement on line 12\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.12165451049804688}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [6, 10, 15]
consumption (rows=resources) = [[3, 3, 3], [2, 2, 4], [4, 4, 1]]
capacity = [19, 12, 14]
upper_bounds = [3, 3, 3]"
293,rod,5,19,42,0,42,0,"{'ok': True, 'value': 19, 'stdout': '19\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.10488438606262207}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [1, 9, 2, 14, 5]"
294,ilp_partition,5,2,42,0,6,0,"{'ok': True, 'value': 2, 'stdout': '2\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2619354724884033}",1,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [12, 6, 14, 6, 8]"
295,rod,20,1020,177,0,102,0,"{'ok': True, 'value': 1020, 'stdout': '1020\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.1040639877319336}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [51, 60, 48, 37, 50, 45, 8, 53, 44, 1, 17, 9, 15, 30, 36, 16, 45, 5, 53, 20]"
296,knap,10,151,42,0,180,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec__8ru75vq/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09592843055725098}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [10, 17, 20, 14, 6, 19, 16, 10, 19, 20]
V = [17, 3, 26, 35, 38, 27, 10, 21, 11, 30]
C = 75"
297,lcs,15,6,17,0,5,0,"{'ok': True, 'value': 6, 'stdout': '6\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.23534941673278809}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""cabdcbcaaabddad""
T = ""bacadbbbbdbbbc"""
298,lcs,15,8,14,0,8,1,"{'ok': True, 'value': 8, 'stdout': '8\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.3067014217376709}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""abbcadddcddccbb""
T = ""cadcdbaadadbbbad"""
299,ilp_partition,20,0,42,0,42,0,"{'ok': True, 'value': 26, 'stdout': '26\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21082496643066406}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [44, 1, 34, 4, 42, 11, 21, 57, 41, 33, 55, 19, 42, 3, 12, 2, 38, 31, 32, 28]"
300,ilp_prod,5,27,21,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_dxo_5eck/main.py"", line 12, in <module>\n    vars = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.22742319107055664}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [5, 7, 8]
consumption (rows=resources) = [[2, 5, 3], [4, 3, 5], [3, 4, 3]]
capacity = [16, 15, 17]
upper_bounds = [3, 3, 3]"
301,knap,5,20,42,0,23,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_2569rhg_/main.py"", line 8\n    dp = np.zeros((len(V)+1, C+1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09548449516296387}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [3, 2, 3, 1, 4]
V = [14, 2, 2, 3, 17]
C = 6"
302,lcs,5,2,3,0,3,0,"{'ok': True, 'value': 2, 'stdout': '2\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.23246455192565918}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""cabca""
T = ""accd"""
303,rod,20,700,107,0,107,0,"{'ok': True, 'value': 700, 'stdout': '700\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.10330605506896973}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [35, 30, 42, 26, 32, 1, 22, 18, 18, 8, 19, 21, 41, 50, 22, 60, 22, 17, 33, 40]"
304,knap,20,600,42,0,424,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_lq5vpylu/main.py"", line 11\n    dp = np.zeros((N + 1, C + 1), dtype=int)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.11523056030273438}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [5, 38, 28, 35, 33, 11, 34, 18, 39, 34, 15, 25, 40, 39, 29, 12, 34, 36, 34, 30]
V = [31, 30, 62, 21, 49, 44, 39, 12, 74, 62, 8, 33, 80, 20, 33, 41, 65, 68, 52, 65]
C = 284"
305,rod,15,180,42,0,42,0,"{'ok': True, 'value': 180, 'stdout': '180\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.15346789360046387}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [12, 11, 29, 42, 29, 13, 26, 41, 5, 13, 45, 28, 12, 29, 4]"
306,rod,10,280,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_efs2qcli/main.py"", line 4\n    dp = [0] * (N + 1)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.106536865234375}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [28, 12, 25, 4, 19, 24, 23, 22, 25, 4]"
307,ilp_partition,20,1,42,0,42,0,"{'ok': True, 'value': 17, 'stdout': '17\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22251629829406738}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [19, 17, 52, 16, 13, 7, 3, 27, 49, 29, 11, 24, 32, 59, 58, 23, 38, 22, 6, 12]"
308,rod,10,290,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_1xacugu6/main.py"", line 4\n    dp = [0] * (N + 1)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.11504673957824707}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [29, 12, 3, 20, 30, 28, 8, 18, 21, 28]"
309,lcs,15,6,12,0,5,0,"{'ok': True, 'value': 6, 'stdout': '6\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21524786949157715}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""abdddbdddbdaddb""
T = ""babdccacbccacd"""
310,ilp_prod,5,49,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_drod85vb/main.py"", line 12, in <module>\n    vars = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.18441343307495117}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [7, 5, 5]
consumption (rows=resources) = [[1, 4, 4], [1, 1, 1], [2, 4, 4]]
capacity = [20, 18, 14]
upper_bounds = [7, 3, 3]"
311,ilp_prod,10,101,42,0,90,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_c1j_c5ny/main.py"", line 12, in <module>\n    variables = pulp.LpVariable.dicts(""x"", range(len(profit)), cat=""Integer"", lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.15828204154968262}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [19, 25, 8, 4, 21]
consumption (rows=resources) = [[4, 9, 9, 8, 5], [5, 8, 3, 1, 8], [7, 10, 6, 7, 6], [4, 5, 4, 8, 10]]
capacity = [35, 28, 39, 33]
upper_bounds = [5, 3, 3, 4, 3]"
312,rod,20,800,225,0,109,0,"{'ok': True, 'value': 800, 'stdout': '800\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08103084564208984}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [40, 56, 56, 8, 23, 49, 51, 55, 52, 17, 29, 33, 7, 57, 33, 30, 41, 39, 19, 14]"
313,ilp_partition,10,1,42,0,42,0,"{'ok': True, 'value': 13, 'stdout': '13\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.1975088119506836}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [18, 5, 15, 2, 13, 17, 13, 13, 2, 21]"
314,ilp_assign,20,80,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/ad29c0d29fd64d7cb48e9b78dbee25ba-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/ad29c0d29fd64d7cb48e9b78dbee25ba-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 80 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 80\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 80 - took 0.00 seconds\nCbc0012I Integer solution of 80 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 80, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 80 to 80\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                80.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n80.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.18815875053405762}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[17, 40, 44, 17, 26, 23, 3], [37, 33, 33, 14, 34, 44, 13], [18, 32, 11, 36, 50, 9, 28], [39, 47, 39, 6, 41, 31, 42], [18, 3, 44, 33, 35, 23, 59], [58, 45, 24, 40, 22, 49, 17], [4, 27, 26, 9, 50, 34, 26]]"
315,lcs,20,12,42,0,10,0,"{'ok': True, 'value': 12, 'stdout': '12\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.19887208938598633}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""aadccabbacabcacdbbda""
T = ""bbddbabcabacbbddaddd"""
316,ilp_prod,10,120,42,0,72,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/f6a0886729414ae5a1f91e7c9800217e-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/f6a0886729414ae5a1f91e7c9800217e-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 9 COLUMNS\nAt line 45 RHS\nAt line 50 BOUNDS\nAt line 56 ENDATA\nProblem MODEL has 4 rows, 5 columns and 20 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 127.602 - 0.00 seconds\nCgl0004I processed model has 4 rows, 5 columns (5 integer (0 of which binary)) and 20 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0012I Integer solution of -97 found by DiveCoefficient after 0 iterations and 0 nodes (0.00 seconds)\nCbc0038I Full problem 4 rows 5 columns, reduced to 4 rows 3 columns\nCbc0012I Integer solution of -114 found by DiveCoefficient after 208 iterations and 0 nodes (0.01 seconds)\nCbc0031I 2 added rows had average density of 5\nCbc0013I At root node, 2 cuts changed objective from -127.60221 to -120.93444 in 100 passes\nCbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100\nCbc0014I Cut generator 1 (Gomory) - 146 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1\nCbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100\nCbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100\nCbc0010I After 0 nodes, 1 on tree, -114 best solution, best possible -120.93434 (0.01 seconds)\nCbc0012I Integer solution of -120 found by rounding after 212 iterations and 2 nodes (0.01 seconds)\nCbc0001I Search completed - best objective -120, took 212 iterations and 2 nodes (0.01 seconds)\nCbc0032I Strong branching done 6 times (12 iterations), fathomed 0 nodes and fixed 1 variables\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from -127.602 to -120.934\nProbing was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)\nGomory was tried 101 times and created 148 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)\nKnapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)\nFlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)\nTwoMirCuts was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                120.00000000\nEnumerated nodes:               2\nTotal iterations:               212\nTime (CPU seconds):             0.02\nTime (Wallclock seconds):       0.02\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.02   (Wallclock seconds):       0.02\n\n120.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.18237972259521484}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [23, 23, 17, 14, 4]
consumption (rows=resources) = [[4, 5, 3, 9, 2], [7, 4, 6, 2, 1], [4, 4, 7, 4, 5], [5, 6, 4, 1, 4]]
capacity = [39, 28, 29, 25]
upper_bounds = [4, 4, 4, 4, 5]"
317,rod,5,50,42,0,42,0,"{'ok': True, 'value': 50, 'stdout': '50\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09027242660522461}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [10, 13, 1, 3, 1]"
318,knap,20,663,42,0,1434,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_vg4syk1w/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.0896768569946289}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [20, 39, 22, 36, 3, 39, 12, 15, 10, 29, 1, 16, 29, 24, 5, 4, 24, 1, 15, 40]
V = [46, 16, 58, 68, 50, 40, 61, 60, 20, 46, 27, 8, 22, 51, 49, 51, 15, 46, 50, 18]
C = 192"
319,ilp_prod,10,99,42,0,108,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_hpsdp_tj/main.py"", line 11\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.0993645191192627}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [16, 27, 7, 19, 29]
consumption (rows=resources) = [[9, 2, 7, 1, 7], [3, 7, 6, 10, 9], [7, 10, 3, 2, 9], [4, 4, 8, 8, 7]]
capacity = [30, 28, 37, 20]
upper_bounds = [3, 3, 3, 3, 3]"
320,lcs,15,8,12,0,6,0,"{'ok': True, 'value': 8, 'stdout': '8\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2062375545501709}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""abbcbbdaacabadd""
T = ""bcadcbbcaccbaa"""
321,lcs,5,3,3,1,3,1,"{'ok': True, 'value': 3, 'stdout': '3\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2214808464050293}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""acbca""
T = ""bccabb"""
322,ilp_prod,5,90,42,0,88,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'no_fenced_code', 'retcode': None, 'timeout': False, 'duration_s': 0.0}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [7, 15, 8]
consumption (rows=resources) = [[4, 2, 5], [5, 2, 1], [3, 1, 5]]
capacity = [12, 18, 20]
upper_bounds = [3, 6, 3]"
323,ilp_prod,5,64,42,0,55,0,"{'ok': True, 'value': 33333250000001, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/e47be7656580443da1af50cd0a7a1f1c-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/e47be7656580443da1af50cd0a7a1f1c-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 8 COLUMNS\nAt line 21 RHS\nAt line 25 BOUNDS\nAt line 29 ENDATA\nProblem MODEL has 3 rows, 3 columns and 9 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nPresolve 3 (0) rows, 3 (0) columns and 9 (0) elements\n0  Obj -0 Dual inf 29 (3)\n4  Obj 68.333333\nOptimal - objective value 68.333333\nOptimal objective 68.33333333 - 4 iterations time 0.002\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n68.33333250000001\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.1743025779724121}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [10, 15, 4]
consumption (rows=resources) = [[4, 2, 1], [1, 4, 5], [1, 5, 2]]
capacity = [18, 16, 15]
upper_bounds = [4, 3, 3]"
324,ilp_partition,5,3,4,0,4,0,"{'ok': True, 'value': 5, 'stdout': '5\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20879173278808594}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [9, 10, 9, 5, 10]"
325,knap,5,32,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_0g46bifs/main.py"", line 8\n    dp = np.zeros((len(V)+1, C+1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10887956619262695}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [7, 9, 4, 9, 7]
V = [3, 9, 20, 3, 9]
C = 18"
326,knap,15,324,192,0,300,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/690d9e14c32043c4b84730c5ca4c664f-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/690d9e14c32043c4b84730c5ca4c664f-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 6 COLUMNS\nAt line 67 RHS\nAt line 69 BOUNDS\nAt line 85 ENDATA\nProblem MODEL has 1 rows, 15 columns and 15 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 325.929 - 0.00 seconds\nCgl0004I processed model has 1 rows, 15 columns (15 integer (15 of which binary)) and 15 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 1 integers unsatisfied sum - 0.107143\nCbc0038I Pass   1: suminf.    0.10714 (1) obj. -325.929 iterations 0\nCbc0038I Solution found of -292\nCbc0038I Rounding solution of -307 is better than previous of -292\n\nCbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -309.793\nCbc0038I Reduced cost fixing fixed 9 variables on major pass 2\nCbc0038I Pass   2: suminf.    0.10714 (1) obj. -325.929 iterations 0\nCbc0038I Pass   3: suminf.    0.46823 (1) obj. -309.793 iterations 1\nCbc0038I Pass   4: suminf.    0.46823 (1) obj. -309.793 iterations 0\nCbc0038I Pass   5: suminf.    0.00000 (0) obj. -312 iterations 2\nCbc0038I Solution found of -312\nCbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 15 columns, reduced to 0 rows 0 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -315.586\nCbc0038I Reduced cost fixing fixed 10 variables on major pass 3\nCbc0038I Pass   6: suminf.    0.10714 (1) obj. -325.929 iterations 0\nCbc0038I Pass   7: suminf.    0.37933 (1) obj. -315.586 iterations 1\nCbc0038I Pass   8: suminf.    0.00000 (0) obj. -324 iterations 2\nCbc0038I Solution found of -324\nCbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 15 columns, reduced to 1 rows 2 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -325.279\nCbc0038I Reduced cost fixing fixed 13 variables on major pass 4\nCbc0038I Pass   9: suminf.    0.10714 (1) obj. -325.929 iterations 0\nCbc0038I Pass  10: suminf.    0.12425 (1) obj. -325.279 iterations 1\nCbc0038I Pass  11: suminf.    0.12425 (1) obj. -325.279 iterations 0\nCbc0038I Pass  12: suminf.    0.21308 (1) obj. -325.279 iterations 1\nCbc0038I Pass  13: suminf.    0.21308 (1) obj. -325.279 iterations 0\nCbc0038I Pass  14: suminf.    0.21308 (1) obj. -325.279 iterations 0\nCbc0038I Pass  15: suminf.    0.21308 (1) obj. -325.279 iterations 0\nCbc0038I Pass  16: suminf.    0.21308 (1) obj. -325.279 iterations 0\nCbc0038I Pass  17: suminf.    0.21308 (1) obj. -325.279 iterations 0\nCbc0038I Pass  18: suminf.    0.21308 (1) obj. -325.279 iterations 0\nCbc0038I Pass  19: suminf.    0.21308 (1) obj. -325.279 iterations 0\nCbc0038I Pass  20: suminf.    0.21308 (1) obj. -325.279 iterations 0\nCbc0038I Pass  21: suminf.    0.21308 (1) obj. -325.279 iterations 0\nCbc0038I Pass  22: suminf.    0.21308 (1) obj. -325.279 iterations 0\nCbc0038I Pass  23: suminf.    0.21308 (1) obj. -325.279 iterations 0\nCbc0038I Pass  24: suminf.    0.21308 (1) obj. -325.279 iterations 0\nCbc0038I Pass  25: suminf.    0.21308 (1) obj. -325.279 iterations 0\nCbc0038I Pass  26: suminf.    0.21308 (1) obj. -325.279 iterations 0\nCbc0038I Pass  27: suminf.    0.21308 (1) obj. -325.279 iterations 0\nCbc0038I Pass  28: suminf.    0.21308 (1) obj. -325.279 iterations 0\nCbc0038I Pass  29: suminf.    0.21308 (1) obj. -325.279 iterations 0\nCbc0038I Pass  30: suminf.    0.21308 (1) obj. -325.279 iterations 0\nCbc0038I Pass  31: suminf.    0.10714 (1) obj. -325.929 iterations 2\nCbc0038I Pass  32: suminf.    0.10714 (1) obj. -325.929 iterations 0\nCbc0038I Pass  33: suminf.    0.10714 (1) obj. -325.929 iterations 0\nCbc0038I Pass  34: suminf.    0.10714 (1) obj. -325.929 iterations 0\nCbc0038I Pass  35: suminf.    0.10714 (1) obj. -325.929 iterations 0\nCbc0038I Pass  36: suminf.    0.10714 (1) obj. -325.929 iterations 0\nCbc0038I Pass  37: suminf.    0.21308 (1) obj. -325.279 iterations 2\nCbc0038I Pass  38: suminf.    0.21308 (1) obj. -325.279 iterations 0\nCbc0038I No solution found this major pass\nCbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 15 columns, reduced to 1 rows 2 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -324 - took 0.00 seconds\nCbc0012I Integer solution of -324 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0038I Full problem 1 rows 15 columns, reduced to 1 rows 2 columns\nCbc0006I The LP relaxation is infeasible or too expensive\nCbc0013I At root node, 0 cuts changed objective from -325.92857 to -325.92857 in 1 passes\nCbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0001I Search completed - best objective -324, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 13 variables fixed on reduced cost\nCuts at root node changed objective from -325.929 to -325.929\nProbing was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                324.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n324.0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.1698312759399414}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [23, 25, 10, 21, 9, 23, 4, 5, 12, 15, 14, 28, 11, 27, 26]
V = [49, 53, 46, 4, 33, 20, 6, 30, 15, 11, 37, 38, 38, 14, 34]
C = 126"
327,ilp_assign,5,13,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_9wzgw921/main.py"", line 8\n    tasks = range(5)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.0870976448059082}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[5, 2, 14, 10, 13], [13, 13, 6, 7, 7], [9, 13, 1, 10, 10], [2, 1, 10, 9, 1], [2, 15, 6, 6, 15]]"
328,ilp_assign,20,79,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_kx5l_bc7/main.py"", line 21, in <module>\n    solutions = pulp.solve(prob)\nAttributeError: module \'pulp\' has no attribute \'solve\'\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17044711112976074}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[18, 14, 27, 7, 30, 46, 17], [60, 30, 41, 57, 13, 17, 20], [12, 25, 47, 50, 43, 9, 32], [14, 6, 3, 39, 40, 29, 27], [47, 40, 35, 35, 58, 42, 2], [29, 13, 19, 12, 55, 41, 60], [35, 24, 51, 60, 25, 30, 32]]"
329,knap,20,721,42,0,1163,0,"{'ok': True, 'value': 721, 'stdout': '721\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21587491035461426}",1,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [3, 1, 14, 23, 38, 25, 1, 9, 31, 4, 20, 39, 39, 7, 40, 17, 25, 23, 37, 17]
V = [45, 70, 62, 45, 53, 32, 79, 27, 72, 79, 25, 31, 3, 52, 11, 23, 27, 72, 1, 33]
C = 206"
330,lcs,10,5,4,0,5,1,"{'ok': True, 'value': 5, 'stdout': '5\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2104945182800293}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""dadabddbdd""
T = ""cdaabcaacab"""
331,lcs,5,2,3,0,3,0,"{'ok': True, 'value': 2, 'stdout': '2\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.23097491264343262}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""cbccd""
T = ""cddaac"""
332,ilp_assign,15,34,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_pfvdi6a7/main.py"", line 28, in <module>\n    solutions = pulp.solve(prob)\nAttributeError: module \'pulp\' has no attribute \'solve\'\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.15213513374328613}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[26, 1, 24, 33, 14, 21, 37], [21, 40, 28, 44, 37, 25, 4], [35, 19, 44, 12, 26, 4, 2], [27, 3, 20, 20, 27, 29, 3], [23, 9, 15, 2, 45, 40, 3], [2, 13, 2, 18, 8, 20, 43], [43, 44, 38, 32, 1, 39, 14]]"
333,ilp_prod,20,192,42,0,194,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_ou47q61m/main.py"", line 10\n    x_j = [pulp.LpVariable(f\'x_{i}\', lowBound=0, upBound=upper_bounds[i]) for i in range(len(profit))]\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.0871889591217041}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [27, 32, 43, 14, 52, 21]
consumption (rows=resources) = [[3, 10, 9, 16, 20, 19], [7, 8, 5, 9, 1, 5], [2, 17, 13, 13, 10, 4], [10, 3, 11, 17, 6, 5]]
capacity = [44, 43, 56, 53]
upper_bounds = [5, 3, 4, 3, 3, 3]"
334,knap,5,35,42,0,30,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/d436ced82e754239a18df477b51a0068-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/d436ced82e754239a18df477b51a0068-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 6 COLUMNS\nAt line 27 RHS\nAt line 29 BOUNDS\nAt line 35 ENDATA\nProblem MODEL has 1 rows, 5 columns and 5 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 40.5 - 0.00 seconds\nCgl0004I processed model has 1 rows, 5 columns (5 integer (5 of which binary)) and 5 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 1 integers unsatisfied sum - 0.5\nCbc0038I Solution found of -35\nCbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 5 columns, reduced to 0 rows 0 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -36.4499\nCbc0038I Reduced cost fixing fixed 3 variables on major pass 2\nCbc0038I Pass   1: suminf.    0.13181 (1) obj. -36.4499 iterations 1\nCbc0038I Pass   2: suminf.    0.50000 (1) obj. -40.5 iterations 1\nCbc0038I Pass   3: suminf.    0.50000 (1) obj. -40.5 iterations 0\nCbc0038I Pass   4: suminf.    0.50000 (1) obj. -40.5 iterations 0\nCbc0038I Pass   5: suminf.    0.13181 (1) obj. -36.4499 iterations 1\nCbc0038I Pass   6: suminf.    0.50000 (1) obj. -40.5 iterations 1\nCbc0038I Pass   7: suminf.    0.50000 (1) obj. -40.5 iterations 0\nCbc0038I Pass   8: suminf.    0.13181 (1) obj. -36.4499 iterations 1\nCbc0038I Pass   9: suminf.    0.13181 (1) obj. -36.4499 iterations 0\nCbc0038I Pass  10: suminf.    0.13181 (1) obj. -36.4499 iterations 0\nCbc0038I Pass  11: suminf.    0.13181 (1) obj. -36.4499 iterations 0\nCbc0038I Pass  12: suminf.    0.13181 (1) obj. -36.4499 iterations 0\nCbc0038I Pass  13: suminf.    0.13181 (1) obj. -36.4499 iterations 0\nCbc0038I Pass  14: suminf.    0.50000 (1) obj. -39.5 iterations 2\nCbc0038I Pass  15: suminf.    0.50000 (1) obj. -39.5 iterations 0\nCbc0038I Pass  16: suminf.    0.50000 (1) obj. -39.5 iterations 0\nCbc0038I Pass  17: suminf.    0.13181 (1) obj. -36.4499 iterations 2\nCbc0038I Pass  18: suminf.    0.13181 (1) obj. -36.4499 iterations 0\nCbc0038I Pass  19: suminf.    0.13181 (1) obj. -36.4499 iterations 0\nCbc0038I Pass  20: suminf.    0.13181 (1) obj. -36.4499 iterations 0\nCbc0038I Pass  21: suminf.    0.13181 (1) obj. -36.4499 iterations 0\nCbc0038I Pass  22: suminf.    0.13181 (1) obj. -36.4499 iterations 0\nCbc0038I Pass  23: suminf.    0.13181 (1) obj. -36.4499 iterations 0\nCbc0038I Pass  24: suminf.    0.13181 (1) obj. -36.4499 iterations 0\nCbc0038I Pass  25: suminf.    0.50000 (1) obj. -39.5 iterations 2\nCbc0038I Pass  26: suminf.    0.50000 (1) obj. -40.5 iterations 1\nCbc0038I Pass  27: suminf.    0.50000 (1) obj. -40.5 iterations 0\nCbc0038I Pass  28: suminf.    0.50000 (1) obj. -40.5 iterations 0\nCbc0038I Pass  29: suminf.    0.50000 (1) obj. -40.5 iterations 0\nCbc0038I Pass  30: suminf.    0.50000 (1) obj. -39.5 iterations 1\nCbc0038I No solution found this major pass\nCbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -35 - took 0.00 seconds\nCbc0012I Integer solution of -35 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective -35, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 3 variables fixed on reduced cost\nCuts at root node changed objective from -40.5 to -35\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                35.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n35.0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.17658448219299316}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [5, 10, 4, 1, 10]
V = [13, 11, 14, 8, 9]
C = 15"
335,lcs,20,15,42,0,10,0,"{'ok': True, 'value': 15, 'stdout': '15\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.24618887901306152}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""bdcacabccbdcbaaccdcd""
T = ""abbdccaabccbbacddcd"""
336,ilp_assign,15,32,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_iwehiou6/main.py"", line 8\n    tasks = range(7)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09696054458618164}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[35, 4, 45, 35, 42, 8, 43], [7, 36, 35, 8, 3, 6, 12], [19, 27, 4, 6, 8, 13, 39], [10, 29, 1, 12, 13, 14, 14], [11, 1, 24, 33, 42, 2, 15], [3, 40, 10, 11, 8, 16, 27], [10, 14, 42, 23, 4, 5, 44]]"
337,lcs,20,12,42,0,10,0,"{'ok': True, 'value': 12, 'stdout': '12\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2116556167602539}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""cbabbacbdadcacabbadc""
T = ""dbbcaccadbdcccdbacdcc"""
338,ilp_assign,10,54,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/27252d4dd8ea4f03ba4030264f335b9c-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/27252d4dd8ea4f03ba4030264f335b9c-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 54 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 54\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 54 - took 0.00 seconds\nCbc0012I Integer solution of 54 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 54, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 54 to 54\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                54.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n54.0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.15413975715637207}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[30, 27, 3, 27, 22, 10, 2], [19, 28, 13, 23, 5, 16, 19], [21, 27, 25, 24, 28, 23, 11], [22, 9, 4, 19, 10, 14, 8], [8, 13, 18, 19, 3, 13, 22], [5, 9, 2, 22, 9, 25, 8], [11, 3, 30, 9, 13, 4, 5]]"
339,lcs,15,8,12,0,6,0,"{'ok': True, 'value': 8, 'stdout': '8\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.23431134223937988}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""adabcdbdcccdbca""
T = ""badaacacbbcada"""
340,knap,5,30,42,0,39,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_c4uvx11a/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08773398399353027}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [7, 9, 6, 9, 6]
V = [1, 4, 15, 15, 12]
C = 18"
341,knap,15,354,42,0,386,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_ude977aw/main.py"", line 8\n    dp = np.zeros((len(V)+1, C+1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.0861051082611084}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [17, 20, 28, 11, 30, 7, 30, 12, 19, 22, 10, 12, 23, 7, 22]
V = [23, 21, 58, 36, 36, 59, 18, 27, 6, 25, 13, 48, 29, 47, 37]
C = 135"
342,knap,5,44,42,0,35,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_h0adm5l3/main.py"", line 8\n    dp = np.zeros((len(W) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.07780814170837402}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [4, 2, 3, 10, 8]
V = [19, 5, 20, 9, 15]
C = 13"
343,rod,5,45,42,0,42,0,"{'ok': True, 'value': 45, 'stdout': '45\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.13235998153686523}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [9, 11, 2, 14, 2]"
344,ilp_prod,15,225,42,0,143,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_5vzr55sx/main.py"", line 12, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17113876342773438}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [25, 19, 38, 11, 35, 23]
consumption (rows=resources) = [[2, 9, 8, 3, 4, 4], [4, 12, 6, 4, 10, 13], [10, 12, 6, 2, 12, 6], [12, 10, 3, 9, 5, 3]]
capacity = [44, 41, 54, 38]
upper_bounds = [3, 3, 5, 4, 4, 3]"
345,lcs,5,3,3,1,3,1,"{'ok': True, 'value': 3, 'stdout': '3\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2377169132232666}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""adacb""
T = ""cacbc"""
346,ilp_prod,10,120,42,0,111,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_kblej2du/main.py"", line 11\n    x = pulp.LpVariable.dicts(\'x\', range(num_products), lowBound=0, cat=\'Integer\')\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08205842971801758}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [16, 27, 22, 25, 9]
consumption (rows=resources) = [[4, 2, 3, 8, 9], [1, 6, 10, 5, 5], [3, 8, 1, 1, 5], [3, 1, 10, 6, 1]]
capacity = [24, 28, 23, 27]
upper_bounds = [6, 3, 3, 3, 3]"
347,ilp_assign,15,63,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_xm9gpck4/main.py"", line 13, in <module>\n    cost = pulp.lpSum([C[i][j] * worker_assignment[i] * task_assignment[j] for i in range(n) for j in range(n)])\n  File ""/tmp/cot_exec_xm9gpck4/main.py"", line 13, in <listcomp>\n    cost = pulp.lpSum([C[i][j] * worker_assignment[i] * task_assignment[j] for i in range(n) for j in range(n)])\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 1028, in __mul__\n    return self * LpAffineExpression(other)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 1016, in __mul__\n    raise TypeError(""Non-constant expressions cannot be multiplied"")\nTypeError: Non-constant expressions cannot be multiplied\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17366361618041992}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[4, 13, 23, 27, 11, 13, 14], [24, 43, 16, 15, 2, 27, 21], [36, 42, 25, 9, 22, 43, 42], [9, 7, 29, 19, 26, 26, 39], [7, 14, 41, 21, 38, 23, 45], [26, 25, 30, 20, 5, 31, 4], [32, 8, 21, 12, 12, 21, 27]]"
348,knap,20,516,42,0,366,0,"{'ok': True, 'value': 516, 'stdout': '516\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21221470832824707}",1,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [19, 3, 38, 4, 20, 21, 25, 14, 22, 1, 27, 22, 40, 33, 23, 21, 39, 16, 25, 21]
V = [66, 17, 11, 6, 45, 63, 41, 32, 21, 10, 45, 19, 74, 76, 17, 14, 63, 13, 19, 64]
C = 217"
349,rod,20,1180,137,0,139,0,"{'ok': True, 'value': 1180, 'stdout': '1180\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.10023069381713867}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [59, 26, 54, 18, 24, 13, 9, 58, 36, 5, 60, 3, 5, 18, 25, 26, 52, 40, 60, 40]"
350,ilp_partition,20,1,42,0,42,0,"{'ok': True, 'value': 9, 'stdout': '9\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2170867919921875}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [40, 21, 59, 54, 31, 56, 4, 22, 58, 35, 56, 58, 58, 29, 55, 28, 38, 4, 14, 31]"
351,lcs,5,3,3,1,3,1,"{'ok': True, 'value': 3, 'stdout': '3\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21277451515197754}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""dbccd""
T = ""dadbdd"""
352,rod,10,250,42,0,42,0,"{'ok': True, 'value': 3, 'stdout': '3\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08426070213317871}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [25, 23, 22, 13, 14, 12, 17, 5, 26, 3]"
353,ilp_prod,5,66,42,0,58,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'no_fenced_code', 'retcode': None, 'timeout': False, 'duration_s': 0.0}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [5, 5, 11]
consumption (rows=resources) = [[1, 3, 1], [4, 4, 2], [5, 4, 1]]
capacity = [18, 13, 16]
upper_bounds = [3, 3, 6]"
354,rod,15,660,42,0,42,0,"{'ok': True, 'value': 660, 'stdout': '660\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09612703323364258}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [44, 4, 10, 9, 30, 12, 10, 12, 37, 9, 21, 37, 16, 39, 8]"
355,ilp_assign,5,19,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/d9d91310d0d141189b311f8a9bf28ae4-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/d9d91310d0d141189b311f8a9bf28ae4-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 15 COLUMNS\nAt line 141 RHS\nAt line 152 BOUNDS\nAt line 178 ENDATA\nProblem MODEL has 10 rows, 25 columns and 50 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 19 - 0.00 seconds\nCgl0004I processed model has 10 rows, 25 columns (25 integer (25 of which binary)) and 50 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 19\nCbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 19 - took 0.00 seconds\nCbc0012I Integer solution of 19 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 19, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 19 to 19\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                19.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n19.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.25398993492126465}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[3, 1, 6, 7, 9], [6, 14, 13, 9, 8], [6, 10, 2, 10, 11], [5, 13, 9, 11, 5], [7, 1, 14, 5, 13]]"
356,ilp_prod,15,176,131,0,134,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_4dsbnkgs/main.py"", line 12, in <module>\n    x = pulp.LpVariable.dicts(""x"", range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17040443420410156}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [44, 21, 18, 14, 12, 17]
consumption (rows=resources) = [[8, 15, 11, 8, 15, 6], [11, 14, 1, 10, 6, 7], [1, 6, 12, 4, 6, 13], [8, 1, 8, 6, 9, 2]]
capacity = [32, 57, 59, 56]
upper_bounds = [4, 3, 3, 4, 3, 4]"
357,ilp_assign,5,9,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/8819373992c340bfa82964baa0a3e7a2-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/8819373992c340bfa82964baa0a3e7a2-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 15 COLUMNS\nAt line 141 RHS\nAt line 152 BOUNDS\nAt line 178 ENDATA\nProblem MODEL has 10 rows, 25 columns and 50 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 9 - 0.00 seconds\nCgl0004I processed model has 10 rows, 25 columns (25 integer (25 of which binary)) and 50 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 9\nCbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 9 - took 0.00 seconds\nCbc0012I Integer solution of 9 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 9, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 9 to 9\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                9.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_dbubnhyw/main.py"", line 28, in <module>\n    print(value(objective))\nNameError: name \'value\' is not defined. Did you mean: \'False\'?\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17968130111694336}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[3, 1, 8, 14, 6], [13, 12, 1, 1, 6], [7, 12, 3, 15, 9], [1, 12, 10, 12, 11], [11, 14, 9, 7, 3]]"
358,knap,15,436,42,0,362,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_z2voig3z/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09534549713134766}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [4, 27, 6, 30, 22, 8, 1, 13, 30, 27, 20, 15, 5, 25, 3]
V = [14, 13, 49, 54, 27, 37, 60, 60, 37, 45, 23, 55, 57, 24, 5]
C = 118"
359,rod,10,200,42,0,42,0,"{'ok': True, 'value': 200, 'stdout': '200\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.10563087463378906}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [20, 9, 9, 12, 1, 29, 5, 23, 27, 1]"
360,ilp_partition,15,1,42,0,42,0,"{'ok': True, 'value': 29, 'stdout': '29\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.23984789848327637}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [34, 30, 20, 36, 40, 39, 45, 13, 25, 11, 5, 10, 18, 1, 22]"
361,lcs,5,2,3,0,3,0,"{'ok': True, 'value': 2, 'stdout': '2\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.19684481620788574}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""bcdbb""
T = ""ddbdc"""
362,lcs,15,10,16,0,6,0,"{'ok': True, 'value': 10, 'stdout': '10\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2020554542541504}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""ddacdadbaacdacc""
T = ""dacbbabdadaabdaa"""
363,rod,5,45,42,0,42,0,"{'ok': True, 'value': 45, 'stdout': '45\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09255075454711914}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [9, 15, 12, 6, 13]"
364,ilp_prod,10,36,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_2foegah0/main.py"", line 12, in <module>\n    x = pulp.LpVariable.dicts(""x"", range(len(profit)), lowBound=0, cat=\'Integer\', up=upper_bounds)\nTypeError: LpVariable.dicts() got an unexpected keyword argument \'up\'\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.15062832832336426}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [10, 14, 4, 13, 6]
consumption (rows=resources) = [[7, 9, 8, 6, 3], [4, 2, 5, 8, 8], [8, 6, 8, 9, 2], [8, 10, 5, 9, 2]]
capacity = [38, 24, 33, 22]
upper_bounds = [3, 3, 4, 3, 3]"
365,lcs,10,4,4,1,5,0,"{'ok': True, 'value': 4, 'stdout': '4\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20286202430725098}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""acaccaacbb""
T = ""abdcdddada"""
366,ilp_partition,5,2,42,0,4,0,"{'ok': True, 'value': 2, 'stdout': '2\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21095013618469238}",1,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [8, 12, 6, 15, 9]"
367,ilp_assign,10,55,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/28050e5b717341e5b547ae7db4264e1e-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/28050e5b717341e5b547ae7db4264e1e-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 55 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 55\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 55 - took 0.00 seconds\nCbc0012I Integer solution of 55 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 55, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 55 to 55\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                55.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_harjz1o6/main.py"", line 27, in <module>\n    print(value(objective))\nNameError: name \'value\' is not defined. Did you mean: \'False\'?\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.15914392471313477}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[3, 28, 8, 3, 9, 22, 14], [24, 8, 16, 21, 9, 28, 2], [30, 13, 12, 13, 30, 15, 14], [7, 2, 10, 30, 8, 5, 5], [30, 11, 22, 28, 22, 28, 24], [18, 29, 22, 10, 20, 19, 30], [15, 14, 22, 10, 12, 24, 11]]"
368,ilp_prod,20,183,42,0,128,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_her5mifn/main.py"", line 11, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16414999961853027}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [35, 7, 4, 37, 8, 22]
consumption (rows=resources) = [[17, 7, 6, 5, 12, 17], [8, 16, 15, 6, 4, 2], [10, 20, 13, 8, 1, 3], [2, 1, 6, 10, 16, 9]]
capacity = [42, 76, 47, 46]
upper_bounds = [3, 3, 3, 4, 3, 3]"
369,ilp_partition,5,0,4,0,1,0,"{'ok': True, 'value': 2, 'stdout': '2\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22489118576049805}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [3, 6, 2, 7, 6]"
370,lcs,10,5,4,0,5,1,"{'ok': True, 'value': 5, 'stdout': '5\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2271726131439209}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""acccadccbc""
T = ""bcbbbccccad"""
371,ilp_prod,20,334,42,0,294,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/29d57bc55c0046dbb12317b059823712-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/29d57bc55c0046dbb12317b059823712-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 9 COLUMNS\nAt line 52 RHS\nAt line 57 BOUNDS\nAt line 64 ENDATA\nProblem MODEL has 4 rows, 6 columns and 24 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 344.615 - 0.00 seconds\nCgl0004I processed model has 4 rows, 6 columns (6 integer (0 of which binary)) and 24 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0012I Integer solution of -279 found by DiveCoefficient after 0 iterations and 0 nodes (0.00 seconds)\nCbc0038I Full problem 4 rows 6 columns, reduced to 2 rows 2 columns\nCbc0012I Integer solution of -334 found by DiveCoefficient after 3 iterations and 0 nodes (0.00 seconds)\nCbc0031I 2 added rows had average density of 3.5\nCbc0013I At root node, 2 cuts changed objective from -344.61538 to -334 in 4 passes\nCbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 1 (Gomory) - 5 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0001I Search completed - best objective -334, took 3 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 1 variables fixed on reduced cost\nCuts at root node changed objective from -344.615 to -334\nProbing was tried 4 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 4 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                334.00000000\nEnumerated nodes:               0\nTotal iterations:               3\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n334.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.1729600429534912}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [38, 47, 13, 60, 59, 55]
consumption (rows=resources) = [[10, 13, 7, 16, 3, 1], [16, 16, 15, 19, 14, 4], [19, 12, 12, 20, 9, 10], [9, 15, 19, 4, 9, 4]]
capacity = [71, 40, 60, 71]
upper_bounds = [3, 3, 3, 3, 3, 6]"
372,ilp_partition,20,1,42,0,42,0,"{'ok': True, 'value': 33, 'stdout': '33\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21361947059631348}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [22, 28, 1, 18, 7, 15, 3, 20, 29, 38, 58, 5, 60, 50, 43, 29, 30, 33, 13, 19]"
373,rod,5,45,42,0,42,0,"{'ok': True, 'value': 45, 'stdout': '45\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.0873556137084961}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [9, 11, 5, 12, 2]"
374,rod,20,620,137,0,109,0,"{'ok': True, 'value': 620, 'stdout': '620\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09036946296691895}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [31, 57, 55, 12, 56, 50, 25, 47, 48, 43, 1, 26, 60, 2, 42, 49, 43, 30, 7, 7]"
375,ilp_assign,15,66,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'no_fenced_code', 'retcode': None, 'timeout': False, 'duration_s': 0.0}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[8, 19, 9, 22, 24, 16, 11], [8, 6, 22, 13, 6, 44, 10], [24, 11, 42, 8, 16, 31, 30], [11, 31, 41, 8, 5, 31, 7], [34, 43, 23, 44, 27, 27, 21], [23, 3, 24, 33, 22, 29, 3], [11, 11, 9, 7, 11, 20, 41]]"
376,lcs,10,6,4,0,4,0,"{'ok': True, 'value': 6, 'stdout': '6\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20684576034545898}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""cbbbbacdbb""
T = ""acdbbadbd"""
377,ilp_prod,20,155,42,0,246,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_lmnjvltd/main.py"", line 12, in <module>\n    x = pulp.LpVariable.dicts(""x"", range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.15528273582458496}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [35, 47, 18, 33, 10, 48]
consumption (rows=resources) = [[7, 3, 7, 4, 6, 9], [5, 7, 7, 16, 8, 20], [14, 19, 3, 17, 5, 20], [4, 10, 3, 4, 6, 17]]
capacity = [45, 76, 47, 79]
upper_bounds = [3, 3, 6, 3, 7, 3]"
378,ilp_prod,10,104,42,0,102,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_jt4l_zru/main.py"", line 10, in <module>\n    x = pulp.LpVariable.dicts(""x"", range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1864938735961914}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [14, 30, 17, 13, 29]
consumption (rows=resources) = [[5, 2, 6, 1, 5], [4, 10, 2, 10, 5], [1, 5, 6, 2, 7], [8, 5, 9, 5, 6]]
capacity = [24, 35, 21, 23]
upper_bounds = [3, 3, 3, 3, 3]"
379,ilp_partition,10,1,42,0,4,0,"{'ok': True, 'value': 11, 'stdout': '11\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20883822441101074}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [16, 3, 25, 15, 23, 4, 18, 6, 9, 10]"
380,knap,20,699,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_k35qv5n9/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1), dtype=int)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08584141731262207}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [9, 22, 20, 9, 7, 9, 9, 19, 33, 15, 28, 25, 12, 40, 39, 27, 12, 31, 4, 6]
V = [56, 53, 13, 37, 5, 28, 7, 75, 5, 80, 23, 72, 51, 42, 31, 63, 65, 31, 47, 60]
C = 188"
381,rod,15,267,42,0,42,0,"{'ok': True, 'value': 267, 'stdout': '267\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09845089912414551}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [8, 37, 34, 9, 35, 13, 43, 11, 31, 15, 31, 5, 21, 4, 32]"
382,lcs,20,10,42,0,10,1,"{'ok': True, 'value': 10, 'stdout': '10\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20488500595092773}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""daaacbcbdacbabbcbadd""
T = ""ccccdbbcccccabaaaddca"""
383,rod,5,23,42,0,42,0,"{'ok': True, 'value': 23, 'stdout': '23\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09188032150268555}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [3, 9, 14, 7, 1]"
384,ilp_prod,20,314,42,0,239,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_6j9bi2vi/main.py"", line 10\n    x_j = [pulp.LpVariable(f\'x_{i}\', lowBound=0, upBound=upper_bounds[i]) for i in range(len(profit))]\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08981990814208984}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [16, 7, 50, 14, 53, 15]
consumption (rows=resources) = [[4, 3, 9, 2, 17, 1], [15, 18, 4, 5, 20, 3], [20, 3, 8, 7, 2, 17], [13, 19, 10, 6, 16, 13]]
capacity = [61, 73, 71, 66]
upper_bounds = [3, 3, 6, 10, 3, 4]"
385,knap,15,314,42,0,229,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_kwmbkvqj/main.py"", line 8\n    dp = np.zeros((len(W) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09744024276733398}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [1, 4, 9, 18, 10, 26, 4, 24, 29, 10, 7, 29, 15, 24, 8]
V = [48, 2, 27, 50, 5, 54, 22, 30, 29, 29, 36, 41, 15, 28, 18]
C = 109"
386,ilp_assign,5,13,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_x_yslm2f/main.py"", line 12, in <module>\n    model += pulp.lpSum(C[i][j] * vars[i][j] for i in range(n) for j in range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 2469, in lpSum\n    return LpAffineExpression().addInPlace(vector)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 968, in addInPlace\n    for e in other:\n  File ""/tmp/cot_exec_x_yslm2f/main.py"", line 12, in <genexpr>\n    model += pulp.lpSum(C[i][j] * vars[i][j] for i in range(n) for j in range(n))\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16288352012634277}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[14, 14, 1, 4, 12], [2, 6, 2, 11, 14], [11, 2, 3, 13, 12], [5, 7, 10, 6, 4], [1, 11, 12, 12, 3]]"
387,rod,15,127,42,0,42,0,"{'ok': True, 'value': 127, 'stdout': '127\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08330035209655762}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [1, 18, 2, 16, 10, 14, 44, 31, 37, 18, 42, 11, 33, 13, 18]"
388,ilp_assign,10,67,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/276c86fe4ccb473499cf0bada7796cf3-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/276c86fe4ccb473499cf0bada7796cf3-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 67 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 67\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 67 - took 0.00 seconds\nCbc0012I Integer solution of 67 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 67, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 67 to 67\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                67.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n67.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.17233729362487793}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[25, 20, 6, 24, 7, 17, 13], [27, 10, 29, 30, 3, 18, 2], [14, 23, 5, 15, 6, 10, 2], [21, 10, 19, 10, 2, 20, 17], [11, 10, 2, 16, 3, 30, 6], [24, 21, 25, 22, 25, 20, 13], [30, 23, 21, 16, 9, 27, 15]]"
389,ilp_partition,5,0,42,0,4,0,"{'ok': True, 'value': 0, 'stdout': '0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20515036582946777}",1,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [9, 14, 12, 8, 3]"
390,lcs,15,9,42,0,6,0,"{'ok': True, 'value': 9, 'stdout': '9\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2126176357269287}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""adacaabdccabdbd""
T = ""abcaadaaddbadcba"""
391,rod,5,70,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_gf1wmkw1/main.py"", line 2\n    dp = [0] * (N + 1)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09017133712768555}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [14, 15, 15, 2, 15]"
392,knap,5,42,42,1,31,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec__g9ey3tk/main.py"", line 8\n    dp = np.zeros((len(W) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1064915657043457}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [5, 9, 7, 6, 10]
V = [16, 4, 13, 13, 7]
C = 18"
393,ilp_prod,15,126,42,0,137,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_h_5lm47y/main.py"", line 11, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.15636539459228516}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [4, 5, 3, 31, 17, 42]
consumption (rows=resources) = [[6, 6, 10, 6, 2, 3], [5, 13, 5, 11, 13, 13], [9, 2, 10, 7, 14, 6], [8, 11, 6, 3, 10, 5]]
capacity = [31, 39, 55, 43]
upper_bounds = [5, 3, 3, 3, 3, 3]"
394,rod,20,480,42,0,107,0,"{'ok': True, 'value': 480, 'stdout': '480\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08882665634155273}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [24, 11, 54, 12, 23, 57, 12, 46, 48, 49, 58, 43, 44, 35, 29, 32, 23, 7, 3, 28]"
395,ilp_prod,5,30,42,0,54,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'no_fenced_code', 'retcode': None, 'timeout': False, 'duration_s': 0.0}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [9, 6, 15]
consumption (rows=resources) = [[1, 5, 2], [5, 5, 5], [1, 2, 4]]
capacity = [17, 11, 19]
upper_bounds = [3, 3, 3]"
396,lcs,15,7,12,0,6,0,"{'ok': True, 'value': 7, 'stdout': '7\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2033383846282959}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""ccbababbdbbdccb""
T = ""bdcabbcaabadaaba"""
397,lcs,10,7,4,0,5,0,"{'ok': True, 'value': 7, 'stdout': '7\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2113502025604248}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""cccbabdadd""
T = ""ccbabcadcac"""
398,lcs,20,11,42,0,10,0,"{'ok': True, 'value': 11, 'stdout': '11\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20476722717285156}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""cbdbccbabcdaaadbcdbd""
T = ""badbaadbbbabccdddadcc"""
399,lcs,15,8,12,0,8,1,"{'ok': True, 'value': 8, 'stdout': '8\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2138063907623291}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""cdabcaaaddadcbd""
T = ""dcddbbbbacaddbb"""
400,lcs,20,14,42,0,10,0,"{'ok': True, 'value': 14, 'stdout': '14\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2320575714111328}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""caabbdaccdcaaabcaabc""
T = ""abbcbababbbdcdcacabbc"""
401,ilp_assign,5,33,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_5gz89aw1/main.py"", line 12, in <module>\n    prob += pulp.lpSum([C[i][j] * vars[i][j] for i in range(n) for j in range(n)])\n  File ""/tmp/cot_exec_5gz89aw1/main.py"", line 12, in <listcomp>\n    prob += pulp.lpSum([C[i][j] * vars[i][j] for i in range(n) for j in range(n)])\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16067147254943848}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[11, 11, 10, 11, 10], [14, 7, 14, 12, 10], [6, 6, 2, 11, 7], [4, 12, 9, 13, 8], [14, 14, 10, 10, 11]]"
402,rod,20,740,181,0,109,0,"{'ok': True, 'value': 740, 'stdout': '740\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08795762062072754}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [37, 36, 47, 57, 15, 22, 54, 7, 51, 24, 22, 37, 16, 23, 7, 42, 1, 44, 17, 50]"
403,ilp_assign,15,58,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec__dek18by/main.py"", line 13, in <module>\n    objective = pulp.lpSum([C[i][j] * variables[i][j] for i in range(n) for j in range(n)])\n  File ""/tmp/cot_exec__dek18by/main.py"", line 13, in <listcomp>\n    objective = pulp.lpSum([C[i][j] * variables[i][j] for i in range(n) for j in range(n)])\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16438078880310059}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[25, 36, 28, 20, 14, 5, 19], [32, 33, 30, 15, 40, 4, 17], [21, 26, 37, 10, 42, 22, 22], [29, 11, 34, 7, 30, 9, 10], [1, 25, 11, 9, 7, 36, 41], [14, 41, 8, 4, 37, 32, 15], [35, 26, 23, 19, 6, 15, 24]]"
404,ilp_prod,15,378,42,0,147,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_lyrark0g/main.py"", line 11, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17403602600097656}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [39, 19, 42, 39, 19, 32]
consumption (rows=resources) = [[1, 5, 6, 2, 8, 15], [8, 8, 1, 6, 8, 8], [6, 1, 6, 15, 4, 12], [14, 13, 3, 2, 15, 2]]
capacity = [57, 39, 57, 43]
upper_bounds = [3, 3, 9, 3, 3, 3]"
405,rod,20,180,107,0,42,0,"{'ok': True, 'value': 180, 'stdout': '180\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.07918238639831543}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [6, 1, 28, 28, 26, 3, 3, 15, 18, 8, 48, 48, 31, 40, 54, 21, 18, 15, 42, 36]"
406,ilp_partition,10,0,42,0,4,0,"{'ok': True, 'value': 2, 'stdout': '2\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22204327583312988}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [17, 10, 13, 18, 13, 13, 3, 11, 11, 5]"
407,knap,10,189,42,0,127,0,"{'ok': True, 'value': 189, 'stdout': '189\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21077752113342285}",1,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [14, 20, 7, 4, 8, 16, 13, 6, 5, 8]
V = [40, 7, 23, 21, 33, 29, 11, 25, 31, 37]
C = 50"
408,lcs,5,2,3,0,3,0,"{'ok': True, 'value': 2, 'stdout': '2\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20575618743896484}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""dacdb""
T = ""babb"""
409,ilp_prod,20,180,42,0,239,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/2936c45cbae44d73906564abfb98b902-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/2936c45cbae44d73906564abfb98b902-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 9 COLUMNS\nAt line 52 RHS\nAt line 57 BOUNDS\nAt line 64 ENDATA\nProblem MODEL has 4 rows, 6 columns and 24 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 194.118 - 0.00 seconds\nCgl0004I processed model has 4 rows, 6 columns (6 integer (0 of which binary)) and 24 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0012I Integer solution of -180 found by DiveCoefficient after 0 iterations and 0 nodes (0.00 seconds)\nCbc0006I The LP relaxation is infeasible or too expensive\nCbc0013I At root node, 0 cuts changed objective from -191.33333 to -191.33333 in 1 passes\nCbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0001I Search completed - best objective -180, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from -191.333 to -191.333\nProbing was tried 1 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                180.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n180.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.19290947914123535}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [14, 12, 29, 32, 60, 34]
consumption (rows=resources) = [[1, 7, 20, 12, 11, 16], [1, 3, 7, 8, 3, 5], [8, 8, 17, 19, 17, 12], [12, 4, 5, 5, 16, 17]]
capacity = [78, 70, 55, 69]
upper_bounds = [5, 6, 3, 3, 3, 4]"
410,lcs,15,8,12,0,6,0,"{'ok': True, 'value': 8, 'stdout': '8\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21282696723937988}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""bdcabaadccbcbab""
T = ""bcdcbbbdbbbdbc"""
411,knap,10,186,42,0,88,0,"{'ok': True, 'value': 0, 'stdout': '186.0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20942902565002441}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [14, 8, 4, 6, 17, 2, 13, 6, 1, 17]
V = [32, 32, 24, 36, 28, 2, 39, 28, 25, 16]
C = 44"
412,ilp_partition,15,1,42,0,42,0,"{'ok': True, 'value': 25, 'stdout': '25\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2004854679107666}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [13, 22, 6, 33, 18, 7, 36, 18, 14, 41, 40, 43, 26, 45, 29]"
413,rod,20,620,156,0,102,0,"{'ok': True, 'value': 620, 'stdout': '620\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.11917591094970703}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [31, 31, 49, 27, 55, 51, 12, 28, 7, 4, 50, 53, 37, 17, 57, 21, 28, 17, 13, 48]"
414,ilp_assign,5,14,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_fr82wg22/main.py"", line 12, in <module>\n    objective = pulp.lpSum(C[i]*vars[i] for i in range(n) for j in range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 2469, in lpSum\n    return LpAffineExpression().addInPlace(vector)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 968, in addInPlace\n    for e in other:\n  File ""/tmp/cot_exec_fr82wg22/main.py"", line 12, in <genexpr>\n    objective = pulp.lpSum(C[i]*vars[i] for i in range(n) for j in range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 221, in __rmul__\n    return LpAffineExpression(self) * other\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 1030, in __mul__\n    if not math.isfinite(other):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16191387176513672}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[14, 3, 3, 9, 1], [8, 13, 1, 8, 4], [7, 14, 12, 9, 14], [15, 6, 15, 4, 2], [2, 11, 12, 1, 14]]"
415,rod,10,80,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_rw72aiqt/main.py"", line 4\n    dp = [0 for _ in range(N+1)]\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.0932762622833252}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [8, 14, 16, 3, 19, 24, 29, 28, 12, 18]"
416,ilp_partition,20,0,42,0,42,0,"{'ok': True, 'value': 50, 'stdout': '50\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21260690689086914}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [54, 13, 27, 12, 7, 22, 3, 49, 42, 6, 23, 20, 56, 35, 52, 58, 51, 47, 3, 38]"
417,ilp_partition,20,0,42,0,42,0,"{'ok': True, 'value': 46, 'stdout': '46\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21768593788146973}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [3, 5, 37, 8, 30, 26, 23, 54, 25, 39, 54, 13, 5, 52, 7, 29, 47, 30, 57, 2]"
418,ilp_prod,10,84,42,0,99,0,"{'ok': True, 'value': 3333335, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/d9383564701a4e939728feb0798dbe4d-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/d9383564701a4e939728feb0798dbe4d-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 9 COLUMNS\nAt line 31 RHS\nAt line 36 BOUNDS\nAt line 42 ENDATA\nProblem MODEL has 4 rows, 5 columns and 20 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nPresolve 0 (-4) rows, 0 (-5) columns and 0 (-20) elements\nEmpty problem - 0 rows, 0 columns and 0 elements\nOptimal - objective value 43.333333\nAfter Postsolve, objective 43.333333, infeasibilities - dual 0 (0), primal 0 (0)\nOptimal objective 43.33333333 - 0 iterations time 0.002, Presolve 0.00\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n43.3333335\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1865: UserWarning: Overwriting previously set objective.\n  warnings.warn(""Overwriting previously set objective."")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.15796303749084473}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [15, 6, 30, 24, 15]
consumption (rows=resources) = [[1, 1, 3, 4, 9], [8, 7, 6, 3, 5], [10, 3, 10, 10, 3], [9, 3, 3, 10, 4]]
capacity = [26, 20, 26, 35]
upper_bounds = [3, 3, 3, 3, 3]"
419,ilp_assign,5,19,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/1f2e1ace821046fa9a9b7625cf3d924d-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/1f2e1ace821046fa9a9b7625cf3d924d-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 15 COLUMNS\nAt line 141 RHS\nAt line 152 BOUNDS\nAt line 178 ENDATA\nProblem MODEL has 10 rows, 25 columns and 50 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 19 - 0.00 seconds\nCgl0004I processed model has 10 rows, 25 columns (25 integer (25 of which binary)) and 50 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 19\nCbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 19 - took 0.00 seconds\nCbc0012I Integer solution of 19 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 19, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 19 to 19\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                19.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_z3zr2ofv/main.py"", line 28, in <module>\n    print(value(objective))\nNameError: name \'value\' is not defined. Did you mean: \'False\'?\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1815190315246582}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[15, 1, 14, 6, 8], [9, 6, 3, 8, 2], [9, 6, 11, 12, 15], [10, 11, 5, 10, 6], [15, 13, 10, 2, 8]]"
420,ilp_partition,5,2,4,0,4,0,"{'ok': True, 'value': 2, 'stdout': '2\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20853114128112793}",1,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [3, 6, 3, 3, 13]"
421,rod,20,840,226,0,164,0,"{'ok': True, 'value': 840, 'stdout': '840\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09897208213806152}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [42, 27, 45, 43, 49, 17, 7, 27, 52, 50, 32, 5, 12, 57, 24, 35, 19, 58, 27, 31]"
422,rod,20,560,42,0,102,0,"{'ok': True, 'value': 560, 'stdout': '560\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.11931037902832031}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [28, 37, 50, 27, 32, 36, 25, 59, 39, 12, 45, 41, 43, 7, 26, 35, 55, 15, 24, 5]"
423,ilp_prod,15,180,42,0,136,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'no_fenced_code', 'retcode': None, 'timeout': False, 'duration_s': 0.0}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [36, 23, 5, 13, 36, 9]
consumption (rows=resources) = [[2, 11, 10, 12, 15, 4], [1, 11, 8, 13, 6, 8], [14, 14, 14, 7, 3, 10], [6, 12, 4, 14, 1, 13]]
capacity = [39, 56, 59, 32]
upper_bounds = [4, 3, 3, 3, 3, 3]"
424,ilp_assign,15,53,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_j5_aa2p2/main.py"", line 11, in <module>\n    model += variables[i, j] * C[i][j]\nKeyError: (0, 0)\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17723608016967773}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[14, 21, 28, 41, 39, 13, 11], [12, 4, 32, 28, 8, 12, 1], [43, 38, 3, 6, 30, 37, 28], [23, 13, 34, 4, 23, 31, 6], [24, 12, 25, 16, 6, 34, 17], [36, 38, 3, 37, 27, 10, 33], [18, 28, 15, 21, 28, 14, 36]]"
425,lcs,20,12,42,0,10,0,"{'ok': True, 'value': 12, 'stdout': '12\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20666718482971191}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""abddacacadccbdbccbbd""
T = ""dddbcddcbcabaabccbaad"""
426,ilp_assign,20,67,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_a3d6qvyy/main.py"", line 12, in <module>\n    model += pulp.lpSum(C[i][j] * vars[i][j] for i in range(n) for j in range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 2469, in lpSum\n    return LpAffineExpression().addInPlace(vector)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 968, in addInPlace\n    for e in other:\n  File ""/tmp/cot_exec_a3d6qvyy/main.py"", line 12, in <genexpr>\n    model += pulp.lpSum(C[i][j] * vars[i][j] for i in range(n) for j in range(n))\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.14700675010681152}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[38, 50, 25, 12, 23, 54, 55], [7, 37, 17, 3, 15, 15, 30], [27, 27, 54, 25, 42, 17, 32], [20, 51, 43, 18, 6, 39, 1], [46, 15, 10, 15, 59, 17, 48], [42, 15, 23, 1, 6, 4, 52], [3, 14, 52, 49, 58, 15, 47]]"
427,rod,5,25,42,0,13,0,"{'ok': True, 'value': 25, 'stdout': '25\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.10375809669494629}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [5, 6, 6, 5, 6]"
428,ilp_prod,10,156,42,0,122,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_xxz7o02x/main.py"", line 12, in <module>\n    variables = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17458796501159668}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [11, 28, 23, 30, 21]
consumption (rows=resources) = [[8, 8, 4, 2, 3], [5, 1, 4, 3, 3], [4, 10, 10, 8, 2], [1, 4, 10, 6, 3]]
capacity = [28, 23, 22, 29]
upper_bounds = [3, 3, 3, 3, 7]"
429,rod,15,525,42,0,42,0,"{'ok': True, 'value': 525, 'stdout': '525\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09112286567687988}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [35, 10, 41, 17, 31, 39, 26, 9, 7, 24, 29, 40, 16, 18, 39]"
430,ilp_prod,10,30,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_vcu3ztzr/main.py"", line 12, in <module>\n    variables = pulp.LpVariable.dicts(""x"", range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.15782904624938965}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [8, 4, 4, 3, 11]
consumption (rows=resources) = [[4, 1, 5, 8, 10], [8, 6, 10, 2, 4], [3, 6, 2, 6, 3], [6, 4, 8, 7, 8]]
capacity = [31, 39, 38, 22]
upper_bounds = [3, 5, 3, 3, 3]"
431,ilp_partition,15,0,42,0,42,0,"{'ok': True, 'value': 14, 'stdout': '14\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2042531967163086}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [19, 20, 33, 24, 5, 45, 16, 42, 4, 1, 17, 5, 37, 18, 24]"
432,knap,10,137,42,0,106,0,"{'ok': True, 'value': 137, 'stdout': '137\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21349668502807617}",1,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [14, 14, 12, 20, 16, 7, 14, 13, 10, 4]
V = [6, 11, 22, 24, 37, 28, 25, 8, 25, 4]
C = 62"
433,ilp_prod,15,193,188,0,186,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_sq95e8c_/main.py"", line 10\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10715222358703613}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [31, 23, 42, 19, 28, 40]
consumption (rows=resources) = [[12, 4, 6, 10, 2, 8], [11, 8, 4, 9, 15, 13], [4, 5, 12, 2, 10, 12], [14, 6, 11, 8, 3, 6]]
capacity = [56, 48, 51, 48]
upper_bounds = [3, 6, 4, 5, 3, 3]"
434,rod,20,510,42,0,102,0,"{'ok': True, 'value': 510, 'stdout': '510\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09856534004211426}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [19, 51, 32, 57, 12, 24, 56, 40, 13, 33, 20, 40, 28, 5, 14, 22, 16, 36, 43, 18]"
435,knap,20,645,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_jyi2y365/main.py"", line 8\n    dp = np.zeros((len(V)+1, C+1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08598804473876953}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [31, 9, 2, 12, 2, 22, 25, 21, 26, 23, 25, 39, 34, 17, 39, 11, 30, 40, 25, 20]
V = [38, 47, 30, 6, 78, 49, 79, 33, 12, 20, 67, 65, 32, 47, 68, 36, 63, 48, 16, 48]
C = 226"
436,ilp_partition,15,1,42,0,42,0,"{'ok': True, 'value': 17, 'stdout': '17\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.232957124710083}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [31, 7, 5, 8, 30, 22, 19, 25, 5, 24, 13, 32, 5, 6, 29]"
437,ilp_partition,10,1,42,0,42,0,"{'ok': True, 'value': 21, 'stdout': '21\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20948219299316406}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [30, 1, 25, 21, 18, 8, 1, 11, 16, 2]"
438,knap,20,612,42,0,1742,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_nblyipzg/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10102343559265137}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [15, 21, 14, 19, 22, 38, 25, 31, 11, 16, 32, 37, 27, 37, 21, 32, 21, 4, 10, 30]
V = [54, 71, 8, 74, 18, 45, 56, 34, 29, 4, 56, 24, 80, 24, 31, 64, 28, 18, 71, 22]
C = 231"
439,lcs,15,5,12,0,6,0,"{'ok': True, 'value': 5, 'stdout': '5\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20562434196472168}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""bcbbdccdbbabdbd""
T = ""aaaaaddadcccdd"""
440,lcs,5,3,4,0,3,1,"{'ok': True, 'value': 3, 'stdout': '3\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.201279878616333}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""bccad""
T = ""abdcda"""
441,rod,10,190,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_tf1nn57h/main.py"", line 4\n    dp = [0] * (N + 1)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09984731674194336}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [19, 12, 29, 6, 6, 20, 4, 12, 28, 6]"
442,ilp_assign,5,22,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/fee646f2c3f24422890e93df056cafec-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/fee646f2c3f24422890e93df056cafec-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 15 COLUMNS\nAt line 141 RHS\nAt line 152 BOUNDS\nAt line 178 ENDATA\nProblem MODEL has 10 rows, 25 columns and 50 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 22 - 0.00 seconds\nCgl0004I processed model has 10 rows, 25 columns (25 integer (25 of which binary)) and 50 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 22\nCbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 22 - took 0.00 seconds\nCbc0012I Integer solution of 22 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 22, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 22 to 22\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                22.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n22.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.18686461448669434}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[5, 4, 4, 2, 5], [12, 8, 1, 12, 9], [5, 13, 14, 13, 4], [14, 9, 2, 9, 6], [6, 15, 5, 14, 9]]"
443,ilp_partition,20,1,42,0,42,0,"{'ok': True, 'value': 23, 'stdout': '23\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22903084754943848}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [11, 14, 53, 6, 52, 9, 2, 58, 30, 52, 2, 33, 57, 8, 5, 6, 39, 39, 57, 18]"
444,ilp_prod,10,128,42,0,101,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_r43ahnzk/main.py"", line 10\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08800339698791504}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [28, 16, 23, 16, 12]
consumption (rows=resources) = [[5, 4, 10, 1, 8], [6, 2, 5, 8, 7], [8, 1, 7, 5, 8], [9, 3, 6, 3, 4]]
capacity = [32, 23, 23, 30]
upper_bounds = [3, 8, 3, 3, 3]"
445,ilp_partition,15,1,42,0,42,0,"{'ok': True, 'value': 5, 'stdout': '5\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21005678176879883}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [32, 9, 27, 36, 2, 24, 28, 7, 9, 32, 28, 21, 8, 42, 30]"
446,ilp_assign,20,57,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_phrxbkg2/main.py"", line 15\n    x = pulp.LpVariable.dicts(""x"", ((i, j) for i in range(n) for j in range(n)), cat=\'Binary\')\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08072137832641602}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[27, 24, 13, 57, 17, 3, 47], [54, 35, 10, 36, 15, 5, 27], [14, 5, 32, 15, 26, 22, 41], [19, 38, 23, 44, 2, 58, 12], [36, 33, 47, 58, 14, 42, 7], [42, 1, 18, 46, 31, 54, 27], [42, 32, 56, 20, 32, 37, 44]]"
447,knap,10,155,42,0,93,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_yel684n2/main.py"", line 8\n    dp = np.zeros((len(W) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.07789874076843262}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [7, 3, 6, 19, 13, 17, 19, 1, 8, 13]
V = [2, 1, 34, 27, 40, 12, 4, 26, 27, 13]
C = 53"
448,ilp_partition,10,1,42,0,42,0,"{'ok': True, 'value': 1, 'stdout': '1\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2037944793701172}",1,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [18, 7, 10, 19, 8, 4, 18, 2, 11, 10]"
449,ilp_partition,20,1,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_60499dnt/main.py"", line 17\n    print(int(abs(pulp.value(pulp.lpSum(weights[i] * selected[i] for i in range(len(weights)))) - pulp.value(pulp.lpSum(weights[i] * (1 - selected[i]) for i in range(len(weights))))))\n         ^\nSyntaxError: \'(\' was never closed\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08885836601257324}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [38, 9, 17, 47, 29, 17, 4, 18, 26, 53, 27, 21, 47, 1, 43, 15, 50, 32, 12, 3]"
450,ilp_prod,15,93,42,0,135,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_q9avwq2f/main.py"", line 12, in <module>\n    x = pulp.LpVariable.dicts(""x"", range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1704568862915039}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [15, 33, 32, 12, 24, 6]
consumption (rows=resources) = [[1, 13, 11, 4, 9, 14], [12, 14, 3, 4, 13, 11], [10, 13, 15, 3, 10, 13], [13, 8, 14, 14, 1, 10]]
capacity = [40, 44, 37, 36]
upper_bounds = [3, 3, 3, 3, 3, 3]"
451,ilp_partition,15,1,42,0,42,0,"{'ok': True, 'value': 11, 'stdout': '11\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2037661075592041}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [31, 23, 17, 3, 17, 13, 40, 34, 12, 34, 36, 33, 11, 30, 11]"
452,ilp_prod,20,296,42,0,248,0,"{'ok': True, 'value': 5625, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/9468405615ad472ab284cc2cf51a4679-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/9468405615ad472ab284cc2cf51a4679-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 9 COLUMNS\nAt line 40 RHS\nAt line 45 BOUNDS\nAt line 52 ENDATA\nProblem MODEL has 4 rows, 6 columns and 24 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nPresolve 4 (0) rows, 6 (0) columns and 24 (0) elements\n0  Obj -0 Dual inf 83.051607 (6)\n4  Obj 312.5625\nOptimal - objective value 312.5625\nOptimal objective 312.5625 - 4 iterations time 0.002\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n312.5625\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.16471624374389648}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [41, 52, 31, 44, 58, 15]
consumption (rows=resources) = [[12, 2, 1, 13, 15, 20], [10, 14, 12, 8, 11, 5], [8, 7, 15, 3, 19, 16], [11, 8, 1, 9, 17, 14]]
capacity = [55, 72, 68, 54]
upper_bounds = [4, 5, 4, 4, 3, 3]"
453,lcs,20,12,42,0,10,0,"{'ok': True, 'value': 12, 'stdout': '12\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21971750259399414}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""acbcdbcdbdccbbbadadb""
T = ""dcbcbbddcbdccdddcbcac"""
454,ilp_partition,20,1,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'Traceback (most recent call last):\n  File ""/tmp/cot_exec_d_mrwijr/main.py"", line 15, in <module>\n    print(min_difference(weights))\n  File ""/tmp/cot_exec_d_mrwijr/main.py"", line 10, in min_difference\n    model += abs(total_weight1 - total_weight2)\nTypeError: bad operand type for abs(): \'LpAffineExpression\'\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16051745414733887}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [3, 42, 48, 19, 44, 34, 36, 36, 20, 7, 1, 33, 57, 7, 52, 26, 20, 28, 24, 18]"
455,rod,10,240,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_fkksfh5v/main.py"", line 8\n    for i in range(1, N + 1):\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09291315078735352}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [24, 20, 15, 7, 24, 10, 27, 30, 14, 6]"
456,ilp_partition,5,0,42,0,5,0,"{'ok': True, 'value': 0, 'stdout': '0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20827484130859375}",1,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [12, 2, 2, 9, 7]"
457,knap,10,149,42,0,99,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_5t29g9ut/main.py"", line 8\n    dp = np.zeros((N + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09586977958679199}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [16, 3, 14, 13, 7, 9, 1, 10, 2, 9]
V = [6, 12, 40, 17, 29, 28, 20, 7, 20, 4]
C = 42"
458,lcs,10,5,4,0,5,1,"{'ok': True, 'value': 5, 'stdout': '5\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21103835105895996}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""bbabdddaab""
T = ""aadcdbbcdca"""
459,ilp_assign,10,46,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_7bc7yb0y/main.py"", line 13, in <module>\n    model += C[i][j] * worker[i] * task[j]\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 1028, in __mul__\n    return self * LpAffineExpression(other)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 1016, in __mul__\n    raise TypeError(""Non-constant expressions cannot be multiplied"")\nTypeError: Non-constant expressions cannot be multiplied\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.14979100227355957}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[28, 10, 10, 20, 16, 27, 27], [3, 14, 8, 23, 7, 16, 4], [17, 12, 28, 19, 25, 28, 18], [3, 2, 3, 11, 8, 28, 15], [3, 7, 29, 2, 15, 5, 3], [22, 16, 3, 26, 29, 2, 5], [16, 5, 23, 16, 14, 16, 10]]"
460,rod,10,100,42,0,42,0,"{'ok': True, 'value': 100, 'stdout': '100\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08858561515808105}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [10, 14, 22, 22, 5, 7, 9, 23, 17, 20]"
461,ilp_assign,5,5,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/b52d5e71ba18495a990dc1d4b609cd3b-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/b52d5e71ba18495a990dc1d4b609cd3b-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 15 COLUMNS\nAt line 141 RHS\nAt line 152 BOUNDS\nAt line 178 ENDATA\nProblem MODEL has 10 rows, 25 columns and 50 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 5 - 0.00 seconds\nCgl0004I processed model has 10 rows, 25 columns (25 integer (25 of which binary)) and 50 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 5\nCbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 5 - took 0.00 seconds\nCbc0012I Integer solution of 5 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 5, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 5 to 5\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                5.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_wlt0ozv7/main.py"", line 30, in <module>\n    print(value(objective))\nNameError: name \'value\' is not defined. Did you mean: \'False\'?\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17936205863952637}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[5, 15, 1, 15, 2], [4, 1, 11, 1, 7], [12, 12, 14, 1, 2], [1, 1, 1, 9, 6], [6, 13, 1, 10, 1]]"
462,ilp_partition,15,0,42,0,42,0,"{'ok': True, 'value': 6, 'stdout': '6\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2106156349182129}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [39, 41, 44, 13, 13, 26, 37, 30, 42, 40, 44, 6, 5, 43, 9]"
463,knap,10,98,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_p0254ze8/main.py"", line 8\n    dp = np.zeros((C + 1, len(W) + 1)) \nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08152651786804199}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [6, 2, 17, 7, 8, 5, 4, 9, 18, 1]
V = [1, 24, 19, 14, 4, 20, 10, 9, 5, 11]
C = 38"
464,ilp_partition,15,1,42,0,42,0,"{'ok': True, 'value': 3, 'stdout': '3\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22600150108337402}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [4, 17, 12, 9, 14, 12, 36, 1, 34, 34, 29, 3, 35, 19, 22]"
465,lcs,5,2,3,0,3,0,"{'ok': True, 'value': 2, 'stdout': '2\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21636652946472168}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""adbbb""
T = ""addccd"""
466,knap,20,697,42,0,1342,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_av7oaz4a/main.py"", line 8\n    dp = np.zeros((len(W) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08182692527770996}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [10, 30, 36, 17, 5, 10, 15, 37, 18, 11, 6, 36, 20, 27, 36, 16, 17, 15, 13, 6]
V = [3, 29, 20, 7, 29, 25, 14, 32, 63, 12, 37, 58, 77, 69, 60, 57, 69, 75, 58, 78]
C = 190"
467,ilp_prod,20,189,42,0,204,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_fixipk8l/main.py"", line 11, in <module>\n    x = pulp.LpVariable.dicts(""x"", range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.15712785720825195}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [47, 34, 48, 5, 41, 12]
consumption (rows=resources) = [[20, 11, 9, 2, 13, 3], [3, 18, 12, 1, 11, 7], [6, 17, 12, 14, 17, 8], [10, 14, 19, 13, 1, 9]]
capacity = [70, 46, 74, 46]
upper_bounds = [3, 3, 3, 3, 4, 5]"
468,ilp_partition,20,1,42,0,42,0,"{'ok': True, 'value': 51, 'stdout': '51\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21162724494934082}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [53, 54, 39, 30, 49, 53, 2, 53, 18, 60, 21, 54, 22, 55, 2, 39, 41, 47, 39, 40]"
469,ilp_partition,20,1,42,0,42,0,"{'ok': True, 'value': 29, 'stdout': '29\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20331692695617676}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [7, 49, 41, 25, 23, 21, 13, 47, 13, 50, 12, 42, 3, 11, 46, 43, 5, 8, 1, 47]"
470,lcs,10,7,4,0,6,0,"{'ok': True, 'value': 7, 'stdout': '7\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20097923278808594}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""cbbcbbdddc""
T = ""aaacbbbddcd"""
471,ilp_partition,10,0,42,0,42,0,"{'ok': True, 'value': 8, 'stdout': '8\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21012258529663086}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [1, 14, 10, 6, 5, 27, 19, 5, 20, 11]"
472,ilp_prod,15,135,188,0,177,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_iu64wnt5/main.py"", line 11, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.18004775047302246}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [33, 38, 32, 43, 33, 45]
consumption (rows=resources) = [[15, 12, 8, 14, 7, 15], [12, 2, 1, 9, 9, 6], [11, 3, 6, 8, 14, 7], [1, 6, 2, 1, 6, 4]]
capacity = [36, 51, 31, 53]
upper_bounds = [3, 3, 4, 3, 3, 3]"
473,lcs,15,9,12,0,6,0,"{'ok': True, 'value': 9, 'stdout': '9\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20763015747070312}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""bddaadccaacbcdd""
T = ""bddbabbbaaabdc"""
474,lcs,5,2,3,0,3,0,"{'ok': True, 'value': 2, 'stdout': '2\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20856571197509766}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""ccbbc""
T = ""bcac"""
475,ilp_partition,15,0,42,0,42,0,"{'ok': True, 'value': 12, 'stdout': '12\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20197129249572754}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [1, 13, 43, 37, 19, 12, 31, 38, 18, 19, 39, 24, 42, 20, 44]"
476,ilp_partition,15,1,42,0,42,0,"{'ok': True, 'value': 29, 'stdout': '29\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22100186347961426}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [11, 11, 10, 6, 24, 13, 14, 28, 43, 6, 7, 21, 13, 31, 25]"
477,ilp_partition,10,1,42,0,42,0,"{'ok': True, 'value': 17, 'stdout': '17\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21969914436340332}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [23, 9, 6, 1, 25, 21, 23, 23, 27, 29]"
478,ilp_partition,5,1,42,0,4,0,"{'ok': True, 'value': 7, 'stdout': '7\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2080225944519043}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [4, 12, 11, 11, 9]"
479,ilp_assign,15,42,42,1,42,1,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_2rc2j7b_/main.py"", line 12, in <module>\n    model += pulp.lpSum(C[i][j] * variables[i][j] for i in range(n) for j in range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 2469, in lpSum\n    return LpAffineExpression().addInPlace(vector)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 968, in addInPlace\n    for e in other:\n  File ""/tmp/cot_exec_2rc2j7b_/main.py"", line 12, in <genexpr>\n    model += pulp.lpSum(C[i][j] * variables[i][j] for i in range(n) for j in range(n))\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16264581680297852}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[39, 1, 27, 25, 21, 33, 31], [39, 37, 19, 2, 1, 1, 6], [9, 45, 16, 45, 32, 13, 7], [6, 18, 7, 13, 9, 20, 9], [22, 10, 35, 9, 7, 38, 26], [31, 15, 4, 30, 15, 36, 36], [45, 33, 31, 37, 14, 20, 14]]"
480,knap,5,36,42,0,35,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_bx461_kk/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.0899810791015625}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [9, 1, 5, 9, 2]
V = [19, 14, 3, 12, 3]
C = 13"
481,ilp_prod,15,187,188,0,142,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_eibhg55_/main.py"", line 11, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1562483310699463}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [8, 25, 30, 13, 40, 37]
consumption (rows=resources) = [[11, 15, 6, 2, 14, 6], [2, 4, 1, 2, 3, 2], [4, 9, 6, 10, 13, 3], [8, 7, 5, 14, 1, 13]]
capacity = [54, 44, 34, 41]
upper_bounds = [4, 3, 5, 3, 3, 3]"
482,ilp_partition,5,0,42,0,4,0,"{'ok': True, 'value': 6, 'stdout': '6\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21863722801208496}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [13, 3, 10, 12, 8]"
483,ilp_assign,10,51,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/93ef6e3848a942d498661599ed49895d-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/93ef6e3848a942d498661599ed49895d-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 51 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 51\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 51 - took 0.00 seconds\nCbc0012I Integer solution of 51 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 51, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 51 to 51\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                51.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_5lv7ti2v/main.py"", line 26, in <module>\n    print(value(objective_function))\nNameError: name \'value\' is not defined. Did you mean: \'False\'?\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16087579727172852}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[25, 29, 14, 27, 8, 23, 12], [4, 30, 29, 12, 8, 23, 3], [12, 22, 18, 22, 22, 22, 10], [2, 29, 19, 12, 30, 29, 17], [1, 13, 22, 4, 1, 27, 1], [19, 6, 15, 4, 7, 12, 3], [17, 5, 13, 6, 15, 28, 20]]"
484,ilp_partition,5,1,4,0,4,0,"{'ok': True, 'value': 1, 'stdout': '1\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.19812750816345215}",1,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [15, 12, 10, 9, 5]"
485,lcs,10,6,4,0,5,0,"{'ok': True, 'value': 6, 'stdout': '6\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.19414949417114258}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""dacbddcbcd""
T = ""dddbcaabdac"""
486,ilp_partition,20,0,42,0,42,0,"{'ok': True, 'value': 26, 'stdout': '26\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.1994941234588623}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [5, 39, 41, 45, 28, 5, 33, 36, 41, 2, 17, 11, 14, 4, 24, 5, 14, 15, 18, 21]"
487,ilp_partition,5,3,42,0,4,0,"{'ok': True, 'value': 3, 'stdout': '3\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20098090171813965}",1,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [8, 12, 4, 1, 12]"
488,ilp_partition,15,0,42,0,42,0,"{'ok': True, 'value': 10, 'stdout': '10\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.19631123542785645}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [10, 32, 19, 43, 15, 6, 20, 24, 34, 22, 13, 43, 26, 25, 16]"
489,knap,20,608,42,0,1750,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_2sjp6x5h/main.py"", line 5\n    C = 210\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10239934921264648}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [9, 38, 27, 31, 18, 28, 3, 29, 4, 26, 6, 37, 5, 36, 38, 28, 21, 10, 7, 19]
V = [37, 34, 30, 1, 17, 54, 37, 12, 70, 45, 41, 18, 13, 7, 9, 60, 66, 52, 26, 73]
C = 210"
490,knap,10,171,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_um6n2pse/main.py"", line 8\n    dp = np.zeros((N + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.0955662727355957}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [6, 10, 8, 11, 11, 7, 2, 2, 1, 6]
V = [39, 30, 21, 3, 18, 38, 34, 18, 5, 16]
C = 32"
491,ilp_partition,5,1,42,0,4,0,"{'ok': True, 'value': 1, 'stdout': '1\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2040555477142334}",1,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [11, 4, 2, 12, 2]"
492,ilp_assign,15,53,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_4whijm2f/main.py"", line 13, in <module>\n    objective = pulp.lpSum([C[i][j] * variables[i][j] for i in range(n) for j in range(n)])\n  File ""/tmp/cot_exec_4whijm2f/main.py"", line 13, in <listcomp>\n    objective = pulp.lpSum([C[i][j] * variables[i][j] for i in range(n) for j in range(n)])\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16184210777282715}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[19, 7, 8, 25, 2, 14, 40], [26, 36, 30, 26, 17, 6, 16], [26, 7, 33, 19, 29, 43, 19], [17, 28, 34, 30, 16, 23, 21], [15, 23, 43, 2, 17, 41, 33], [8, 31, 43, 21, 20, 4, 3], [18, 35, 26, 26, 12, 37, 6]]"
493,knap,5,35,42,0,35,1,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_fo4sisz0/main.py"", line 8\n    dp = np.zeros((len(V)+1, C+1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10759902000427246}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [8, 9, 6, 2, 6]
V = [2, 5, 18, 2, 15]
C = 15"
494,ilp_partition,20,0,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_peyqmkon/main.py"", line 4\n    n = len(weights)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08955907821655273}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [14, 32, 15, 47, 18, 60, 45, 39, 36, 20, 11, 2, 5, 26, 13, 59, 11, 50, 5, 32]"
495,ilp_partition,15,0,42,0,42,0,"{'ok': True, 'value': 2, 'stdout': '2\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22031712532043457}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [17, 2, 33, 23, 37, 7, 15, 4, 32, 44, 19, 39, 4, 31, 35]"
496,lcs,15,9,12,0,6,0,"{'ok': True, 'value': 9, 'stdout': '9\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.19584369659423828}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""adbbdaadbcdbdbc""
T = ""aaadadcaadcacdb"""
497,ilp_assign,10,43,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'Traceback (most recent call last):\n  File ""/tmp/cot_exec__7cmkk3c/main.py"", line 13, in <module>\n    m += pulp.lpSum(worker[i] * task[j] * C[i][j] for i in range(n) for j in range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 2469, in lpSum\n    return LpAffineExpression().addInPlace(vector)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 968, in addInPlace\n    for e in other:\n  File ""/tmp/cot_exec__7cmkk3c/main.py"", line 13, in <genexpr>\n    m += pulp.lpSum(worker[i] * task[j] * C[i][j] for i in range(n) for j in range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 218, in __mul__\n    return LpAffineExpression(self) * other\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 1028, in __mul__\n    return self * LpAffineExpression(other)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 1016, in __mul__\n    raise TypeError(""Non-constant expressions cannot be multiplied"")\nTypeError: Non-constant expressions cannot be multiplied\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.15233588218688965}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[15, 27, 15, 25, 14, 8, 13], [6, 4, 8, 10, 10, 8, 1], [4, 7, 14, 30, 22, 10, 29], [16, 25, 9, 26, 10, 4, 21], [15, 5, 9, 11, 26, 10, 27], [19, 18, 11, 2, 10, 7, 9], [15, 17, 24, 27, 17, 8, 25]]"
498,ilp_assign,15,73,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/eba5544094cf4515b431c2303fd4860a-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/eba5544094cf4515b431c2303fd4860a-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 73 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 73\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 73 - took 0.00 seconds\nCbc0012I Integer solution of 73 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 73, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 73 to 73\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                73.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n73.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.1677992343902588}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[24, 19, 2, 41, 40, 31, 34], [11, 41, 26, 37, 44, 43, 18], [45, 10, 44, 18, 29, 25, 11], [38, 40, 2, 29, 20, 28, 27], [37, 27, 28, 25, 12, 35, 40], [25, 13, 13, 5, 42, 30, 43], [44, 34, 37, 21, 15, 25, 5]]"
499,knap,15,343,42,0,262,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_y0nbr8cm/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.0964961051940918}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [8, 9, 8, 17, 13, 19, 2, 1, 9, 25, 24, 9, 16, 4, 16]
V = [43, 27, 18, 7, 54, 4, 59, 23, 32, 24, 35, 39, 17, 13, 28]
C = 90"
500,ilp_assign,20,88,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/4bc50c0ac3e54b3e924b1efc85d88cec-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/4bc50c0ac3e54b3e924b1efc85d88cec-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 88 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 88\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 88 - took 0.00 seconds\nCbc0012I Integer solution of 88 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 88, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 88 to 88\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                88.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n88.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.18117332458496094}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[47, 40, 3, 39, 25, 31, 6], [4, 57, 56, 18, 56, 10, 1], [28, 22, 57, 48, 5, 35, 59], [55, 44, 53, 42, 12, 50, 59], [59, 49, 53, 59, 60, 10, 23], [54, 13, 17, 38, 57, 2, 9], [38, 34, 52, 28, 57, 24, 53]]"
501,rod,10,280,42,0,42,0,"{'ok': True, 'value': 280, 'stdout': '280\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08668804168701172}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [28, 22, 15, 2, 24, 21, 11, 10, 30, 10]"
502,knap,10,117,42,0,92,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_15a0hh65/main.py"", line 8\n    dp = np.zeros((C + 1, len(W) + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08859014511108398}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [9, 1, 4, 4, 15, 5, 15, 8, 8, 2]
V = [15, 6, 7, 7, 3, 38, 8, 3, 17, 27]
C = 35"
503,rod,10,210,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'Traceback (most recent call last):\n  File ""/tmp/cot_exec_28965cc4/main.py"", line 4, in <module>\n    @lru_cache(maxsize=None)\nNameError: name \'lru_cache\' is not defined\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08793926239013672}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [21, 20, 30, 22, 13, 13, 28, 28, 24, 15]"
504,lcs,15,10,12,0,6,0,"{'ok': True, 'value': 10, 'stdout': '10\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2207965850830078}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""dcdabdcdddaabdb""
T = ""bdbcabdacaacdbd"""
505,rod,10,190,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_kzt4gocq/main.py"", line 8\n    for i in range(1, N + 1):\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09000420570373535}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [19, 4, 6, 23, 21, 18, 15, 19, 30, 8]"
506,knap,15,382,221,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/d597f967891146c19b6dfc3ada0637ef-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/d597f967891146c19b6dfc3ada0637ef-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 6 COLUMNS\nAt line 67 RHS\nAt line 69 BOUNDS\nAt line 85 ENDATA\nProblem MODEL has 1 rows, 15 columns and 15 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 403.31 - 0.00 seconds\nCgl0004I processed model has 1 rows, 15 columns (15 integer (15 of which binary)) and 15 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 1 integers unsatisfied sum - 0.37931\nCbc0038I Pass   1: suminf.    0.37931 (1) obj. -403.31 iterations 0\nCbc0038I Solution found of -376\nCbc0038I Rounding solution of -382 is better than previous of -376\n\nCbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -385.031\nCbc0038I Reduced cost fixing fixed 10 variables on major pass 2\nCbc0038I Pass   2: suminf.    0.37931 (1) obj. -403.31 iterations 0\nCbc0038I Pass   3: suminf.    0.20525 (1) obj. -385.031 iterations 1\nCbc0038I Pass   4: suminf.    0.29475 (1) obj. -385.031 iterations 1\nCbc0038I Pass   5: suminf.    0.27586 (1) obj. -385.862 iterations 1\nCbc0038I Pass   6: suminf.    0.29475 (1) obj. -385.031 iterations 1\nCbc0038I Pass   7: suminf.    0.29475 (1) obj. -385.031 iterations 0\nCbc0038I Pass   8: suminf.    0.29475 (1) obj. -385.031 iterations 0\nCbc0038I Pass   9: suminf.    0.29475 (1) obj. -385.031 iterations 0\nCbc0038I Pass  10: suminf.    0.29475 (1) obj. -385.031 iterations 0\nCbc0038I Pass  11: suminf.    0.27586 (1) obj. -385.862 iterations 1\nCbc0038I Pass  12: suminf.    0.29475 (1) obj. -385.031 iterations 1\nCbc0038I Pass  13: suminf.    0.27586 (1) obj. -385.862 iterations 1\nCbc0038I Pass  14: suminf.    0.49607 (2) obj. -385.031 iterations 4\nCbc0038I Pass  15: suminf.    0.45719 (1) obj. -385.031 iterations 3\nCbc0038I Pass  16: suminf.    0.22222 (1) obj. -396.889 iterations 2\nCbc0038I Pass  17: suminf.    0.42320 (1) obj. -385.031 iterations 1\nCbc0038I Pass  18: suminf.    0.22222 (1) obj. -396.889 iterations 1\nCbc0038I Pass  19: suminf.    0.36913 (2) obj. -385.031 iterations 1\nCbc0038I Pass  20: suminf.    0.20619 (2) obj. -385.031 iterations 1\nCbc0038I Pass  21: suminf.    0.20525 (1) obj. -385.031 iterations 3\nCbc0038I Pass  22: suminf.    0.37931 (1) obj. -403.31 iterations 1\nCbc0038I Pass  23: suminf.    0.27586 (1) obj. -385.862 iterations 1\nCbc0038I Pass  24: suminf.    0.29475 (1) obj. -385.031 iterations 1\nCbc0038I Pass  25: suminf.    0.27586 (1) obj. -385.862 iterations 1\nCbc0038I Pass  26: suminf.    0.20619 (2) obj. -385.031 iterations 2\nCbc0038I Pass  27: suminf.    0.20619 (2) obj. -385.031 iterations 0\nCbc0038I Pass  28: suminf.    0.20525 (1) obj. -385.031 iterations 3\nCbc0038I Pass  29: suminf.    0.37931 (1) obj. -403.31 iterations 1\nCbc0038I Pass  30: suminf.    0.81361 (2) obj. -385.031 iterations 3\nCbc0038I Pass  31: suminf.    0.23980 (1) obj. -385.031 iterations 2\nCbc0038I No solution found this major pass\nCbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 15 columns, reduced to 1 rows 5 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -382 - took 0.00 seconds\nCbc0012I Integer solution of -382 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0006I The LP relaxation is infeasible or too expensive\nCbc0013I At root node, 0 cuts changed objective from -403.31034 to -403.31034 in 1 passes\nCbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0001I Search completed - best objective -382, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 8 variables fixed on reduced cost\nCuts at root node changed objective from -403.31 to -403.31\nProbing was tried 1 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                382.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n382.0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.1673107147216797}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [3, 24, 29, 20, 29, 5, 3, 17, 9, 10, 5, 19, 27, 24, 24]
V = [22, 57, 44, 46, 7, 38, 29, 6, 33, 50, 42, 1, 59, 13, 34]
C = 124"
507,ilp_prod,10,109,42,0,122,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_1dq91wxi/main.py"", line 12, in <module>\n    variables = pulp.LpVariable.dicts(""x"", range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1663811206817627}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [7, 9, 11, 9, 23]
consumption (rows=resources) = [[1, 1, 1, 8, 5], [4, 9, 2, 2, 10], [3, 4, 3, 1, 7], [3, 3, 8, 6, 1]]
capacity = [34, 39, 36, 31]
upper_bounds = [9, 4, 3, 4, 3]"
508,lcs,15,7,12,0,5,0,"{'ok': True, 'value': 7, 'stdout': '7\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.23734593391418457}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""adcdbdaabbbabdd""
T = ""cbbdadccadabccc"""
509,ilp_partition,20,1,42,0,42,0,"{'ok': True, 'value': 5, 'stdout': '5\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.5636279582977295}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [37, 33, 19, 15, 36, 52, 58, 26, 6, 43, 25, 2, 8, 27, 24, 55, 7, 4, 8, 10]"
510,knap,5,52,42,0,39,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_jvoh70_9/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08241391181945801}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [9, 1, 5, 10, 9]
V = [7, 15, 20, 17, 14]
C = 17"
511,rod,5,30,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_x2usfsjk/main.py"", line 2\n    dp = [0] * (N + 1)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08048105239868164}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [6, 9, 15, 4, 13]"
512,ilp_prod,10,110,42,0,111,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/98c0b76a523242cb82b4fc113f2abd99-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/98c0b76a523242cb82b4fc113f2abd99-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 9 COLUMNS\nAt line 31 RHS\nAt line 36 BOUNDS\nAt line 42 ENDATA\nProblem MODEL has 4 rows, 5 columns and 20 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nPresolve 0 (-4) rows, 0 (-5) columns and 0 (-20) elements\nEmpty problem - 0 rows, 0 columns and 0 elements\nOptimal - objective value 81\nAfter Postsolve, objective 81, infeasibilities - dual 0 (0), primal 0 (0)\nOptimal objective 81 - 0 iterations time 0.002, Presolve 0.00\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n81.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1865: UserWarning: Overwriting previously set objective.\n  warnings.warn(""Overwriting previously set objective."")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.1764085292816162}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [8, 15, 23, 28, 27]
consumption (rows=resources) = [[10, 5, 3, 8, 7], [2, 6, 10, 6, 4], [1, 9, 10, 3, 8], [10, 3, 5, 7, 3]]
capacity = [30, 30, 28, 20]
upper_bounds = [3, 3, 3, 3, 3]"
513,lcs,20,12,42,0,12,1,"{'ok': True, 'value': 12, 'stdout': '12\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.19642972946166992}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""acbdabcbcbddbadbdaaa""
T = ""cdcddcbbddadcacdaccba"""
514,lcs,10,5,4,0,5,1,"{'ok': True, 'value': 5, 'stdout': '5\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.232696533203125}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""aaadcaddcb""
T = ""ccdddcbbab"""
515,knap,15,343,42,0,342,0,"{'ok': True, 'value': 343, 'stdout': '343\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21216273307800293}",1,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [10, 14, 9, 3, 18, 7, 15, 4, 21, 2, 25, 28, 23, 1, 18]
V = [50, 37, 58, 15, 16, 3, 39, 32, 43, 22, 14, 13, 54, 8, 2]
C = 99"
516,ilp_partition,15,0,42,0,42,0,"{'ok': True, 'value': 10, 'stdout': '10\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21349310874938965}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [23, 43, 10, 8, 15, 18, 41, 38, 16, 6, 4, 36, 30, 11, 7]"
517,ilp_partition,20,0,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'Traceback (most recent call last):\n  File ""/tmp/cot_exec_n7wrcwz8/main.py"", line 15, in <module>\n    model += abs(group1_sum - group2_sum)\nTypeError: bad operand type for abs(): \'LpAffineExpression\'\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1600785255432129}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [50, 35, 32, 9, 41, 51, 8, 49, 24, 54, 45, 8, 11, 42, 18, 10, 12, 46, 18, 33]"
518,ilp_partition,20,0,42,0,42,0,"{'ok': True, 'value': 10, 'stdout': '10\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20071625709533691}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [57, 46, 6, 33, 42, 3, 37, 20, 37, 14, 58, 26, 24, 32, 38, 47, 49, 45, 50, 52]"
519,ilp_prod,5,72,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/4a8ca599336a425e902bf9556315ae4a-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/4a8ca599336a425e902bf9556315ae4a-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 8 COLUMNS\nAt line 21 RHS\nAt line 25 BOUNDS\nAt line 29 ENDATA\nProblem MODEL has 3 rows, 3 columns and 9 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nPresolve 3 (0) rows, 3 (0) columns and 9 (0) elements\n0  Obj -0 Dual inf 37 (3)\n1  Obj 72\nOptimal - objective value 72\nOptimal objective 72 - 1 iterations time 0.002\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n72.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.1593937873840332}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [12, 10, 10]
consumption (rows=resources) = [[3, 1, 2], [2, 3, 2], [1, 5, 1]]
capacity = [19, 12, 20]
upper_bounds = [6, 4, 6]"
520,rod,15,360,42,0,42,0,"{'ok': True, 'value': 360, 'stdout': '360\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.07965278625488281}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [24, 17, 8, 4, 12, 8, 4, 40, 45, 16, 4, 20, 10, 35, 1]"
521,rod,10,230,42,0,42,0,"{'ok': True, 'value': 230, 'stdout': '230\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.07978081703186035}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [23, 13, 26, 24, 20, 13, 8, 19, 28, 28]"
522,ilp_partition,20,0,42,0,42,0,"{'ok': True, 'value': 4, 'stdout': '4\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21496057510375977}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [24, 43, 12, 19, 6, 31, 44, 55, 26, 53, 22, 42, 58, 13, 14, 2, 6, 9, 18, 19]"
523,ilp_assign,20,87,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_969_eay3/main.py"", line 28, in <module>\n    print(value(m))\nNameError: name \'value\' is not defined. Did you mean: \'False\'?\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.14721155166625977}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[60, 20, 7, 15, 5, 20, 58], [40, 31, 60, 16, 28, 53, 32], [28, 55, 47, 12, 2, 25, 5], [10, 31, 23, 2, 40, 29, 31], [59, 59, 42, 32, 11, 45, 9], [32, 9, 29, 13, 44, 38, 28], [59, 45, 41, 35, 58, 34, 41]]"
524,ilp_assign,15,49,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/7fc4cd2c9f4549fb9865380fcd4b1308-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/7fc4cd2c9f4549fb9865380fcd4b1308-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 49 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 49\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 49 - took 0.00 seconds\nCbc0012I Integer solution of 49 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 49, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 49 to 49\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                49.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_1p6ygwze/main.py"", line 25, in <module>\n    print(value(model.objective))\nNameError: name \'value\' is not defined. Did you mean: \'False\'?\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16095733642578125}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[23, 12, 27, 6, 5, 15, 15], [42, 42, 3, 14, 18, 9, 21], [40, 13, 43, 44, 3, 31, 13], [39, 7, 16, 2, 33, 35, 45], [18, 1, 6, 31, 3, 33, 26], [8, 41, 28, 26, 26, 38, 23], [31, 24, 43, 21, 30, 42, 17]]"
525,knap,20,654,42,0,422,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_hn7r9by5/main.py"", line 8\n    dp = np.zeros((len(V)+1, C+1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.0829005241394043}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [33, 23, 19, 5, 24, 10, 34, 4, 5, 30, 35, 33, 17, 23, 39, 14, 12, 16, 10, 30]
V = [57, 1, 41, 49, 54, 12, 57, 53, 54, 68, 7, 78, 25, 73, 80, 20, 51, 5, 53, 8]
C = 208"
526,lcs,15,9,17,0,7,0,"{'ok': True, 'value': 9, 'stdout': '9\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20490097999572754}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""dbadccadcddddcb""
T = ""accaadbdbddbbab"""
527,knap,10,190,42,0,90,0,"{'ok': True, 'value': 190, 'stdout': '190\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.24812817573547363}",1,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [5, 12, 4, 2, 13, 20, 20, 8, 6, 18]
V = [37, 32, 11, 23, 39, 26, 33, 37, 11, 21]
C = 54"
528,lcs,10,7,4,0,5,0,"{'ok': True, 'value': 7, 'stdout': '7\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20403480529785156}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""addccbbbba""
T = ""adcbbcbdad"""
529,ilp_assign,20,85,42,0,157,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/f122c0ac8d0345c985f94f58bf4b3c85-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/f122c0ac8d0345c985f94f58bf4b3c85-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 85 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 85\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 85 - took 0.00 seconds\nCbc0012I Integer solution of 85 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 85, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 85 to 85\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                85.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n85.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.15424442291259766}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[24, 21, 37, 52, 26, 58, 23], [35, 12, 11, 3, 45, 40, 25], [16, 59, 53, 16, 36, 60, 35], [36, 45, 14, 36, 5, 15, 18], [12, 25, 36, 7, 49, 4, 41], [47, 32, 53, 45, 8, 29, 25], [11, 41, 15, 38, 57, 5, 50]]"
530,ilp_prod,15,137,42,0,126,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_8b86_opx/main.py"", line 11, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1523728370666504}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [13, 39, 12, 20, 14, 36]
consumption (rows=resources) = [[9, 5, 10, 4, 4, 11], [8, 4, 11, 11, 5, 11], [5, 11, 11, 8, 6, 15], [3, 6, 5, 1, 11, 1]]
capacity = [46, 49, 42, 54]
upper_bounds = [5, 3, 3, 4, 4, 3]"
531,ilp_assign,15,51,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_czdih2l7/main.py"", line 12, in <module>\n    model += pulp.lpSum(C[i][j] * vars[i][j] for i in range(n) for j in range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 2469, in lpSum\n    return LpAffineExpression().addInPlace(vector)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 968, in addInPlace\n    for e in other:\n  File ""/tmp/cot_exec_czdih2l7/main.py"", line 12, in <genexpr>\n    model += pulp.lpSum(C[i][j] * vars[i][j] for i in range(n) for j in range(n))\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.15468692779541016}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[13, 37, 39, 29, 41, 5, 37], [11, 30, 20, 4, 25, 39, 45], [19, 12, 11, 29, 20, 44, 20], [2, 31, 31, 19, 24, 35, 31], [21, 6, 6, 31, 36, 12, 30], [43, 28, 13, 44, 22, 18, 45], [9, 17, 25, 22, 1, 40, 6]]"
532,rod,5,18,42,0,42,0,"{'ok': True, 'value': 18, 'stdout': '18\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08284306526184082}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [2, 8, 5, 8, 8]"
533,knap,10,170,42,0,162,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_uci4q82s/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08736062049865723}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [13, 10, 14, 2, 8, 11, 14, 19, 19, 16]
V = [39, 14, 38, 33, 6, 22, 26, 12, 16, 34]
C = 63"
534,ilp_partition,15,1,42,0,42,0,"{'ok': True, 'value': 11, 'stdout': '11\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.19398808479309082}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [37, 8, 44, 17, 22, 27, 4, 40, 42, 8, 36, 38, 15, 11, 38]"
535,knap,10,154,42,0,94,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_fqy44izi/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10353660583496094}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [11, 13, 2, 19, 15, 4, 14, 13, 4, 19]
V = [2, 1, 36, 39, 27, 23, 12, 26, 3, 10]
C = 57"
536,lcs,10,5,4,0,5,1,"{'ok': True, 'value': 5, 'stdout': '5\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2624478340148926}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""bcadacadba""
T = ""bcbddccbbbb"""
537,ilp_prod,5,41,0,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_gk2i6_oe/main.py"", line 10\n    x_j = [pulp.LpVariable(""x_%d"" % j, lowBound=0) for j in range(len(profit))]\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08621335029602051}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [13, 9, 7]
consumption (rows=resources) = [[3, 4, 4], [5, 4, 1], [1, 4, 1]]
capacity = [20, 10, 10]
upper_bounds = [3, 3, 5]"
538,lcs,10,5,4,0,5,1,"{'ok': True, 'value': 5, 'stdout': '5\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.237138032913208}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""bcdaddaabd""
T = ""dcabbcdcacb"""
539,ilp_assign,20,103,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/1531a7321125449b8463c63ecb65925e-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/1531a7321125449b8463c63ecb65925e-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 103 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 103\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 103 - took 0.00 seconds\nCbc0012I Integer solution of 103 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 103, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 103 to 103\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                103.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n103.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.16016077995300293}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[27, 36, 52, 51, 48, 37, 52], [1, 27, 20, 51, 56, 15, 55], [52, 41, 6, 30, 33, 35, 42], [29, 19, 33, 12, 60, 34, 14], [60, 23, 31, 58, 51, 48, 27], [18, 47, 51, 18, 31, 40, 27], [17, 48, 58, 9, 4, 41, 50]]"
540,rod,20,1140,107,0,109,0,"{'ok': True, 'value': 1140, 'stdout': '1140\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.10117292404174805}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [57, 20, 58, 26, 53, 13, 33, 17, 16, 47, 55, 6, 33, 30, 32, 56, 4, 30, 18, 28]"
541,lcs,10,3,4,0,5,0,"{'ok': True, 'value': 3, 'stdout': '3\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21030259132385254}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""aaacaccbdc""
T = ""dcbbcaadb"""
542,ilp_assign,5,20,42,0,42,0,"{'ok': True, 'value': 20, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/a0797a6ad959451db36daafbd2b19d1d-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/a0797a6ad959451db36daafbd2b19d1d-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 15 COLUMNS\nAt line 141 RHS\nAt line 152 BOUNDS\nAt line 178 ENDATA\nProblem MODEL has 10 rows, 25 columns and 50 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 20 - 0.00 seconds\nCgl0004I processed model has 10 rows, 25 columns (25 integer (25 of which binary)) and 50 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 20\nCbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 20 - took 0.00 seconds\nCbc0012I Integer solution of 20 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 20, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 20 to 20\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                20.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n20\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.16077017784118652}",1,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[6, 7, 14, 2, 5], [2, 11, 11, 14, 6], [1, 3, 15, 6, 4], [6, 5, 14, 14, 5], [14, 5, 8, 7, 1]]"
543,lcs,15,8,16,0,6,0,"{'ok': True, 'value': 8, 'stdout': '8\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21896982192993164}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""cadbadbddbccbdd""
T = ""adcdcaddddcadba"""
544,ilp_partition,10,1,42,0,4,0,"{'ok': True, 'value': 27, 'stdout': '27\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20677542686462402}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [6, 28, 10, 19, 4, 8, 27, 29, 21, 25]"
545,ilp_partition,15,1,42,0,42,0,"{'ok': True, 'value': 1, 'stdout': '1\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20276927947998047}",1,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [8, 31, 10, 28, 4, 3, 2, 3, 7, 18, 45, 40, 7, 14, 7]"
546,ilp_assign,15,57,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/4bbe409cdc844f2c8948a8a2792e109d-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/4bbe409cdc844f2c8948a8a2792e109d-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 57 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 57\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 57 - took 0.00 seconds\nCbc0012I Integer solution of 57 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 57, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 57 to 57\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                57.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n57.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.18425941467285156}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[14, 2, 17, 39, 27, 27, 26], [27, 14, 40, 11, 32, 12, 6], [13, 37, 15, 33, 2, 42, 36], [14, 15, 29, 43, 38, 33, 11], [31, 15, 36, 33, 30, 6, 12], [24, 22, 30, 13, 5, 38, 30], [7, 3, 44, 39, 3, 37, 24]]"
547,rod,15,510,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_4vav4p6w/main.py"", line 3\n    dp = [0] * (N + 1)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08946084976196289}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [34, 12, 30, 17, 31, 15, 26, 2, 1, 8, 12, 4, 15, 21, 21]"
548,ilp_prod,15,107,42,0,168,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/094e26f3357d459999f40d5094488985-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/094e26f3357d459999f40d5094488985-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 9 COLUMNS\nAt line 52 RHS\nAt line 57 BOUNDS\nAt line 64 ENDATA\nProblem MODEL has 4 rows, 6 columns and 24 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 114.032 - 0.00 seconds\nCgl0004I processed model has 4 rows, 6 columns (6 integer (0 of which binary)) and 24 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0012I Integer solution of -63 found by DiveCoefficient after 0 iterations and 0 nodes (0.00 seconds)\nCbc0038I Full problem 4 rows 6 columns, reduced to 2 rows 2 columns\nCbc0012I Integer solution of -107 found by DiveCoefficient after 8 iterations and 0 nodes (0.00 seconds)\nCbc0031I 2 added rows had average density of 6\nCbc0013I At root node, 2 cuts changed objective from -114.03243 to -107 in 4 passes\nCbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 1 (Gomory) - 5 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 6 (TwoMirCuts) - 7 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1\nCbc0001I Search completed - best objective -107, took 8 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from -114.032 to -107\nProbing was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 4 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 4 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                107.00000000\nEnumerated nodes:               0\nTotal iterations:               8\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n107.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.1654376983642578}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [6, 21, 19, 3, 24, 44]
consumption (rows=resources) = [[3, 13, 5, 13, 10, 15], [7, 5, 4, 5, 12, 13], [6, 12, 14, 8, 15, 5], [15, 11, 5, 12, 8, 11]]
capacity = [36, 54, 36, 36]
upper_bounds = [3, 3, 3, 3, 3, 3]"
549,rod,15,615,42,0,42,0,"{'ok': True, 'value': 615, 'stdout': '615\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09148716926574707}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [41, 37, 17, 7, 22, 22, 5, 30, 37, 44, 25, 18, 26, 22, 5]"
550,ilp_assign,20,51,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'Traceback (most recent call last):\n  File ""/tmp/cot_exec_5oguqnwm/main.py"", line 13, in <module>\n    prob += C[i][j] * worker[i] * task[j]\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 1028, in __mul__\n    return self * LpAffineExpression(other)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 1016, in __mul__\n    raise TypeError(""Non-constant expressions cannot be multiplied"")\nTypeError: Non-constant expressions cannot be multiplied\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17814254760742188}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[37, 51, 25, 24, 40, 3, 3], [39, 9, 21, 31, 4, 54, 24], [28, 27, 40, 45, 48, 1, 47], [7, 51, 9, 36, 56, 2, 36], [10, 25, 27, 20, 35, 43, 39], [42, 3, 6, 12, 51, 16, 41], [33, 12, 17, 52, 27, 30, 50]]"
551,ilp_prod,20,164,42,0,144,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_ol3snjk5/main.py"", line 12, in <module>\n    vars = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17506718635559082}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [50, 3, 12, 15, 32, 27]
consumption (rows=resources) = [[13, 12, 9, 18, 4, 16], [17, 6, 9, 20, 9, 15], [20, 19, 2, 20, 6, 5], [12, 6, 11, 14, 16, 18]]
capacity = [40, 65, 62, 61]
upper_bounds = [3, 3, 4, 3, 3, 3]"
552,ilp_partition,20,1,42,0,42,0,"{'ok': True, 'value': 7, 'stdout': '7\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.23526597023010254}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [15, 30, 15, 29, 5, 54, 49, 14, 10, 59, 42, 20, 47, 56, 4, 24, 52, 45, 33, 34]"
553,ilp_assign,5,19,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_cu_y9m94/main.py"", line 8\n    tasks = range(5)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.11306142807006836}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[9, 4, 8, 4, 5], [5, 10, 9, 9, 5], [15, 4, 3, 4, 7], [15, 1, 4, 9, 12], [8, 1, 6, 6, 7]]"
554,ilp_assign,10,33,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_2krl_cpj/main.py"", line 21, in <module>\n    pulp.lpSolve(prob)\nAttributeError: module \'pulp\' has no attribute \'lpSolve\'. Did you mean: \'LpSolver\'?\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17259693145751953}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[29, 9, 27, 26, 1, 21, 22], [21, 30, 28, 4, 10, 24, 27], [8, 19, 19, 13, 1, 13, 3], [21, 19, 3, 27, 8, 3, 14], [28, 28, 17, 15, 18, 28, 10], [17, 25, 2, 5, 16, 16, 20], [12, 5, 18, 4, 7, 9, 18]]"
555,lcs,15,7,12,0,6,0,"{'ok': True, 'value': 7, 'stdout': '7\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21607136726379395}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""ccbbbdaddaacdcd""
T = ""dcdabccbabcdcc"""
556,lcs,15,7,42,0,6,0,"{'ok': True, 'value': 7, 'stdout': '7\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21744775772094727}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""acdabbbbbbadadc""
T = ""cbcccacdbaaadab"""
557,knap,20,747,42,0,842,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/5ac7780b6e514ba6bf0016efda184d11-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/5ac7780b6e514ba6bf0016efda184d11-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 6 COLUMNS\nAt line 87 RHS\nAt line 89 BOUNDS\nAt line 110 ENDATA\nProblem MODEL has 1 rows, 20 columns and 20 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 752.588 - 0.00 seconds\nCgl0004I processed model has 1 rows, 20 columns (20 integer (20 of which binary)) and 20 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 1 integers unsatisfied sum - 0.235294\nCbc0038I Solution found of -734\nCbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 20 columns, reduced to 0 rows 0 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -736.759\nCbc0038I Reduced cost fixing fixed 14 variables on major pass 2\nCbc0038I Pass   1: suminf.    0.03492 (1) obj. -736.759 iterations 1\nCbc0038I Pass   2: suminf.    0.23529 (1) obj. -752.588 iterations 1\nCbc0038I Pass   3: suminf.    0.17647 (1) obj. -739.059 iterations 1\nCbc0038I Pass   4: suminf.    0.20559 (1) obj. -736.759 iterations 1\nCbc0038I Pass   5: suminf.    0.17647 (1) obj. -739.059 iterations 1\nCbc0038I Pass   6: suminf.    0.17647 (1) obj. -739.059 iterations 0\nCbc0038I Pass   7: suminf.    0.17647 (1) obj. -739.059 iterations 0\nCbc0038I Pass   8: suminf.    0.41576 (2) obj. -736.759 iterations 1\nCbc0038I Pass   9: suminf.    0.17647 (1) obj. -739.059 iterations 1\nCbc0038I Pass  10: suminf.    0.41176 (1) obj. -749.471 iterations 6\nCbc0038I Pass  11: suminf.    0.42733 (1) obj. -736.759 iterations 1\nCbc0038I Pass  12: suminf.    0.41176 (1) obj. -749.471 iterations 1\nCbc0038I Pass  13: suminf.    0.03742 (1) obj. -736.759 iterations 2\nCbc0038I Pass  14: suminf.    0.41176 (1) obj. -749.471 iterations 2\nCbc0038I Pass  15: suminf.    0.41176 (1) obj. -749.471 iterations 0\nCbc0038I Pass  16: suminf.    0.26577 (2) obj. -736.759 iterations 1\nCbc0038I Pass  17: suminf.    0.26577 (2) obj. -736.759 iterations 0\nCbc0038I Pass  18: suminf.    0.26577 (2) obj. -736.759 iterations 0\nCbc0038I Pass  19: suminf.    0.39546 (1) obj. -736.759 iterations 3\nCbc0038I Pass  20: suminf.    0.38235 (1) obj. -737.794 iterations 1\nCbc0038I Pass  21: suminf.    0.39546 (1) obj. -736.759 iterations 1\nCbc0038I Pass  22: suminf.    0.73082 (2) obj. -736.759 iterations 2\nCbc0038I Pass  23: suminf.    0.48735 (1) obj. -736.759 iterations 2\nCbc0038I Pass  24: suminf.    0.17647 (1) obj. -752.059 iterations 2\nCbc0038I Pass  25: suminf.    0.37014 (1) obj. -736.759 iterations 1\nCbc0038I Pass  26: suminf.    0.41386 (2) obj. -736.759 iterations 3\nCbc0038I Pass  27: suminf.    0.53082 (2) obj. -736.759 iterations 3\nCbc0038I Pass  28: suminf.    0.33209 (2) obj. -736.759 iterations 1\nCbc0038I Pass  29: suminf.    0.03742 (1) obj. -736.759 iterations 2\nCbc0038I Pass  30: suminf.    0.03742 (1) obj. -736.759 iterations 0\nCbc0038I Rounding solution of -747 is better than previous of -734\n\nCbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 20 columns, reduced to 1 rows 4 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -748.918\nCbc0038I Reduced cost fixing fixed 16 variables on major pass 3\nCbc0038I Pass  30: suminf.    0.18883 (1) obj. -748.918 iterations 0\nCbc0038I Pass  31: suminf.    0.23529 (1) obj. -752.588 iterations 1\nCbc0038I Pass  32: suminf.    0.04080 (1) obj. -748.918 iterations 3\nCbc0038I Pass  33: suminf.    0.04080 (1) obj. -748.918 iterations 0\nCbc0038I Pass  34: suminf.    0.47059 (1) obj. -752.176 iterations 2\nCbc0038I Pass  35: suminf.    0.42934 (1) obj. -748.918 iterations 1\nCbc0038I Pass  36: suminf.    0.18883 (1) obj. -748.918 iterations 1\nCbc0038I Pass  37: suminf.    0.42934 (1) obj. -748.918 iterations 1\nCbc0038I Pass  38: suminf.    0.42934 (1) obj. -748.918 iterations 0\nCbc0038I Pass  39: suminf.    0.42934 (1) obj. -748.918 iterations 0\nCbc0038I Pass  40: suminf.    0.42934 (1) obj. -748.918 iterations 0\nCbc0038I Pass  41: suminf.    0.42934 (1) obj. -748.918 iterations 0\nCbc0038I Pass  42: suminf.    0.29612 (1) obj. -748.918 iterations 2\nCbc0038I Pass  43: suminf.    0.29612 (1) obj. -748.918 iterations 0\nCbc0038I Pass  44: suminf.    0.41176 (1) obj. -749.471 iterations 2\nCbc0038I Pass  45: suminf.    0.41876 (1) obj. -748.918 iterations 1\nCbc0038I Pass  46: suminf.    0.41176 (1) obj. -749.471 iterations 1\nCbc0038I Pass  47: suminf.    0.41876 (1) obj. -748.918 iterations 1\nCbc0038I Pass  48: suminf.    0.41876 (1) obj. -748.918 iterations 0\nCbc0038I Pass  49: suminf.    0.04080 (1) obj. -748.918 iterations 2\nCbc0038I Pass  50: suminf.    0.04080 (1) obj. -748.918 iterations 0\nCbc0038I Pass  51: suminf.    0.47059 (1) obj. -752.176 iterations 2\nCbc0038I Pass  52: suminf.    0.42934 (1) obj. -748.918 iterations 1\nCbc0038I Pass  53: suminf.    0.41876 (1) obj. -748.918 iterations 1\nCbc0038I Pass  54: suminf.    0.41176 (1) obj. -749.471 iterations 1\nCbc0038I Pass  55: suminf.    0.41876 (1) obj. -748.918 iterations 1\nCbc0038I Pass  56: suminf.    0.41176 (1) obj. -749.471 iterations 1\nCbc0038I Pass  57: suminf.    0.41876 (1) obj. -748.918 iterations 1\nCbc0038I Pass  58: suminf.    0.34073 (1) obj. -748.918 iterations 1\nCbc0038I Pass  59: suminf.    0.35294 (1) obj. -749.882 iterations 1\nCbc0038I No solution found this major pass\nCbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 20 columns, reduced to 1 rows 4 columns\nCbc0038I Mini branch and bound did not improve solution (0.01 seconds)\nCbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -747 - took 0.00 seconds\nCbc0012I Integer solution of -747 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)\nCbc0038I Full problem 1 rows 20 columns, reduced to 1 rows 3 columns\nCbc0006I The LP relaxation is infeasible or too expensive\nCbc0013I At root node, 0 cuts changed objective from -752.58824 to -752.58824 in 1 passes\nCbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0001I Search completed - best objective -747, took 0 iterations and 0 nodes (0.01 seconds)\nCbc0035I Maximum depth 0, 16 variables fixed on reduced cost\nCuts at root node changed objective from -752.588 to -752.588\nProbing was tried 1 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                747.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.01\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.01\n\n747.0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.18229389190673828}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [4, 14, 15, 20, 8, 9, 36, 5, 8, 16, 34, 34, 1, 12, 7, 28, 7, 20, 19, 19]
V = [12, 61, 21, 60, 71, 46, 17, 48, 19, 66, 51, 79, 53, 53, 58, 19, 79, 47, 61, 18]
C = 158"
558,ilp_prod,15,156,42,0,168,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_cq51e97g/main.py"", line 10\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08367085456848145}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [4, 37, 38, 41, 16, 11]
consumption (rows=resources) = [[13, 11, 2, 12, 9, 10], [8, 13, 5, 15, 6, 2], [2, 6, 7, 12, 11, 8], [7, 7, 1, 10, 14, 14]]
capacity = [47, 40, 30, 60]
upper_bounds = [3, 3, 4, 3, 3, 3]"
559,ilp_partition,10,1,42,0,4,0,"{'ok': True, 'value': 1, 'stdout': '1\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2212076187133789}",1,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [7, 13, 4, 27, 15, 23, 21, 26, 30, 13]"
560,lcs,10,7,4,0,5,0,"{'ok': True, 'value': 7, 'stdout': '7\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.23625898361206055}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""bababbadab""
T = ""babbaabcac"""
561,lcs,20,13,42,0,9,0,"{'ok': True, 'value': 13, 'stdout': '13\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20757007598876953}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""bdcbdcadccdcdbdbccbb""
T = ""bdbcbcbcdadccdcccca"""
562,ilp_partition,15,1,42,0,42,0,"{'ok': True, 'value': 3, 'stdout': '3\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21313977241516113}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [25, 5, 36, 26, 10, 34, 12, 5, 45, 29, 5, 13, 11, 25, 18]"
563,ilp_prod,15,140,42,0,194,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_n8sxfmvj/main.py"", line 12, in <module>\n    x = pulp.LpVariable.dicts(""x"", range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.15619492530822754}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [22, 27, 5, 3, 38, 43]
consumption (rows=resources) = [[2, 6, 7, 6, 13, 15], [4, 11, 2, 12, 1, 4], [11, 9, 11, 9, 12, 6], [13, 7, 12, 6, 6, 14]]
capacity = [47, 39, 31, 54]
upper_bounds = [3, 3, 3, 3, 3, 3]"
564,ilp_partition,15,1,42,0,42,0,"{'ok': True, 'value': 17, 'stdout': '17\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.19868683815002441}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [24, 35, 23, 37, 30, 44, 18, 27, 16, 34, 24, 37, 40, 38, 12]"
565,ilp_prod,10,81,42,0,102,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_ptu9qpuj/main.py"", line 10, in <module>\n    x = pulp.LpVariable.dicts(""x"", range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16604328155517578}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [24, 24, 9, 15, 4]
consumption (rows=resources) = [[5, 10, 3, 8, 4], [3, 7, 8, 1, 6], [4, 3, 5, 10, 10], [8, 6, 3, 10, 2]]
capacity = [39, 32, 22, 22]
upper_bounds = [3, 3, 4, 3, 3]"
566,ilp_assign,20,108,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_bc4z239n/main.py"", line 12, in <module>\n    objective = pulp.lpSum([C[i][j] * vars[i][j] for i in range(n) for j in range(n)])\n  File ""/tmp/cot_exec_bc4z239n/main.py"", line 12, in <listcomp>\n    objective = pulp.lpSum([C[i][j] * vars[i][j] for i in range(n) for j in range(n)])\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1508190631866455}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[21, 4, 27, 57, 51, 39, 7], [31, 15, 45, 16, 16, 35, 53], [17, 8, 23, 23, 30, 33, 8], [37, 35, 23, 37, 22, 23, 18], [27, 46, 35, 23, 39, 35, 58], [14, 36, 25, 53, 49, 59, 50], [37, 36, 28, 55, 44, 35, 5]]"
567,ilp_prod,5,27,56,0,58,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'no_fenced_code', 'retcode': None, 'timeout': False, 'duration_s': 0.0}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [9, 4, 13]
consumption (rows=resources) = [[4, 3, 5], [4, 4, 1], [5, 4, 1]]
capacity = [12, 16, 19]
upper_bounds = [3, 4, 3]"
568,ilp_partition,15,0,42,0,42,0,"{'ok': True, 'value': 10, 'stdout': '10\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21732831001281738}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [22, 8, 13, 42, 9, 15, 44, 24, 18, 41, 10, 4, 27, 20, 19]"
569,ilp_prod,5,32,42,0,58,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'no_fenced_code', 'retcode': None, 'timeout': False, 'duration_s': 0.0}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [8, 13, 6]
consumption (rows=resources) = [[4, 4, 3], [4, 2, 4], [4, 4, 5]]
capacity = [11, 19, 17]
upper_bounds = [3, 3, 3]"
570,knap,20,577,42,0,1428,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_an7ioxtd/main.py"", line 8\n    dp = np.zeros((len(V)+1, C+1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10020804405212402}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [20, 16, 35, 20, 12, 18, 39, 34, 36, 23, 14, 13, 2, 24, 2, 21, 34, 40, 27, 14]
V = [50, 34, 11, 48, 50, 30, 55, 9, 28, 67, 30, 24, 25, 2, 72, 3, 68, 5, 9, 48]
C = 222"
571,lcs,5,3,3,1,3,1,"{'ok': True, 'value': 3, 'stdout': '3\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21756505966186523}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""adadb""
T = ""cada"""
572,ilp_prod,20,209,42,0,192,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_7pfu77bi/main.py"", line 11, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17697405815124512}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [28, 51, 9, 7, 24, 22]
consumption (rows=resources) = [[9, 13, 11, 2, 2, 4], [8, 2, 1, 4, 15, 3], [2, 14, 19, 6, 14, 3], [15, 17, 8, 4, 4, 7]]
capacity = [56, 54, 57, 61]
upper_bounds = [4, 3, 3, 9, 3, 8]"
573,knap,5,30,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_71xv5rxk/main.py"", line 8\n    dp = np.zeros((len(V)+1, C+1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08994126319885254}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [4, 8, 7, 6, 5]
V = [9, 8, 8, 2, 19]
C = 15"
574,lcs,15,9,42,0,6,0,"{'ok': True, 'value': 9, 'stdout': '9\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21281719207763672}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""cdcbbabbcddcccd""
T = ""addaacbaabcdccb"""
575,ilp_assign,10,34,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/3278f14bb04b4d48a64d1e300a7506cf-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/3278f14bb04b4d48a64d1e300a7506cf-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 34 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 34\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 34 - took 0.00 seconds\nCbc0012I Integer solution of 34 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 34, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 34 to 34\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                34.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n34.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.17961382865905762}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[4, 17, 30, 9, 23, 16, 26], [6, 12, 22, 5, 4, 21, 5], [3, 21, 30, 13, 6, 6, 8], [26, 10, 27, 28, 28, 29, 4], [2, 30, 20, 7, 1, 20, 23], [7, 1, 26, 30, 21, 15, 23], [7, 20, 13, 10, 5, 28, 11]]"
576,ilp_partition,5,0,42,0,4,0,"{'ok': True, 'value': 2, 'stdout': '2\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.252103328704834}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [4, 7, 8, 3, 14]"
577,ilp_prod,5,40,42,0,60,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'no_fenced_code', 'retcode': None, 'timeout': False, 'duration_s': 0.0}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [4, 6, 12]
consumption (rows=resources) = [[2, 5, 5], [3, 4, 3], [1, 1, 3]]
capacity = [19, 13, 11]
upper_bounds = [4, 3, 3]"
578,ilp_partition,15,1,42,0,42,0,"{'ok': True, 'value': 25, 'stdout': '25\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21265411376953125}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [18, 27, 6, 34, 2, 18, 7, 19, 4, 39, 44, 14, 18, 42, 3]"
579,ilp_assign,20,77,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_e3g6s4y6/main.py"", line 12, in <module>\n    model += pulp.lpSum(C[i][j] * vars[i][j] for i in range(n) for j in range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 2469, in lpSum\n    return LpAffineExpression().addInPlace(vector)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 968, in addInPlace\n    for e in other:\n  File ""/tmp/cot_exec_e3g6s4y6/main.py"", line 12, in <genexpr>\n    model += pulp.lpSum(C[i][j] * vars[i][j] for i in range(n) for j in range(n))\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16369223594665527}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[25, 45, 60, 27, 30, 6, 52], [39, 33, 25, 21, 57, 59, 51], [19, 26, 7, 27, 35, 58, 58], [8, 36, 35, 39, 7, 20, 52], [10, 52, 32, 43, 50, 39, 31], [17, 3, 29, 20, 46, 7, 23], [5, 3, 55, 30, 16, 30, 39]]"
580,ilp_partition,5,1,4,0,1,1,"{'ok': True, 'value': 1, 'stdout': '1\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21145009994506836}",1,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [1, 9, 9, 8, 10]"
581,ilp_prod,20,118,42,0,157,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_73_b6ubn/main.py"", line 10\n    x = pulp.LpVariable.dicts(""x"", range(len(profit)), lowBound=0, upBound=upper_bounds)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08691024780273438}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [27, 8, 41, 30, 30, 40]
consumption (rows=resources) = [[10, 2, 3, 8, 16, 11], [19, 1, 12, 7, 4, 18], [6, 8, 15, 11, 10, 9], [2, 9, 19, 17, 10, 6]]
capacity = [44, 41, 41, 44]
upper_bounds = [3, 4, 3, 3, 3, 3]"
582,ilp_assign,10,41,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_9fno32bu/main.py"", line 9\n    x = pulp.LpVariable.dicts(\'x\', [(i, j) for i in range(n) for j in range(n)], cat=\'Binary\')\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09896206855773926}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[30, 7, 17, 6, 18, 3, 17], [6, 2, 10, 21, 9, 19, 29], [23, 22, 11, 28, 29, 12, 14], [12, 25, 7, 1, 20, 19, 16], [30, 5, 6, 13, 1, 6, 1], [9, 12, 30, 27, 25, 7, 14], [22, 7, 26, 8, 14, 29, 22]]"
583,knap,5,41,42,0,31,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_0ix2g9n8/main.py"", line 8\n    dp = np.zeros((len(W) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10425758361816406}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [9, 1, 5, 3, 4]
V = [12, 13, 17, 11, 4]
C = 11"
584,rod,15,540,42,0,42,0,"{'ok': True, 'value': 540, 'stdout': '540\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.10298299789428711}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [36, 32, 12, 33, 8, 8, 38, 7, 2, 40, 30, 12, 6, 35, 6]"
585,ilp_assign,10,41,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/7bf953b477d94f1b8af955481949432d-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/7bf953b477d94f1b8af955481949432d-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 41 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 41\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 41 - took 0.00 seconds\nCbc0012I Integer solution of 41 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 41, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 41 to 41\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                41.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n41.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.18015360832214355}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[3, 14, 28, 20, 19, 13, 1], [12, 17, 10, 8, 13, 16, 13], [12, 2, 27, 2, 14, 20, 14], [19, 30, 6, 23, 5, 11, 7], [5, 16, 30, 14, 11, 25, 25], [1, 29, 12, 12, 12, 24, 3], [26, 25, 13, 5, 23, 21, 2]]"
586,ilp_assign,15,69,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_vyfhlrzb/main.py"", line 11, in <module>\n    model += variables[i, j] * C[i][j]\nKeyError: (0, 0)\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.18245530128479004}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[29, 35, 29, 23, 32, 19, 25], [20, 8, 1, 45, 4, 2, 10], [2, 17, 11, 3, 32, 45, 28], [38, 27, 21, 26, 33, 14, 10], [39, 38, 43, 2, 27, 41, 22], [33, 26, 43, 42, 15, 16, 14], [9, 32, 13, 41, 37, 22, 3]]"
587,rod,10,130,42,0,42,0,"{'ok': True, 'value': 130, 'stdout': '130\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.0894920825958252}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [13, 14, 25, 12, 26, 15, 12, 10, 29, 16]"
588,lcs,10,4,4,1,5,0,"{'ok': True, 'value': 4, 'stdout': '4\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2046198844909668}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""bdacccdddc""
T = ""bddbbaacb"""
589,ilp_partition,15,1,42,0,42,0,"{'ok': True, 'value': 25, 'stdout': '25\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22090983390808105}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [17, 37, 2, 40, 33, 35, 33, 6, 19, 40, 11, 45, 30, 9, 12]"
590,ilp_partition,15,0,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': '0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.23237395286560059}",1,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [17, 19, 2, 36, 43, 38, 23, 21, 44, 19, 34, 34, 3, 21, 2]"
591,ilp_partition,15,1,42,0,42,0,"{'ok': True, 'value': 17, 'stdout': '17\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22323369979858398}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [29, 40, 33, 17, 11, 13, 35, 3, 13, 35, 39, 39, 33, 37, 28]"
592,ilp_partition,20,1,42,0,42,0,"{'ok': True, 'value': 11, 'stdout': '11\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21563076972961426}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [2, 43, 13, 40, 36, 3, 5, 37, 4, 51, 19, 14, 12, 24, 45, 59, 38, 35, 59, 56]"
593,knap,5,36,42,0,31,0,"{'ok': True, 'value': 36, 'stdout': '36\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2676212787628174}",1,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [5, 3, 8, 10, 9]
V = [7, 12, 17, 1, 13]
C = 17"
594,lcs,10,5,4,0,4,0,"{'ok': True, 'value': 5, 'stdout': '5\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.24270415306091309}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""acbcdcaaab""
T = ""ddabddaba"""
595,ilp_prod,15,200,42,0,204,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_r9fwlo8z/main.py"", line 11, in <module>\n    x = pulp.LpVariable.dicts(""x"", range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17609167098999023}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [20, 19, 32, 44, 27, 41]
consumption (rows=resources) = [[10, 7, 13, 1, 9, 14], [10, 13, 14, 11, 5, 15], [1, 9, 13, 11, 4, 5], [15, 1, 12, 7, 11, 4]]
capacity = [40, 56, 44, 38]
upper_bounds = [3, 4, 3, 4, 3, 3]"
596,knap,15,327,42,0,446,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_8w_4h78t/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08886075019836426}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [10, 16, 13, 16, 25, 20, 15, 25, 9, 1, 15, 15, 15, 30, 17]
V = [28, 48, 51, 40, 14, 39, 24, 41, 28, 11, 12, 43, 37, 52, 30]
C = 121"
597,ilp_assign,20,77,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_tomjadyn/main.py"", line 8\n    tasks = range(7)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09704971313476562}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[20, 6, 33, 22, 20, 52, 8], [8, 47, 23, 37, 25, 29, 11], [54, 41, 43, 32, 44, 5, 26], [53, 17, 2, 57, 8, 4, 5], [48, 39, 42, 56, 32, 11, 25], [24, 27, 46, 33, 33, 20, 7], [38, 33, 37, 17, 60, 17, 29]]"
598,knap,20,589,42,0,427,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_y5lhx9dd/main.py"", line 14\n    dp = np.zeros((num_items + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10817408561706543}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [22, 38, 14, 12, 38, 9, 36, 8, 28, 21, 4, 7, 31, 11, 25, 18, 23, 26, 1, 27]
V = [64, 62, 75, 46, 32, 25, 63, 67, 40, 16, 22, 61, 33, 11, 13, 49, 41, 3, 11, 44]
C = 199"
599,lcs,10,4,4,1,4,1,"{'ok': True, 'value': 4, 'stdout': '4\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.3135371208190918}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""dbddbadada""
T = ""adacacaaa"""
600,lcs,20,11,42,0,10,0,"{'ok': True, 'value': 11, 'stdout': '11\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.23204493522644043}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""abaaabddcdcdcadcdcbc""
T = ""baadccddbcbdbabadbba"""
601,ilp_assign,20,91,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_8bl_7bp9/main.py"", line 9, in <module>\n    worker_assignment = pulp.LpVariable.dicts(""worker"", range(n), range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 289, in __init__\n    if not math.isfinite(self.lowBound):\nTypeError: must be real number, not range\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.2424778938293457}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[17, 58, 21, 57, 34, 59, 17], [22, 6, 40, 18, 40, 56, 27], [28, 1, 27, 32, 58, 5, 31], [50, 53, 3, 42, 33, 10, 47], [34, 59, 55, 53, 48, 13, 24], [47, 13, 26, 46, 17, 8, 39], [22, 21, 39, 24, 60, 11, 25]]"
602,ilp_prod,5,56,0,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_obza3_0x/main.py"", line 10, in <module>\n    x = pulp.LpVariable.dicts(""x"", range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1708831787109375}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [15, 15, 13]
consumption (rows=resources) = [[2, 5, 3], [4, 1, 5], [5, 5, 4]]
capacity = [19, 16, 18]
upper_bounds = [3, 3, 3]"
603,ilp_assign,5,24,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_uwj14uwc/main.py"", line 12, in <module>\n    prob += pulp.lpSum([C[i][j] * vars[i][j] for i in range(n) for j in range(n)])\n  File ""/tmp/cot_exec_uwj14uwc/main.py"", line 12, in <listcomp>\n    prob += pulp.lpSum([C[i][j] * vars[i][j] for i in range(n) for j in range(n)])\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17508745193481445}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[7, 14, 7, 1, 11], [2, 6, 14, 13, 15], [1, 5, 13, 9, 12], [1, 5, 7, 1, 6], [6, 5, 10, 15, 13]]"
604,rod,15,630,107,0,42,0,"{'ok': True, 'value': 630, 'stdout': '630\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.10494422912597656}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [42, 19, 7, 1, 38, 34, 35, 26, 36, 26, 39, 37, 38, 41, 8]"
605,ilp_prod,20,300,42,0,204,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_60c7v0t7/main.py"", line 12, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17434167861938477}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [10, 4, 28, 25, 60, 24]
consumption (rows=resources) = [[10, 9, 4, 4, 8, 12], [14, 6, 10, 1, 4, 1], [17, 20, 19, 7, 5, 4], [18, 15, 7, 8, 9, 5]]
capacity = [42, 43, 80, 55]
upper_bounds = [3, 3, 4, 6, 5, 3]"
606,ilp_prod,5,30,42,0,58,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'no_fenced_code', 'retcode': None, 'timeout': False, 'duration_s': 0.0}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [7, 4, 11]
consumption (rows=resources) = [[3, 2, 4], [1, 3, 5], [5, 1, 5]]
capacity = [15, 17, 14]
upper_bounds = [3, 5, 3]"
607,lcs,20,12,42,0,9,0,"{'ok': True, 'value': 12, 'stdout': '12\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21100831031799316}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""badaabdccaabcacadbbb""
T = ""bddbcaaabcdacccaacbd"""
608,knap,10,161,42,0,109,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/e26d0215010a4c0e98a48fc2684ee3f2-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/e26d0215010a4c0e98a48fc2684ee3f2-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 6 COLUMNS\nAt line 47 RHS\nAt line 49 BOUNDS\nAt line 60 ENDATA\nProblem MODEL has 1 rows, 10 columns and 10 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 173.947 - 0.00 seconds\nCgl0004I processed model has 1 rows, 10 columns (10 integer (10 of which binary)) and 10 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 1 integers unsatisfied sum - 0.473684\nCbc0038I Pass   1: suminf.    0.47368 (1) obj. -173.947 iterations 0\nCbc0038I Solution found of -155\nCbc0038I Rounding solution of -161 is better than previous of -155\n\nCbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -163.195\nCbc0038I Reduced cost fixing fixed 4 variables on major pass 2\nCbc0038I Pass   2: suminf.    0.47368 (1) obj. -173.947 iterations 0\nCbc0038I Pass   3: suminf.    0.22763 (1) obj. -163.195 iterations 1\nCbc0038I Pass   4: suminf.    0.51296 (2) obj. -163.195 iterations 3\nCbc0038I Pass   5: suminf.    0.51296 (2) obj. -163.195 iterations 0\nCbc0038I Pass   6: suminf.    0.21053 (1) obj. -171.421 iterations 1\nCbc0038I Pass   7: suminf.    0.43904 (1) obj. -163.195 iterations 1\nCbc0038I Pass   8: suminf.    0.43904 (1) obj. -163.195 iterations 0\nCbc0038I Pass   9: suminf.    0.72905 (2) obj. -163.195 iterations 2\nCbc0038I Pass  10: suminf.    0.72905 (2) obj. -163.195 iterations 0\nCbc0038I Pass  11: suminf.    0.72905 (2) obj. -163.195 iterations 0\nCbc0038I Pass  12: suminf.    0.06096 (1) obj. -163.195 iterations 3\nCbc0038I Pass  13: suminf.    0.06096 (1) obj. -163.195 iterations 0\nCbc0038I Pass  14: suminf.    0.10526 (1) obj. -164.789 iterations 1\nCbc0038I Pass  15: suminf.    0.06096 (1) obj. -163.195 iterations 1\nCbc0038I Pass  16: suminf.    0.10526 (1) obj. -164.789 iterations 1\nCbc0038I Pass  17: suminf.    0.10000 (1) obj. -164.4 iterations 1\nCbc0038I Pass  18: suminf.    0.26290 (2) obj. -163.195 iterations 3\nCbc0038I Pass  19: suminf.    0.10526 (1) obj. -164.211 iterations 1\nCbc0038I Pass  20: suminf.    0.13348 (1) obj. -163.195 iterations 1\nCbc0038I Pass  21: suminf.    0.47368 (1) obj. -173.947 iterations 2\nCbc0038I Pass  22: suminf.    0.22763 (1) obj. -163.195 iterations 1\nCbc0038I Pass  23: suminf.    0.47368 (1) obj. -173.947 iterations 1\nCbc0038I Pass  24: suminf.    0.45257 (2) obj. -163.195 iterations 4\nCbc0038I Pass  25: suminf.    0.30000 (1) obj. -165.8 iterations 1\nCbc0038I Pass  26: suminf.    0.42717 (1) obj. -163.195 iterations 2\nCbc0038I Pass  27: suminf.    0.21053 (1) obj. -171.421 iterations 2\nCbc0038I Pass  28: suminf.    0.43904 (1) obj. -163.195 iterations 1\nCbc0038I Pass  29: suminf.    0.21053 (1) obj. -171.421 iterations 1\nCbc0038I Pass  30: suminf.    0.43904 (1) obj. -163.195 iterations 1\nCbc0038I Pass  31: suminf.    0.21053 (1) obj. -171.421 iterations 1\nCbc0038I No solution found this major pass\nCbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 10 columns, reduced to 1 rows 6 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -161 - took 0.00 seconds\nCbc0012I Integer solution of -161 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0006I The LP relaxation is infeasible or too expensive\nCbc0013I At root node, 0 cuts changed objective from -173.94737 to -173.94737 in 1 passes\nCbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0001I Search completed - best objective -161, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 4 variables fixed on reduced cost\nCuts at root node changed objective from -173.947 to -173.947\nProbing was tried 1 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                161.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.01\n\n161.0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.18137216567993164}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [5, 8, 7, 20, 20, 5, 18, 9, 3, 19]
V = [24, 6, 23, 34, 18, 12, 37, 31, 28, 36]
C = 57"
609,ilp_assign,15,54,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/827de7603b73490d9338069c4b923679-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/827de7603b73490d9338069c4b923679-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 54 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 54\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 54 - took 0.00 seconds\nCbc0012I Integer solution of 54 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 54, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 54 to 54\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                54.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n54.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.17091917991638184}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[36, 44, 4, 1, 40, 5, 41], [30, 32, 25, 23, 27, 2, 13], [11, 2, 9, 38, 6, 14, 13], [16, 1, 31, 21, 16, 38, 9], [27, 25, 34, 43, 32, 13, 26], [17, 34, 42, 19, 15, 11, 24], [2, 28, 18, 24, 7, 45, 23]]"
610,lcs,15,9,12,0,6,0,"{'ok': True, 'value': 9, 'stdout': '9\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20700740814208984}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""bcadbcdcbccccbb""
T = ""dbccccaaadccbc"""
611,ilp_partition,20,1,42,0,42,0,"{'ok': True, 'value': 35, 'stdout': '35\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20649933815002441}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [22, 45, 48, 28, 25, 3, 22, 18, 9, 19, 33, 60, 51, 31, 47, 19, 4, 51, 38, 6]"
612,ilp_partition,15,1,42,0,42,0,"{'ok': True, 'value': 11, 'stdout': '11\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20158767700195312}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [24, 22, 43, 20, 8, 25, 4, 14, 44, 30, 31, 8, 19, 23, 16]"
613,ilp_assign,5,32,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/cbcea58334a54ef98952a41063d17186-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/cbcea58334a54ef98952a41063d17186-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 15 COLUMNS\nAt line 141 RHS\nAt line 152 BOUNDS\nAt line 178 ENDATA\nProblem MODEL has 10 rows, 25 columns and 50 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 32 - 0.00 seconds\nCgl0004I processed model has 10 rows, 25 columns (25 integer (25 of which binary)) and 50 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 32\nCbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 32 - took 0.00 seconds\nCbc0012I Integer solution of 32 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 32, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 32 to 32\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                32.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_1qrhiqpe/main.py"", line 28, in <module>\n    print(value(objective))\nNameError: name \'value\' is not defined. Did you mean: \'False\'?\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.18250799179077148}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[3, 4, 2, 5, 10], [9, 9, 15, 15, 9], [10, 15, 14, 9, 13], [7, 14, 14, 8, 10], [9, 8, 3, 9, 14]]"
614,ilp_partition,10,1,42,0,4,0,"{'ok': True, 'value': 17, 'stdout': '17\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22197961807250977}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [19, 22, 22, 12, 20, 13, 18, 17, 26, 4]"
615,knap,5,46,42,0,39,0,"{'ok': True, 'value': 0, 'stdout': '46.0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.19716954231262207}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [10, 1, 9, 5, 3]
V = [3, 17, 12, 19, 10]
C = 14"
616,ilp_prod,20,231,231,1,243,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_y_z6lfhp/main.py"", line 11, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, cat=\'Integer\', upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16608715057373047}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [33, 37, 38, 47, 53, 59]
consumption (rows=resources) = [[11, 9, 3, 14, 10, 10], [3, 13, 8, 16, 8, 11], [7, 15, 20, 10, 17, 7], [3, 15, 11, 12, 9, 15]]
capacity = [77, 50, 41, 48]
upper_bounds = [5, 3, 3, 3, 3, 3]"
617,knap,15,385,220,0,221,0,"{'ok': True, 'value': 385, 'stdout': '385\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21751809120178223}",1,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [19, 25, 12, 17, 14, 2, 12, 25, 4, 11, 2, 7, 24, 20, 30]
V = [23, 12, 36, 49, 38, 47, 60, 54, 19, 32, 36, 12, 28, 24, 56]
C = 112"
618,ilp_prod,20,152,42,0,146,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_a0fzg983/main.py"", line 11, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, cat=\'Integer\', up=upper_bounds)\nTypeError: LpVariable.dicts() got an unexpected keyword argument \'up\'\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1898045539855957}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [38, 30, 30, 22, 30, 10]
consumption (rows=resources) = [[8, 14, 2, 18, 7, 7], [17, 17, 16, 20, 16, 16], [13, 4, 10, 17, 13, 16], [10, 17, 18, 20, 12, 11]]
capacity = [46, 70, 66, 45]
upper_bounds = [4, 3, 3, 3, 3, 4]"
619,knap,5,54,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_lhu3g4yx/main.py"", line 8\n    dp = np.zeros((len(W) + 1, C + 1)) \nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08043670654296875}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [7, 10, 8, 2, 3]
V = [15, 17, 18, 19, 17]
C = 15"
620,ilp_partition,10,1,42,0,42,0,"{'ok': True, 'value': 5, 'stdout': '5\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21110987663269043}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [26, 2, 23, 27, 20, 7, 6, 11, 22, 17]"
621,ilp_partition,20,0,42,0,42,0,"{'ok': True, 'value': 6, 'stdout': '6\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20263457298278809}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [9, 52, 30, 10, 31, 18, 45, 21, 23, 35, 47, 8, 51, 40, 40, 55, 34, 10, 35, 54]"
622,ilp_partition,20,1,42,0,42,0,"{'ok': True, 'value': 31, 'stdout': '31\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22261786460876465}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [55, 33, 29, 5, 60, 2, 21, 59, 25, 41, 31, 31, 16, 27, 54, 42, 35, 13, 14, 36]"
623,rod,15,630,42,0,42,0,"{'ok': True, 'value': 630, 'stdout': '630\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.07934975624084473}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [42, 5, 40, 1, 34, 43, 2, 44, 10, 29, 11, 4, 41, 3, 42]"
624,knap,20,705,42,0,1621,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/2d34e349f670494fa19a663fdf7f3f3f-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/2d34e349f670494fa19a663fdf7f3f3f-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 6 COLUMNS\nAt line 87 RHS\nAt line 89 BOUNDS\nAt line 110 ENDATA\nProblem MODEL has 1 rows, 20 columns and 20 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 707.051 - 0.00 seconds\nCgl0004I processed model has 1 rows, 20 columns (20 integer (20 of which binary)) and 20 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 1 integers unsatisfied sum - 0.025641\nCbc0038I Pass   1: suminf.    0.02564 (1) obj. -707.051 iterations 0\nCbc0038I Solution found of -633\nCbc0038I Rounding solution of -647 is better than previous of -633\n\nCbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -653.905\nCbc0038I Reduced cost fixing fixed 2 variables on major pass 2\nCbc0038I Pass   2: suminf.    0.02564 (1) obj. -707.051 iterations 0\nCbc0038I Pass   3: suminf.    0.27507 (1) obj. -653.905 iterations 1\nCbc0038I Pass   4: suminf.    0.82354 (2) obj. -653.905 iterations 5\nCbc0038I Solution found of -662\nCbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 20 columns, reduced to 1 rows 5 columns\nCbc0038I Mini branch and bound improved solution from -662 to -705 (0.00 seconds)\nCbc0038I Round again with cutoff of -706.21\nCbc0038I Reduced cost fixing fixed 18 variables on major pass 3\nCbc0038I Pass   5: suminf.    0.02564 (1) obj. -707.051 iterations 0\nCbc0038I Pass   6: suminf.    0.03671 (1) obj. -706.21 iterations 1\nCbc0038I Pass   7: suminf.    0.02564 (1) obj. -707.051 iterations 1\nCbc0038I Pass   8: suminf.    0.03671 (1) obj. -706.21 iterations 1\nCbc0038I Pass   9: suminf.    0.02564 (1) obj. -707.051 iterations 1\nCbc0038I Pass  10: suminf.    0.02564 (1) obj. -707.051 iterations 0\nCbc0038I Pass  11: suminf.    0.02564 (1) obj. -706.949 iterations 1\nCbc0038I Pass  12: suminf.    0.01592 (1) obj. -706.21 iterations 1\nCbc0038I Pass  13: suminf.    0.02564 (1) obj. -706.949 iterations 1\nCbc0038I Pass  14: suminf.    0.03671 (1) obj. -706.21 iterations 2\nCbc0038I Pass  15: suminf.    0.02564 (1) obj. -707.051 iterations 1\nCbc0038I Pass  16: suminf.    0.02564 (1) obj. -707.051 iterations 0\nCbc0038I Pass  17: suminf.    0.02564 (1) obj. -707.051 iterations 0\nCbc0038I Pass  18: suminf.    0.02564 (1) obj. -706.949 iterations 1\nCbc0038I Pass  19: suminf.    0.03671 (1) obj. -706.21 iterations 2\nCbc0038I Pass  20: suminf.    0.02564 (1) obj. -707.051 iterations 1\nCbc0038I Pass  21: suminf.    0.03671 (1) obj. -706.21 iterations 1\nCbc0038I Pass  22: suminf.    0.03671 (1) obj. -706.21 iterations 0\nCbc0038I Pass  23: suminf.    0.03671 (1) obj. -706.21 iterations 0\nCbc0038I Pass  24: suminf.    0.03671 (1) obj. -706.21 iterations 0\nCbc0038I Pass  25: suminf.    0.02564 (1) obj. -706.949 iterations 2\nCbc0038I Pass  26: suminf.    0.01592 (1) obj. -706.21 iterations 1\nCbc0038I Pass  27: suminf.    0.02564 (1) obj. -706.949 iterations 1\nCbc0038I Pass  28: suminf.    0.01592 (1) obj. -706.21 iterations 1\nCbc0038I Pass  29: suminf.    0.02564 (1) obj. -706.949 iterations 1\nCbc0038I Pass  30: suminf.    0.03671 (1) obj. -706.21 iterations 2\nCbc0038I Pass  31: suminf.    0.02564 (1) obj. -707.051 iterations 1\nCbc0038I Pass  32: suminf.    0.03671 (1) obj. -706.21 iterations 1\nCbc0038I Pass  33: suminf.    0.03671 (1) obj. -706.21 iterations 0\nCbc0038I Pass  34: suminf.    0.02564 (1) obj. -707.051 iterations 1\nCbc0038I No solution found this major pass\nCbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -705 - took 0.00 seconds\nCbc0012I Integer solution of -705 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective -705, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 18 variables fixed on reduced cost\nCuts at root node changed objective from -707.051 to -705\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                705.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n705.0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.17057275772094727}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [26, 38, 16, 9, 5, 39, 23, 40, 27, 32, 13, 36, 20, 37, 15, 34, 34, 23, 6, 13]
V = [5, 17, 55, 21, 74, 76, 64, 60, 79, 14, 58, 23, 29, 72, 41, 80, 69, 67, 25, 16]
C = 243"
625,rod,5,20,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'no_fenced_code', 'retcode': None, 'timeout': False, 'duration_s': 0.0}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [4, 5, 2, 11, 10]"
626,knap,5,38,42,0,31,0,"{'ok': True, 'value': 0, 'stdout': '38.0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22772836685180664}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [1, 7, 3, 7, 5]
V = [6, 3, 20, 1, 12]
C = 11"
627,ilp_partition,15,1,42,0,42,0,"{'ok': True, 'value': 5, 'stdout': '5\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20801043510437012}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [40, 36, 41, 14, 2, 37, 17, 2, 24, 41, 6, 21, 27, 23, 38]"
628,ilp_prod,10,137,42,0,99,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_10thsmkp/main.py"", line 12, in <module>\n    variables = pulp.LpVariable.dicts(""x"", range(len(profit)), cat=""Integer"", lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.181779146194458}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [7, 18, 23, 19, 28]
consumption (rows=resources) = [[8, 9, 3, 8, 3], [1, 4, 7, 6, 5], [8, 5, 1, 7, 2], [4, 1, 10, 6, 7]]
capacity = [29, 27, 29, 33]
upper_bounds = [3, 3, 3, 3, 4]"
629,rod,10,170,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_z8m8wfjn/main.py"", line 4\n    dp = [0 for i in range(N + 1)]\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09531307220458984}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [17, 6, 2, 23, 7, 7, 1, 12, 8, 8]"
630,lcs,10,5,4,0,4,0,"{'ok': True, 'value': 5, 'stdout': '5\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22362494468688965}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""dbcacabadb""
T = ""cbbcadada"""
631,ilp_assign,20,89,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_mj90roi0/main.py"", line 18, in <module>\n    objective = pulp.lpSum(C[i][j] * variables[i][j] for i in range(n) for j in range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 2469, in lpSum\n    return LpAffineExpression().addInPlace(vector)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 968, in addInPlace\n    for e in other:\n  File ""/tmp/cot_exec_mj90roi0/main.py"", line 18, in <genexpr>\n    objective = pulp.lpSum(C[i][j] * variables[i][j] for i in range(n) for j in range(n))\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17104029655456543}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[53, 35, 58, 4, 10, 58, 59], [26, 19, 47, 37, 3, 46, 9], [31, 36, 37, 45, 7, 32, 16], [58, 9, 51, 35, 37, 42, 29], [56, 14, 42, 14, 34, 35, 50], [13, 19, 21, 33, 44, 24, 7], [4, 33, 42, 20, 26, 36, 28]]"
632,lcs,10,6,4,0,5,0,"{'ok': True, 'value': 6, 'stdout': '6\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2045135498046875}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""bdcdddcbba""
T = ""cdacbbabdb"""
633,ilp_partition,15,1,42,0,42,0,"{'ok': True, 'value': 31, 'stdout': '31\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20285463333129883}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [25, 12, 33, 42, 17, 25, 38, 24, 15, 11, 28, 8, 8, 28, 25]"
634,ilp_assign,10,52,42,0,42,0,"{'ok': True, 'value': 52, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/f2215b5c0d8f42bd90156fca88cc1a9a-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/f2215b5c0d8f42bd90156fca88cc1a9a-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 52 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 52\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 52 - took 0.00 seconds\nCbc0012I Integer solution of 52 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 52, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 52 to 52\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                52.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n52\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.16998934745788574}",1,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[17, 25, 17, 27, 23, 24, 30], [24, 9, 1, 13, 24, 17, 13], [5, 6, 20, 9, 4, 14, 4], [23, 16, 13, 30, 2, 16, 3], [19, 3, 8, 29, 11, 30, 13], [20, 22, 22, 27, 28, 11, 27], [12, 23, 22, 25, 30, 30, 9]]"
635,knap,5,31,42,0,32,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_6sfx4e7w/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.0877840518951416}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [9, 3, 3, 3, 8]
V = [12, 10, 13, 8, 4]
C = 13"
636,ilp_prod,15,288,219,0,171,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_fy7s34sr/main.py"", line 11, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17694711685180664}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [45, 18, 11, 15, 42, 36]
consumption (rows=resources) = [[6, 4, 12, 14, 14, 6], [3, 13, 7, 14, 8, 12], [3, 7, 6, 6, 13, 5], [5, 4, 15, 13, 6, 2]]
capacity = [41, 49, 51, 52]
upper_bounds = [6, 3, 3, 3, 3, 4]"
637,rod,20,460,177,0,107,0,"{'ok': True, 'value': 460, 'stdout': '460\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.10553526878356934}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [23, 30, 22, 24, 4, 7, 42, 26, 46, 52, 27, 9, 8, 19, 3, 43, 35, 26, 37, 23]"
638,lcs,15,7,42,0,7,1,"{'ok': True, 'value': 7, 'stdout': '7\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22110915184020996}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""dccaacdbbcdabbb""
T = ""ababbadcbadbaaaa"""
639,ilp_prod,15,93,42,0,138,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/3ba3b64e1fed45288a0bd1cc4cabd27f-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/3ba3b64e1fed45288a0bd1cc4cabd27f-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 9 COLUMNS\nAt line 52 RHS\nAt line 57 BOUNDS\nAt line 64 ENDATA\nProblem MODEL has 4 rows, 6 columns and 24 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 106.022 - 0.00 seconds\nCgl0004I processed model has 4 rows, 6 columns (6 integer (0 of which binary)) and 24 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0012I Integer solution of -90 found by DiveCoefficient after 0 iterations and 0 nodes (0.00 seconds)\nCbc0012I Integer solution of -93 found by DiveCoefficient after 6 iterations and 0 nodes (0.00 seconds)\nCbc0031I 4 added rows had average density of 3\nCbc0013I At root node, 4 cuts changed objective from -103.54955 to -93 in 4 passes\nCbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 1 (Gomory) - 6 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 6 (TwoMirCuts) - 9 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0001I Search completed - best objective -93, took 6 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from -103.55 to -93\nProbing was tried 4 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 4 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 4 times and created 9 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                93.00000000\nEnumerated nodes:               0\nTotal iterations:               6\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n93.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.16806316375732422}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [18, 3, 10, 5, 45, 24]
consumption (rows=resources) = [[9, 3, 2, 10, 15, 11], [12, 15, 8, 10, 6, 10], [5, 2, 10, 15, 4, 14], [15, 5, 11, 7, 14, 5]]
capacity = [35, 56, 56, 35]
upper_bounds = [3, 3, 3, 3, 3, 3]"
640,ilp_prod,5,32,42,0,60,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'no_fenced_code', 'retcode': None, 'timeout': False, 'duration_s': 0.0}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [14, 6, 5]
consumption (rows=resources) = [[5, 3, 4], [5, 3, 4], [5, 2, 5]]
capacity = [15, 17, 11]
upper_bounds = [3, 5, 3]"
641,ilp_prod,10,108,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_vqso64yt/main.py"", line 12, in <module>\n    variables = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16190838813781738}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [21, 10, 12, 11, 22]
consumption (rows=resources) = [[9, 10, 8, 7, 2], [2, 6, 8, 8, 7], [4, 10, 6, 3, 5], [6, 4, 10, 1, 7]]
capacity = [28, 30, 23, 40]
upper_bounds = [3, 3, 3, 3, 4]"
642,ilp_partition,10,1,42,0,42,0,"{'ok': True, 'value': 21, 'stdout': '21\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2069544792175293}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [28, 14, 27, 10, 24, 26, 10, 7, 12, 21]"
643,ilp_partition,15,1,42,0,42,0,"{'ok': True, 'value': 9, 'stdout': '9\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20742583274841309}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [17, 25, 35, 45, 15, 19, 24, 7, 15, 17, 8, 31, 27, 26, 40]"
644,ilp_prod,20,259,42,0,237,0,"{'ok': True, 'value': 2795675, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/d4cebb0191aa49f09ad82a562053c434-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/d4cebb0191aa49f09ad82a562053c434-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 9 COLUMNS\nAt line 40 RHS\nAt line 45 BOUNDS\nAt line 52 ENDATA\nProblem MODEL has 4 rows, 6 columns and 24 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nPresolve 4 (0) rows, 6 (0) columns and 24 (0) elements\n0  Obj -0 Dual inf 216.68132 (6)\n3  Obj 269.27957\nOptimal - objective value 269.27957\nOptimal objective 269.2795699 - 3 iterations time 0.002\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n269.2795675\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.15548992156982422}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [51, 57, 44, 21, 8, 14]
consumption (rows=resources) = [[16, 12, 9, 6, 14, 4], [15, 16, 8, 12, 10, 14], [4, 3, 3, 12, 10, 16], [7, 7, 13, 10, 13, 17]]
capacity = [56, 73, 50, 53]
upper_bounds = [3, 4, 4, 4, 4, 3]"
645,rod,10,200,42,0,42,0,"{'ok': True, 'value': 200, 'stdout': '200\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08782434463500977}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [20, 9, 6, 24, 7, 6, 3, 29, 29, 30]"
646,rod,20,280,42,0,42,0,"{'ok': True, 'value': 280, 'stdout': '280\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08813285827636719}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [14, 28, 31, 48, 6, 14, 52, 34, 12, 37, 48, 48, 26, 21, 9, 13, 33, 15, 57, 42]"
647,lcs,5,2,2,1,2,1,"{'ok': True, 'value': 2, 'stdout': '2\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20427227020263672}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""bccdd""
T = ""abda"""
648,ilp_prod,5,46,42,0,58,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'no_fenced_code', 'retcode': None, 'timeout': False, 'duration_s': 0.0}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [13, 4, 5]
consumption (rows=resources) = [[1, 1, 4], [4, 4, 2], [5, 5, 2]]
capacity = [20, 18, 18]
upper_bounds = [3, 3, 5]"
649,lcs,20,13,42,0,10,0,"{'ok': True, 'value': 13, 'stdout': '13\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20685815811157227}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""bcadaaddbccdbcdabbbc""
T = ""cbabbdabbacbcdcdabbda"""
650,lcs,10,5,4,0,5,1,"{'ok': True, 'value': 5, 'stdout': '5\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2306818962097168}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""bbadbdbccb""
T = ""cbbbddaab"""
651,ilp_prod,5,55,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'no_fenced_code', 'retcode': None, 'timeout': False, 'duration_s': 0.0}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [13, 3, 9]
consumption (rows=resources) = [[1, 5, 1], [4, 1, 5], [2, 1, 1]]
capacity = [14, 17, 14]
upper_bounds = [4, 3, 3]"
652,lcs,20,11,42,0,10,0,"{'ok': True, 'value': 11, 'stdout': '11\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20210027694702148}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""cddcdddadbaccbdcaddc""
T = ""dcbcccabdcacccdabcdd"""
653,ilp_prod,15,351,42,0,192,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_mw9521i_/main.py"", line 11, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.14990901947021484}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [29, 20, 10, 16, 39, 16]
consumption (rows=resources) = [[5, 7, 6, 1, 1, 11], [8, 6, 2, 15, 6, 12], [4, 9, 12, 2, 2, 2], [1, 7, 15, 14, 5, 1]]
capacity = [57, 56, 48, 59]
upper_bounds = [7, 5, 3, 3, 9, 4]"
654,knap,5,31,42,0,30,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_qi8ny56t/main.py"", line 8\n    dp = np.zeros((C + 1, len(W) + 1)) \nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08736348152160645}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [1, 1, 10, 4, 5]
V = [7, 6, 10, 5, 18]
C = 10"
655,rod,5,45,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_sa9g3hpe/main.py"", line 2\n    dp = [0] * (N + 1)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08887648582458496}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [9, 8, 10, 14, 5]"
656,knap,15,401,42,0,362,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_5owv34vz/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.0792841911315918}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [25, 30, 28, 2, 11, 8, 3, 14, 3, 11, 6, 26, 16, 8, 12]
V = [48, 53, 38, 37, 13, 52, 19, 11, 29, 60, 50, 47, 49, 8, 44]
C = 101"
657,ilp_prod,10,57,42,0,87,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec__4baag4o/main.py"", line 12, in <module>\n    x = pulp.LpVariable.dicts(""x"", range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16416335105895996}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [26, 26, 26, 5, 25]
consumption (rows=resources) = [[6, 7, 8, 6, 7], [9, 8, 8, 7, 9], [1, 1, 8, 6, 4], [2, 1, 6, 2, 3]]
capacity = [35, 23, 27, 24]
upper_bounds = [3, 3, 3, 3, 3]"
658,ilp_partition,20,0,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': '0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2336568832397461}",1,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [5, 27, 16, 54, 1, 58, 46, 54, 47, 36, 49, 27, 41, 17, 53, 16, 59, 24, 43, 15]"
659,ilp_assign,5,28,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/eb745b6df21a48e485263096fe7fd820-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/eb745b6df21a48e485263096fe7fd820-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 15 COLUMNS\nAt line 141 RHS\nAt line 152 BOUNDS\nAt line 178 ENDATA\nProblem MODEL has 10 rows, 25 columns and 50 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 28 - 0.00 seconds\nCgl0004I processed model has 10 rows, 25 columns (25 integer (25 of which binary)) and 50 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 28\nCbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 28 - took 0.00 seconds\nCbc0012I Integer solution of 28 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 28, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 28 to 28\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                28.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_wgugj3dv/main.py"", line 28, in <module>\n    print(value(objective))\nNameError: name \'value\' is not defined. Did you mean: \'False\'?\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.15656161308288574}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[11, 5, 7, 5, 15], [6, 8, 15, 1, 9], [15, 14, 8, 1, 7], [5, 10, 12, 6, 13], [3, 10, 10, 9, 14]]"
660,ilp_assign,10,39,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_ntaqkjlm/main.py"", line 12, in <module>\n    model += pulp.lpSum(C[i][j] * variables[i][j] for i in range(n) for j in range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 2469, in lpSum\n    return LpAffineExpression().addInPlace(vector)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 968, in addInPlace\n    for e in other:\n  File ""/tmp/cot_exec_ntaqkjlm/main.py"", line 12, in <genexpr>\n    model += pulp.lpSum(C[i][j] * variables[i][j] for i in range(n) for j in range(n))\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17550373077392578}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[21, 12, 3, 15, 17, 26, 14], [13, 25, 9, 3, 15, 15, 22], [5, 9, 23, 23, 30, 1, 26], [17, 12, 14, 30, 8, 28, 12], [23, 15, 26, 11, 15, 17, 25], [1, 5, 26, 23, 25, 8, 26], [23, 4, 8, 9, 12, 8, 28]]"
661,ilp_assign,20,69,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_wt4kmkmz/main.py"", line 13, in <module>\n    cost = pulp.lpSum([C[i][j] * worker_assignment[i] * task_assignment[j] for i in range(n) for j in range(n)])\n  File ""/tmp/cot_exec_wt4kmkmz/main.py"", line 13, in <listcomp>\n    cost = pulp.lpSum([C[i][j] * worker_assignment[i] * task_assignment[j] for i in range(n) for j in range(n)])\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 1028, in __mul__\n    return self * LpAffineExpression(other)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 1016, in __mul__\n    raise TypeError(""Non-constant expressions cannot be multiplied"")\nTypeError: Non-constant expressions cannot be multiplied\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.168351411819458}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[58, 19, 17, 33, 17, 4, 43], [29, 34, 55, 18, 57, 53, 44], [57, 16, 41, 30, 2, 38, 52], [42, 29, 30, 59, 8, 21, 28], [47, 14, 8, 52, 51, 28, 39], [5, 20, 45, 60, 9, 17, 31], [16, 4, 3, 38, 22, 4, 33]]"
662,ilp_prod,20,154,42,0,194,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_phrczi7w/main.py"", line 18, in <module>\n    model += x_j <= upper_bounds[j]  # Upper bounds\nTypeError: \'<=\' not supported between instances of \'list\' and \'int\'\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17267823219299316}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [43, 8, 25, 18, 12, 9]
consumption (rows=resources) = [[1, 1, 2, 6, 4, 2], [19, 20, 4, 12, 20, 3], [4, 19, 8, 16, 3, 2], [8, 1, 16, 10, 17, 8]]
capacity = [48, 61, 65, 46]
upper_bounds = [3, 3, 3, 4, 3, 5]"
663,knap,20,538,270,0,393,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/5b369cf5905a434fb8793f3911de5415-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/5b369cf5905a434fb8793f3911de5415-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 6 COLUMNS\nAt line 87 RHS\nAt line 89 BOUNDS\nAt line 110 ENDATA\nProblem MODEL has 1 rows, 20 columns and 20 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 550.094 - 0.00 seconds\nCgl0004I processed model has 1 rows, 20 columns (20 integer (20 of which binary)) and 20 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 1 integers unsatisfied sum - 0.46875\nCbc0038I Pass   1: suminf.    0.44118 (1) obj. -545.765 iterations 1\nCbc0038I Solution found of -510\nCbc0038I Rounding solution of -519 is better than previous of -510\n\nCbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 20 columns, reduced to 1 rows 2 columns\nCbc0038I Mini branch and bound improved solution from -519 to -523 (0.00 seconds)\nCbc0038I Round again with cutoff of -526.609\nCbc0038I Reduced cost fixing fixed 8 variables on major pass 2\nCbc0038I Pass   2: suminf.    0.44118 (1) obj. -545.765 iterations 0\nCbc0038I Pass   3: suminf.    0.25952 (1) obj. -526.609 iterations 1\nCbc0038I Pass   4: suminf.    0.46265 (1) obj. -526.609 iterations 4\nCbc0038I Pass   5: suminf.    0.44118 (1) obj. -532.765 iterations 1\nCbc0038I Pass   6: suminf.    0.46265 (1) obj. -526.609 iterations 1\nCbc0038I Pass   7: suminf.    0.48068 (2) obj. -526.609 iterations 3\nCbc0038I Pass   8: suminf.    0.48068 (2) obj. -526.609 iterations 0\nCbc0038I Pass   9: suminf.    0.20803 (1) obj. -526.609 iterations 2\nCbc0038I Pass  10: suminf.    0.20803 (1) obj. -526.609 iterations 0\nCbc0038I Pass  11: suminf.    0.41176 (1) obj. -529.353 iterations 2\nCbc0038I Pass  12: suminf.    0.36890 (1) obj. -526.609 iterations 1\nCbc0038I Pass  13: suminf.    0.20890 (1) obj. -526.609 iterations 2\nCbc0038I Pass  14: suminf.    0.20890 (1) obj. -526.609 iterations 0\nCbc0038I Pass  15: suminf.    0.47059 (1) obj. -532.882 iterations 2\nCbc0038I Pass  16: suminf.    0.43140 (1) obj. -526.609 iterations 1\nCbc0038I Pass  17: suminf.    0.49390 (1) obj. -526.609 iterations 1\nCbc0038I Pass  18: suminf.    0.44118 (1) obj. -530.765 iterations 1\nCbc0038I Pass  19: suminf.    0.49390 (1) obj. -526.609 iterations 1\nCbc0038I Pass  20: suminf.    0.42835 (2) obj. -526.609 iterations 4\nCbc0038I Pass  21: suminf.    0.29585 (1) obj. -526.609 iterations 2\nCbc0038I Pass  22: suminf.    0.20890 (1) obj. -526.609 iterations 1\nCbc0038I Pass  23: suminf.    0.47059 (1) obj. -532.882 iterations 2\nCbc0038I Pass  24: suminf.    0.43140 (1) obj. -526.609 iterations 1\nCbc0038I Pass  25: suminf.    0.10327 (1) obj. -526.609 iterations 2\nCbc0038I Pass  26: suminf.    0.26471 (1) obj. -536.941 iterations 1\nCbc0038I Pass  27: suminf.    0.10327 (1) obj. -526.609 iterations 1\nCbc0038I Pass  28: suminf.    0.56509 (2) obj. -526.609 iterations 3\nCbc0038I Pass  29: suminf.    0.09985 (1) obj. -526.609 iterations 3\nCbc0038I Solution found of -533\nCbc0038I Rounding solution of -538 is better than previous of -533\n\nCbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 20 columns, reduced to 1 rows 8 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -541.219\nCbc0038I Reduced cost fixing fixed 15 variables on major pass 3\nCbc0038I Pass  30: suminf.    0.46875 (1) obj. -550.094 iterations 1\nCbc0038I Pass  31: suminf.    0.35723 (1) obj. -541.219 iterations 1\nCbc0038I Pass  32: suminf.    0.15693 (1) obj. -541.219 iterations 2\nCbc0038I Pass  33: suminf.    0.15693 (1) obj. -541.219 iterations 0\nCbc0038I Pass  34: suminf.    0.34375 (1) obj. -546.531 iterations 2\nCbc0038I Pass  35: suminf.    0.23958 (1) obj. -541.219 iterations 1\nCbc0038I Pass  36: suminf.    0.23958 (1) obj. -541.219 iterations 0\nCbc0038I Pass  37: suminf.    0.15693 (1) obj. -541.219 iterations 1\nCbc0038I Pass  38: suminf.    0.28736 (1) obj. -541.219 iterations 1\nCbc0038I Pass  39: suminf.    0.28736 (1) obj. -541.219 iterations 0\nCbc0038I Pass  40: suminf.    0.46875 (1) obj. -550.094 iterations 2\nCbc0038I Pass  41: suminf.    0.35723 (1) obj. -541.219 iterations 1\nCbc0038I Pass  42: suminf.    0.28736 (1) obj. -541.219 iterations 3\nCbc0038I Pass  43: suminf.    0.28736 (1) obj. -541.219 iterations 0\nCbc0038I Pass  44: suminf.    0.43750 (1) obj. -545.312 iterations 2\nCbc0038I Pass  45: suminf.    0.35723 (1) obj. -541.219 iterations 1\nCbc0038I Pass  46: suminf.    0.31801 (1) obj. -541.219 iterations 2\nCbc0038I Pass  47: suminf.    0.37500 (1) obj. -544.125 iterations 1\nCbc0038I Pass  48: suminf.    0.31801 (1) obj. -541.219 iterations 1\nCbc0038I Pass  49: suminf.    0.31801 (1) obj. -541.219 iterations 0\nCbc0038I Pass  50: suminf.    0.23958 (1) obj. -541.219 iterations 1\nCbc0038I Pass  51: suminf.    0.25000 (1) obj. -541.75 iterations 1\nCbc0038I Pass  52: suminf.    0.23958 (1) obj. -541.219 iterations 1\nCbc0038I Pass  53: suminf.    0.46108 (2) obj. -541.219 iterations 1\nCbc0038I Pass  54: suminf.    0.23958 (1) obj. -541.219 iterations 2\nCbc0038I Pass  55: suminf.    0.23958 (1) obj. -541.219 iterations 0\nCbc0038I Pass  56: suminf.    0.46108 (2) obj. -541.219 iterations 1\nCbc0038I Pass  57: suminf.    0.28736 (1) obj. -541.219 iterations 2\nCbc0038I Pass  58: suminf.    0.28736 (1) obj. -541.219 iterations 0\nCbc0038I Pass  59: suminf.    0.43750 (1) obj. -545.312 iterations 2\nCbc0038I No solution found this major pass\nCbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 20 columns, reduced to 1 rows 5 columns\nCbc0038I Mini branch and bound did not improve solution (0.01 seconds)\nCbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -538 - took 0.00 seconds\nCbc0012I Integer solution of -538 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)\nCbc0038I Full problem 1 rows 20 columns, reduced to 1 rows 4 columns\nCbc0006I The LP relaxation is infeasible or too expensive\nCbc0013I At root node, 0 cuts changed objective from -550.09375 to -550.09375 in 1 passes\nCbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0001I Search completed - best objective -538, took 0 iterations and 0 nodes (0.01 seconds)\nCbc0035I Maximum depth 0, 12 variables fixed on reduced cost\nCuts at root node changed objective from -550.094 to -550.094\nProbing was tried 1 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                538.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.01\nTime (Wallclock seconds):       0.01\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.01   (Wallclock seconds):       0.01\n\n538.0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.177290678024292}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [6, 18, 6, 34, 1, 5, 26, 4, 30, 29, 32, 3, 4, 10, 2, 7, 26, 11, 6, 18]
V = [49, 57, 6, 64, 4, 17, 32, 37, 19, 3, 51, 64, 4, 31, 59, 23, 46, 5, 72, 13]
C = 139"
664,knap,20,605,42,0,1654,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/24056b5f735b4d2793d88e77af99bebd-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/24056b5f735b4d2793d88e77af99bebd-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 6 COLUMNS\nAt line 87 RHS\nAt line 89 BOUNDS\nAt line 110 ENDATA\nProblem MODEL has 1 rows, 20 columns and 20 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 610.143 - 0.00 seconds\nCgl0004I processed model has 1 rows, 20 columns (20 integer (20 of which binary)) and 20 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 1 integers unsatisfied sum - 0.0857143\nCbc0038I Pass   1: suminf.    0.08108 (1) obj. -608.973 iterations 1\nCbc0038I Solution found of -552\nCbc0038I Rounding solution of -575 is better than previous of -552\n\nCbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 20 columns, reduced to 1 rows 2 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -579.414\nCbc0038I Reduced cost fixing fixed 5 variables on major pass 2\nCbc0038I Pass   2: suminf.    0.08108 (1) obj. -608.973 iterations 0\nCbc0038I Pass   3: suminf.    0.44216 (1) obj. -579.414 iterations 1\nCbc0038I Pass   4: suminf.    0.03894 (1) obj. -579.414 iterations 1\nCbc0038I Pass   5: suminf.    0.08108 (1) obj. -582.027 iterations 1\nCbc0038I Pass   6: suminf.    0.03894 (1) obj. -579.414 iterations 1\nCbc0038I Pass   7: suminf.    0.47237 (2) obj. -579.414 iterations 5\nCbc0038I Pass   8: suminf.    0.07120 (1) obj. -579.414 iterations 2\nCbc0038I Pass   9: suminf.    0.35135 (1) obj. -596.784 iterations 1\nCbc0038I Pass  10: suminf.    0.52758 (2) obj. -579.414 iterations 3\nCbc0038I Pass  11: suminf.    0.46553 (1) obj. -579.414 iterations 2\nCbc0038I Pass  12: suminf.    0.49701 (2) obj. -579.414 iterations 2\nCbc0038I Pass  13: suminf.    0.46553 (1) obj. -579.414 iterations 1\nCbc0038I Pass  14: suminf.    0.31708 (1) obj. -579.414 iterations 1\nCbc0038I Pass  15: suminf.    0.30456 (2) obj. -579.414 iterations 2\nCbc0038I Pass  16: suminf.    0.31708 (1) obj. -579.414 iterations 1\nCbc0038I Pass  17: suminf.    0.34974 (2) obj. -579.414 iterations 4\nCbc0038I Pass  18: suminf.    0.30556 (1) obj. -581.944 iterations 2\nCbc0038I Pass  19: suminf.    0.47442 (1) obj. -579.414 iterations 2\nCbc0038I Pass  20: suminf.    0.32432 (1) obj. -591.892 iterations 1\nCbc0038I Pass  21: suminf.    0.28208 (2) obj. -579.414 iterations 3\nCbc0038I Pass  22: suminf.    0.28208 (2) obj. -579.414 iterations 0\nCbc0038I Pass  23: suminf.    0.04171 (1) obj. -579.414 iterations 1\nCbc0038I Solution found of -582\nCbc0038I Rounding solution of -592 is better than previous of -582\n\nCbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 20 columns, reduced to 1 rows 7 columns\nCbc0038I Mini branch and bound improved solution from -592 to -605 (0.00 seconds)\nCbc0038I Round again with cutoff of -606.828\nCbc0038I Reduced cost fixing fixed 17 variables on major pass 3\nCbc0038I Pass  24: suminf.    0.08571 (1) obj. -610.143 iterations 1\nCbc0038I Pass  25: suminf.    0.17764 (1) obj. -606.828 iterations 2\nCbc0038I Pass  26: suminf.    0.11111 (1) obj. -609.889 iterations 1\nCbc0038I Pass  27: suminf.    0.11111 (1) obj. -609.889 iterations 0\nCbc0038I Pass  28: suminf.    0.11111 (1) obj. -609.889 iterations 0\nCbc0038I Pass  29: suminf.    0.11111 (1) obj. -609.889 iterations 0\nCbc0038I Pass  30: suminf.    0.11111 (1) obj. -609.889 iterations 0\nCbc0038I Pass  31: suminf.    0.11111 (1) obj. -609.889 iterations 0\nCbc0038I Pass  32: suminf.    0.11111 (1) obj. -609.889 iterations 0\nCbc0038I Pass  33: suminf.    0.11111 (1) obj. -609.111 iterations 3\nCbc0038I Pass  34: suminf.    0.06149 (1) obj. -606.828 iterations 1\nCbc0038I Pass  35: suminf.    0.11111 (1) obj. -609.111 iterations 1\nCbc0038I Pass  36: suminf.    0.11111 (1) obj. -609.111 iterations 0\nCbc0038I Pass  37: suminf.    0.08571 (1) obj. -610.143 iterations 2\nCbc0038I Pass  38: suminf.    0.08571 (1) obj. -610.143 iterations 0\nCbc0038I Pass  39: suminf.    0.17764 (1) obj. -606.828 iterations 2\nCbc0038I Pass  40: suminf.    0.11111 (1) obj. -609.889 iterations 1\nCbc0038I Pass  41: suminf.    0.11111 (1) obj. -609.889 iterations 0\nCbc0038I Pass  42: suminf.    0.11111 (1) obj. -609.889 iterations 0\nCbc0038I Pass  43: suminf.    0.11111 (1) obj. -609.889 iterations 0\nCbc0038I Pass  44: suminf.    0.08571 (1) obj. -610.143 iterations 1\nCbc0038I Pass  45: suminf.    0.17764 (1) obj. -606.828 iterations 2\nCbc0038I Pass  46: suminf.    0.11111 (1) obj. -609.889 iterations 1\nCbc0038I Pass  47: suminf.    0.11111 (1) obj. -609.889 iterations 0\nCbc0038I Pass  48: suminf.    0.11111 (1) obj. -609.889 iterations 0\nCbc0038I Pass  49: suminf.    0.04063 (1) obj. -606.828 iterations 3\nCbc0038I Pass  50: suminf.    0.11111 (1) obj. -609.111 iterations 2\nCbc0038I Pass  51: suminf.    0.06149 (1) obj. -606.828 iterations 1\nCbc0038I Pass  52: suminf.    0.08571 (1) obj. -610.143 iterations 3\nCbc0038I Pass  53: suminf.    0.17764 (1) obj. -606.828 iterations 2\nCbc0038I No solution found this major pass\nCbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 20 columns, reduced to 1 rows 3 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -605 - took 0.00 seconds\nCbc0012I Integer solution of -605 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0038I Full problem 1 rows 20 columns, reduced to 1 rows 3 columns\nCbc0006I The LP relaxation is infeasible or too expensive\nCbc0013I At root node, 0 cuts changed objective from -610.14286 to -610.14286 in 1 passes\nCbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0001I Search completed - best objective -605, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 16 variables fixed on reduced cost\nCuts at root node changed objective from -610.143 to -610.143\nProbing was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                605.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.01   (Wallclock seconds):       0.01\n\n605.0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.18190717697143555}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [3, 36, 13, 36, 6, 27, 13, 7, 21, 30, 31, 7, 38, 28, 33, 22, 6, 14, 35, 37]
V = [50, 23, 71, 46, 21, 7, 59, 10, 23, 30, 25, 34, 1, 57, 66, 67, 29, 43, 45, 62]
C = 221"
665,ilp_assign,5,15,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/ef7a0cad84da474888ab7e185017663a-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/ef7a0cad84da474888ab7e185017663a-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 15 COLUMNS\nAt line 141 RHS\nAt line 152 BOUNDS\nAt line 178 ENDATA\nProblem MODEL has 10 rows, 25 columns and 50 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 15 - 0.00 seconds\nCgl0004I processed model has 10 rows, 25 columns (25 integer (25 of which binary)) and 50 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 15\nCbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 15 - took 0.00 seconds\nCbc0012I Integer solution of 15 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 15, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 15 to 15\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                15.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n15.0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.16709303855895996}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[6, 13, 9, 1, 11], [6, 10, 2, 8, 15], [11, 2, 14, 9, 8], [6, 9, 15, 13, 9], [1, 15, 3, 15, 6]]"
666,rod,15,600,42,0,42,0,"{'ok': True, 'value': 600, 'stdout': '600\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08441758155822754}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [40, 25, 18, 3, 3, 31, 29, 42, 6, 28, 9, 28, 14, 40, 2]"
667,ilp_partition,5,1,4,0,4,0,"{'ok': True, 'value': 5, 'stdout': '5\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20488429069519043}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [3, 11, 1, 14, 6]"
668,knap,15,294,42,0,390,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_eul4oaft/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08669090270996094}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [30, 14, 24, 29, 27, 4, 7, 28, 22, 14, 24, 27, 12, 14, 15]
V = [25, 28, 5, 32, 12, 33, 44, 14, 12, 7, 47, 28, 51, 24, 15]
C = 145"
669,lcs,20,9,42,0,10,0,"{'ok': True, 'value': 9, 'stdout': '9\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.24551081657409668}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""cbacccbacbacccdccdda""
T = ""caddbcadddadaaddcbc"""
670,knap,5,29,42,0,28,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_sjz3mhwa/main.py"", line 8\n    dp = np.zeros((len(V)+1, C+1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08754730224609375}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [3, 7, 8, 1, 9]
V = [9, 3, 9, 11, 3]
C = 14"
671,ilp_prod,15,164,165,0,144,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_gzyr1xra/main.py"", line 10\n    x_j = [pulp.LpVariable(f\'x_{i}\', lowBound=0, upBound=upper_bounds[i]) for i in range(len(profit))]\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08047127723693848}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [37, 45, 30, 5, 6, 28]
consumption (rows=resources) = [[11, 1, 14, 11, 8, 7], [6, 1, 10, 10, 8, 8], [5, 15, 11, 7, 11, 12], [8, 12, 13, 3, 10, 10]]
capacity = [32, 34, 59, 40]
upper_bounds = [3, 3, 3, 3, 4, 4]"
672,knap,10,155,42,0,111,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_1hxtng7o/main.py"", line 11\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.0881955623626709}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [19, 9, 13, 20, 9, 12, 20, 3, 14, 8]
V = [40, 31, 23, 19, 2, 7, 39, 34, 4, 11]
C = 63"
673,ilp_prod,20,240,42,0,229,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/883f692883d44ee9ac1025df9b3c53dc-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/883f692883d44ee9ac1025df9b3c53dc-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 9 COLUMNS\nAt line 52 RHS\nAt line 57 BOUNDS\nAt line 64 ENDATA\nProblem MODEL has 4 rows, 6 columns and 24 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 256.364 - 0.00 seconds\nCgl0004I processed model has 4 rows, 6 columns (6 integer (0 of which binary)) and 24 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0012I Integer solution of -180 found by DiveCoefficient after 0 iterations and 0 nodes (0.00 seconds)\nCbc0038I Full problem 4 rows 6 columns, reduced to 4 rows 2 columns\nCbc0012I Integer solution of -240 found by DiveCoefficient after 10 iterations and 0 nodes (0.00 seconds)\nCbc0031I 2 added rows had average density of 6\nCbc0013I At root node, 2 cuts changed objective from -256.36364 to -240 in 8 passes\nCbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 1 (Gomory) - 9 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0001I Search completed - best objective -240, took 10 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from -256.364 to -240\nProbing was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 8 times and created 9 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                240.00000000\nEnumerated nodes:               0\nTotal iterations:               10\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n240.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.18901443481445312}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [60, 29, 60, 54, 7, 28]
consumption (rows=resources) = [[6, 5, 11, 7, 16, 3], [10, 10, 19, 8, 12, 8], [5, 6, 11, 16, 17, 3], [11, 10, 11, 17, 11, 7]]
capacity = [43, 64, 46, 47]
upper_bounds = [4, 4, 3, 3, 3, 6]"
674,ilp_partition,15,0,42,0,42,0,"{'ok': True, 'value': 26, 'stdout': '26\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20350885391235352}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [15, 34, 20, 36, 12, 6, 7, 35, 36, 37, 39, 29, 11, 27, 12]"
675,ilp_prod,5,28,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_wefz58cy/main.py"", line 12, in <module>\n    vars = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17962408065795898}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [7, 7, 7]
consumption (rows=resources) = [[3, 4, 3], [5, 4, 1], [2, 2, 3]]
capacity = [13, 13, 11]
upper_bounds = [3, 3, 3]"
676,lcs,20,12,42,0,10,0,"{'ok': True, 'value': 12, 'stdout': '12\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22532200813293457}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""cccbcddbcadadcadccbd""
T = ""bdadccaabdcbdccdcacb"""
677,lcs,20,11,42,0,9,0,"{'ok': True, 'value': 11, 'stdout': '11\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22175812721252441}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""cbdacdadacacacbdddbc""
T = ""aaacbbbdccdcdadaadd"""
678,ilp_prod,20,124,42,0,138,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_i6bgromu/main.py"", line 10\n    x_j = [pulp.LpVariable(f\'x_{i}\', lowBound=0, upBound=upper_bounds[i]) for i in range(len(profit))]\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.0906519889831543}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [15, 3, 31, 11, 26, 24]
consumption (rows=resources) = [[3, 10, 1, 10, 16, 4], [6, 3, 15, 8, 8, 10], [1, 8, 13, 2, 2, 15], [15, 10, 5, 20, 10, 16]]
capacity = [56, 45, 49, 55]
upper_bounds = [3, 5, 3, 3, 3, 3]"
679,rod,10,220,42,0,42,0,"{'ok': True, 'value': 220, 'stdout': '220\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09718751907348633}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [22, 28, 30, 16, 20, 3, 15, 14, 7, 3]"
680,lcs,5,3,3,1,3,1,"{'ok': True, 'value': 3, 'stdout': '3\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22797846794128418}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""bacad""
T = ""ddbad"""
681,knap,15,391,42,0,251,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_p621d4c6/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09885263442993164}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [27, 7, 7, 11, 16, 15, 1, 27, 2, 10, 5, 17, 13, 3, 10]
V = [36, 38, 9, 21, 21, 57, 25, 31, 59, 41, 43, 37, 10, 53, 17]
C = 85"
682,ilp_partition,20,1,42,0,42,0,"{'ok': True, 'value': 13, 'stdout': '13\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2209916114807129}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [2, 53, 27, 7, 38, 52, 13, 48, 13, 21, 38, 43, 28, 13, 44, 11, 6, 10, 59, 9]"
683,ilp_prod,5,44,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_jedcc6ig/main.py"", line 10\n    x_j = [pulp.LpVariable(""x_%d"" % j, lowBound=0) for j in range(len(profit))]\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09230518341064453}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [11, 8, 5]
consumption (rows=resources) = [[1, 1, 3], [4, 3, 3], [1, 5, 4]]
capacity = [16, 16, 15]
upper_bounds = [4, 3, 3]"
684,ilp_prod,15,297,42,0,157,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_uf0ugb3e/main.py"", line 10\n    x = pulp.LpVariable.dicts(""x"", range(len(profit)), lowBound=0, upBound=upper_bounds)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09232354164123535}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [4, 21, 39, 33, 31, 15]
consumption (rows=resources) = [[12, 11, 7, 14, 3, 15], [3, 13, 3, 2, 6, 14], [4, 8, 12, 1, 2, 6], [12, 14, 15, 13, 1, 15]]
capacity = [59, 46, 40, 49]
upper_bounds = [4, 3, 3, 3, 7, 3]"
685,ilp_partition,10,1,42,0,42,0,"{'ok': True, 'value': 11, 'stdout': '11\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20250844955444336}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [22, 3, 26, 11, 2, 24, 25, 15, 9, 28]"
686,knap,15,371,42,0,270,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_gtiv8c2b/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.0866703987121582}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [25, 17, 21, 30, 8, 13, 14, 2, 2, 24, 24, 7, 12, 13, 11]
V = [49, 27, 18, 29, 46, 26, 12, 9, 45, 28, 23, 46, 44, 24, 55]
C = 111"
687,lcs,10,4,4,1,5,0,"{'ok': True, 'value': 4, 'stdout': '4\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.1984546184539795}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""bcbcccccca""
T = ""adabacdca"""
688,rod,20,460,42,0,42,0,"{'ok': True, 'value': 460, 'stdout': '460\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.0994868278503418}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [23, 34, 4, 47, 12, 41, 14, 40, 40, 2, 59, 28, 18, 25, 27, 36, 27, 28, 36, 42]"
689,ilp_partition,10,1,42,0,42,0,"{'ok': True, 'value': 3, 'stdout': '3\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2138519287109375}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [16, 18, 18, 7, 25, 25, 15, 4, 22, 21]"
690,ilp_assign,20,76,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_vzwy_ja2/main.py"", line 13, in <module>\n    cost = pulp.lpSum([C[i][j] * worker_assignment[i] * task_assignment[j] for i in range(n) for j in range(n)])\n  File ""/tmp/cot_exec_vzwy_ja2/main.py"", line 13, in <listcomp>\n    cost = pulp.lpSum([C[i][j] * worker_assignment[i] * task_assignment[j] for i in range(n) for j in range(n)])\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 1028, in __mul__\n    return self * LpAffineExpression(other)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 1016, in __mul__\n    raise TypeError(""Non-constant expressions cannot be multiplied"")\nTypeError: Non-constant expressions cannot be multiplied\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1615467071533203}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[27, 8, 55, 58, 10, 38, 25], [26, 33, 60, 36, 17, 46, 39], [1, 14, 9, 54, 32, 45, 46], [49, 49, 44, 31, 33, 37, 17], [3, 24, 58, 15, 32, 6, 17], [5, 2, 9, 24, 60, 33, 5], [33, 31, 31, 18, 41, 54, 42]]"
691,knap,10,142,42,0,99,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/54c2f6116da54162a5ff2abb5181cf2b-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/54c2f6116da54162a5ff2abb5181cf2b-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 6 COLUMNS\nAt line 47 RHS\nAt line 49 BOUNDS\nAt line 60 ENDATA\nProblem MODEL has 1 rows, 10 columns and 10 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 149.333 - 0.00 seconds\nCgl0004I processed model has 1 rows, 10 columns (10 integer (10 of which binary)) and 10 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 1 integers unsatisfied sum - 0.333333\nCbc0038I Pass   1: suminf.    0.25000 (1) obj. -149 iterations 1\nCbc0038I Solution found of -128\nCbc0038I Rounding solution of -132 is better than previous of -128\n\nCbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 10 columns, reduced to 1 rows 2 columns\nCbc0038I Mini branch and bound improved solution from -132 to -136 (0.00 seconds)\nCbc0038I Round again with cutoff of -138.233\nCbc0038I Reduced cost fixing fixed 3 variables on major pass 2\nCbc0038I Pass   2: suminf.    0.25000 (1) obj. -149 iterations 0\nCbc0038I Pass   3: suminf.    0.34111 (1) obj. -138.233 iterations 2\nCbc0038I Pass   4: suminf.    0.36842 (1) obj. -146.947 iterations 1\nCbc0038I Pass   5: suminf.    0.21053 (1) obj. -138.316 iterations 2\nCbc0038I Pass   6: suminf.    0.20777 (1) obj. -138.233 iterations 1\nCbc0038I Pass   7: suminf.    0.21053 (1) obj. -138.316 iterations 1\nCbc0038I Pass   8: suminf.    0.20777 (1) obj. -138.233 iterations 1\nCbc0038I Pass   9: suminf.    0.21053 (1) obj. -138.316 iterations 1\nCbc0038I Pass  10: suminf.    0.07692 (1) obj. -144.615 iterations 2\nCbc0038I Pass  11: suminf.    0.34111 (1) obj. -138.233 iterations 3\nCbc0038I Pass  12: suminf.    0.36842 (1) obj. -146.947 iterations 1\nCbc0038I Pass  13: suminf.    0.25000 (1) obj. -149 iterations 1\nCbc0038I Pass  14: suminf.    0.25000 (1) obj. -149 iterations 0\nCbc0038I Pass  15: suminf.    0.00000 (0) obj. -142 iterations 2\nCbc0038I Solution found of -142\nCbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 10 columns, reduced to 1 rows 5 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -144.267\nCbc0038I Reduced cost fixing fixed 5 variables on major pass 3\nCbc0038I Pass  16: suminf.    0.25000 (1) obj. -149 iterations 0\nCbc0038I Pass  17: suminf.    0.45778 (1) obj. -144.267 iterations 2\nCbc0038I Pass  18: suminf.    0.36842 (1) obj. -146.947 iterations 1\nCbc0038I Pass  19: suminf.    0.36842 (1) obj. -146.947 iterations 0\nCbc0038I Pass  20: suminf.    0.25000 (1) obj. -149 iterations 1\nCbc0038I Pass  21: suminf.    0.45778 (1) obj. -144.267 iterations 2\nCbc0038I Pass  22: suminf.    0.36842 (1) obj. -146.947 iterations 1\nCbc0038I Pass  23: suminf.    0.43750 (1) obj. -144.75 iterations 3\nCbc0038I Pass  24: suminf.    0.43750 (1) obj. -144.75 iterations 0\nCbc0038I Pass  25: suminf.    0.53461 (2) obj. -144.267 iterations 2\nCbc0038I Pass  26: suminf.    0.43750 (1) obj. -144.75 iterations 1\nCbc0038I Pass  27: suminf.    0.76430 (2) obj. -144.267 iterations 2\nCbc0038I Pass  28: suminf.    0.45778 (1) obj. -144.267 iterations 1\nCbc0038I Pass  29: suminf.    0.36842 (1) obj. -146.947 iterations 1\nCbc0038I Pass  30: suminf.    0.36842 (1) obj. -146.947 iterations 0\nCbc0038I Pass  31: suminf.    0.07692 (1) obj. -144.615 iterations 1\nCbc0038I Pass  32: suminf.    0.07692 (1) obj. -144.615 iterations 0\nCbc0038I Pass  33: suminf.    0.07692 (1) obj. -144.615 iterations 0\nCbc0038I Pass  34: suminf.    0.07692 (1) obj. -144.615 iterations 0\nCbc0038I Pass  35: suminf.    0.53332 (2) obj. -144.267 iterations 3\nCbc0038I Pass  36: suminf.    0.22381 (1) obj. -144.267 iterations 2\nCbc0038I Pass  37: suminf.    0.22381 (1) obj. -144.267 iterations 0\nCbc0038I Pass  38: suminf.    0.42105 (1) obj. -148.632 iterations 2\nCbc0038I Pass  39: suminf.    0.27555 (1) obj. -144.267 iterations 1\nCbc0038I Pass  40: suminf.    0.27555 (1) obj. -144.267 iterations 0\nCbc0038I Pass  41: suminf.    0.22381 (1) obj. -144.267 iterations 1\nCbc0038I Pass  42: suminf.    0.45778 (1) obj. -144.267 iterations 2\nCbc0038I Pass  43: suminf.    0.36842 (1) obj. -146.947 iterations 1\nCbc0038I Pass  44: suminf.    0.45778 (1) obj. -144.267 iterations 1\nCbc0038I Pass  45: suminf.    0.45778 (1) obj. -144.267 iterations 0\nCbc0038I No solution found this major pass\nCbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 10 columns, reduced to 1 rows 5 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -142 - took 0.00 seconds\nCbc0012I Integer solution of -142 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0038I Full problem 1 rows 10 columns, reduced to 1 rows 2 columns\nCbc0006I The LP relaxation is infeasible or too expensive\nCbc0013I At root node, 0 cuts changed objective from -149.33333 to -149.33333 in 1 passes\nCbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0001I Search completed - best objective -142, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 3 variables fixed on reduced cost\nCuts at root node changed objective from -149.333 to -149.333\nProbing was tried 1 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                142.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.01\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.01\n\n142.0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.15892267227172852}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [5, 19, 12, 5, 13, 2, 3, 9, 3, 16]
V = [14, 30, 20, 3, 18, 22, 1, 40, 32, 28]
C = 43"
692,lcs,5,3,3,1,3,1,"{'ok': True, 'value': 3, 'stdout': '3\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2112433910369873}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""baccc""
T = ""adcaac"""
693,ilp_prod,15,209,42,0,174,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_rxnyjvn2/main.py"", line 11, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.15823936462402344}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [29, 23, 19, 36, 45, 20]
consumption (rows=resources) = [[2, 7, 4, 15, 12, 2], [8, 13, 3, 3, 9, 14], [9, 9, 6, 4, 5, 2], [13, 13, 3, 8, 6, 13]]
capacity = [55, 44, 36, 42]
upper_bounds = [3, 3, 6, 3, 4, 3]"
694,ilp_assign,20,64,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'Traceback (most recent call last):\n  File ""/tmp/cot_exec_tyq0p7ku/main.py"", line 14, in <module>\n    prob += C[i][j] * worker_vars[i] * task_vars[j]\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 1028, in __mul__\n    return self * LpAffineExpression(other)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 1016, in __mul__\n    raise TypeError(""Non-constant expressions cannot be multiplied"")\nTypeError: Non-constant expressions cannot be multiplied\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.15912342071533203}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[10, 2, 21, 40, 44, 32, 20], [49, 3, 49, 22, 13, 38, 45], [13, 29, 1, 58, 13, 18, 36], [25, 58, 2, 56, 42, 38, 42], [6, 59, 31, 10, 34, 46, 7], [35, 42, 4, 26, 7, 47, 31], [6, 3, 38, 46, 12, 53, 18]]"
695,ilp_assign,5,20,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/93b0d93e60c14249a3be1cb5d01ecc5b-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/93b0d93e60c14249a3be1cb5d01ecc5b-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 15 COLUMNS\nAt line 141 RHS\nAt line 152 BOUNDS\nAt line 178 ENDATA\nProblem MODEL has 10 rows, 25 columns and 50 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 20 - 0.00 seconds\nCgl0004I processed model has 10 rows, 25 columns (25 integer (25 of which binary)) and 50 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 20\nCbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 20 - took 0.00 seconds\nCbc0012I Integer solution of 20 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 20, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 20 to 20\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                20.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n20.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.18463516235351562}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[10, 9, 5, 5, 5], [1, 10, 13, 1, 13], [8, 8, 15, 6, 4], [9, 8, 4, 12, 8], [15, 6, 12, 11, 3]]"
696,ilp_partition,10,0,42,0,42,0,"{'ok': True, 'value': 16, 'stdout': '16\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22661399841308594}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [14, 5, 28, 22, 26, 16, 17, 30, 8, 8]"
697,rod,15,196,42,0,42,0,"{'ok': True, 'value': 196, 'stdout': '196\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.10296511650085449}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [7, 27, 31, 9, 41, 3, 18, 37, 23, 45, 14, 35, 22, 32, 9]"
698,ilp_partition,15,1,42,0,42,0,"{'ok': True, 'value': 33, 'stdout': '33\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2030198574066162}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [31, 28, 40, 17, 6, 42, 19, 31, 43, 32, 33, 38, 39, 44, 38]"
699,knap,15,386,42,0,311,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_0_ktxtfs/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09204983711242676}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [8, 6, 14, 19, 8, 5, 1, 17, 15, 16, 2, 27, 5, 16, 29]
V = [17, 30, 36, 50, 45, 23, 38, 22, 39, 55, 43, 30, 27, 16, 54]
C = 94"
700,ilp_assign,10,25,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/3c543ed6a1f84027ae8501266ec6a76b-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/3c543ed6a1f84027ae8501266ec6a76b-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 25 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 25\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 25 - took 0.00 seconds\nCbc0012I Integer solution of 25 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 25, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 25 to 25\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                25.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n25.0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.16574478149414062}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[22, 30, 6, 29, 1, 25, 7], [2, 1, 3, 13, 26, 12, 29], [14, 7, 30, 27, 6, 1, 27], [14, 2, 8, 2, 29, 13, 4], [12, 12, 18, 27, 27, 20, 5], [28, 13, 17, 21, 4, 24, 11], [16, 21, 1, 15, 8, 13, 18]]"
701,ilp_partition,10,0,42,0,42,0,"{'ok': True, 'value': 18, 'stdout': '18\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22885894775390625}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [29, 9, 1, 3, 26, 28, 22, 22, 13, 1]"
702,lcs,15,8,17,0,6,0,"{'ok': True, 'value': 8, 'stdout': '8\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.23699617385864258}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""cccccbbabcababd""
T = ""abbddbacacbbcbad"""
703,ilp_assign,15,75,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_30spqznl/main.py"", line 9\n    x = pulp.LpVariable.dicts(""x"", [(i, j) for i in range(n) for j in range(n)], cat=\'Binary\')\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10536646842956543}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[8, 3, 45, 42, 25, 24, 32], [37, 12, 21, 6, 39, 30, 16], [20, 35, 27, 36, 38, 45, 40], [38, 35, 26, 26, 9, 14, 13], [2, 11, 23, 9, 20, 21, 6], [43, 2, 4, 4, 45, 17, 33], [13, 13, 35, 16, 22, 33, 37]]"
704,rod,15,435,42,0,42,0,"{'ok': True, 'value': 435, 'stdout': '435\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08799099922180176}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [29, 18, 31, 36, 7, 33, 44, 36, 40, 16, 15, 20, 36, 27, 31]"
705,ilp_partition,5,0,42,0,4,0,"{'ok': True, 'value': 10, 'stdout': '10\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22241640090942383}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [4, 9, 12, 7, 8]"
706,ilp_partition,20,1,42,0,42,0,"{'ok': True, 'value': 3, 'stdout': '3\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21078944206237793}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [28, 57, 51, 51, 1, 28, 25, 17, 6, 42, 35, 1, 50, 10, 44, 24, 30, 32, 39, 38]"
707,ilp_prod,20,177,42,0,229,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/c54c842937814aaebd0305f29b8c43c0-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/c54c842937814aaebd0305f29b8c43c0-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 9 COLUMNS\nAt line 52 RHS\nAt line 57 BOUNDS\nAt line 64 ENDATA\nProblem MODEL has 4 rows, 6 columns and 24 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 197.65 - 0.00 seconds\nCgl0004I processed model has 4 rows, 6 columns (6 integer (0 of which binary)) and 24 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0012I Integer solution of -177 found by DiveCoefficient after 0 iterations and 0 nodes (0.00 seconds)\nCbc0031I 3 added rows had average density of 3\nCbc0013I At root node, 11 cuts changed objective from -195 to -177 in 4 passes\nCbc0014I Cut generator 0 (Probing) - 1 row cuts average 2.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 1 (Gomory) - 6 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 6 (TwoMirCuts) - 17 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0001I Search completed - best objective -177, took 8 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 1 variables fixed on reduced cost\nCuts at root node changed objective from -195 to -177\nProbing was tried 4 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 4 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 4 times and created 17 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                177.00000000\nEnumerated nodes:               0\nTotal iterations:               8\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n177.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.2632436752319336}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [46, 37, 36, 13, 20, 59]
consumption (rows=resources) = [[18, 17, 14, 16, 13, 20], [11, 4, 16, 15, 5, 2], [9, 6, 18, 10, 2, 13], [10, 4, 7, 1, 6, 3]]
capacity = [67, 55, 52, 72]
upper_bounds = [3, 3, 3, 3, 5, 3]"
708,knap,15,251,130,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_gv7gn3ik/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.12879037857055664}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [9, 27, 1, 20, 23, 24, 7, 30, 8, 22, 21, 5, 25, 20, 23]
V = [22, 51, 16, 41, 17, 22, 3, 25, 19, 2, 41, 30, 2, 28, 2]
C = 132"
709,rod,10,300,42,0,42,0,"{'ok': True, 'value': 10, 'stdout': '10\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09000015258789062}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [30, 15, 14, 2, 5, 16, 26, 12, 17, 10]"
710,lcs,15,7,10,0,5,0,"{'ok': True, 'value': 7, 'stdout': '7\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21722197532653809}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""ddababbcabcbaad""
T = ""cdabdbdcccccac"""
711,ilp_assign,20,93,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/c66eda86c580456587c018887c311906-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/c66eda86c580456587c018887c311906-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 93 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 93\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 93 - took 0.00 seconds\nCbc0012I Integer solution of 93 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 93, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 93 to 93\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                93.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n93.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.17815852165222168}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[41, 53, 9, 42, 49, 25, 45], [23, 15, 16, 42, 18, 15, 25], [47, 15, 2, 47, 60, 6, 42], [37, 32, 39, 30, 23, 26, 41], [28, 31, 16, 24, 49, 50, 22], [4, 45, 32, 24, 12, 57, 43], [56, 44, 55, 14, 21, 56, 49]]"
712,knap,10,137,42,0,79,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_qb0qcoed/main.py"", line 8\n    dp = np.zeros((N + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09482097625732422}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [17, 1, 18, 2, 7, 11, 2, 5, 15, 6]
V = [29, 10, 10, 17, 33, 25, 6, 33, 8, 5]
C = 42"
713,knap,15,346,42,0,357,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_32c3x6o5/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.11632466316223145}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [6, 6, 24, 14, 3, 15, 4, 1, 16, 25, 21, 12, 13, 24, 5]
V = [38, 24, 9, 39, 16, 25, 21, 13, 51, 58, 59, 34, 50, 41, 35]
C = 94"
714,ilp_assign,10,34,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_z46l9vux/main.py"", line 12, in <module>\n    model += pulp.lpSum(C[i][j] * variables[i][j] for i in range(n) for j in range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 2469, in lpSum\n    return LpAffineExpression().addInPlace(vector)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 968, in addInPlace\n    for e in other:\n  File ""/tmp/cot_exec_z46l9vux/main.py"", line 12, in <genexpr>\n    model += pulp.lpSum(C[i][j] * variables[i][j] for i in range(n) for j in range(n))\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1632387638092041}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[25, 3, 16, 9, 19, 17, 10], [27, 1, 11, 20, 26, 22, 26], [13, 8, 14, 5, 17, 19, 15], [3, 16, 29, 9, 14, 24, 27], [26, 18, 19, 18, 3, 23, 4], [30, 13, 30, 4, 27, 9, 13], [28, 2, 3, 18, 12, 3, 13]]"
715,rod,15,324,42,0,42,0,"{'ok': True, 'value': 324, 'stdout': '324\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09302401542663574}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [9, 45, 1, 27, 18, 13, 23, 42, 29, 41, 32, 30, 39, 32, 30]"
716,lcs,15,10,12,0,8,0,"{'ok': True, 'value': 10, 'stdout': '10\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2140493392944336}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""adcccdbaadcbada""
T = ""dabcccaddabaddab"""
717,lcs,10,4,4,1,5,0,"{'ok': True, 'value': 4, 'stdout': '4\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22398066520690918}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""cdcaabdbaa""
T = ""abcbddccd"""
718,knap,20,786,42,0,742,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_ybdikvie/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09825515747070312}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [11, 17, 14, 25, 34, 10, 35, 19, 12, 39, 8, 2, 16, 35, 12, 38, 12, 39, 16, 37]
V = [60, 74, 62, 23, 76, 66, 14, 32, 76, 26, 47, 42, 77, 50, 52, 44, 62, 18, 37, 50]
C = 215"
719,knap,15,378,242,0,262,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_6th_bn4k/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.07809805870056152}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [17, 28, 26, 5, 29, 2, 5, 21, 18, 5, 19, 1, 17, 9, 18]
V = [36, 12, 46, 3, 23, 56, 31, 35, 52, 40, 12, 15, 21, 42, 57]
C = 110"
720,ilp_prod,5,22,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'no_fenced_code', 'retcode': None, 'timeout': False, 'duration_s': 0.0}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [11, 3, 7]
consumption (rows=resources) = [[5, 3, 5], [3, 4, 2], [4, 1, 3]]
capacity = [11, 20, 18]
upper_bounds = [3, 3, 3]"
721,lcs,15,12,12,1,7,0,"{'ok': True, 'value': 12, 'stdout': '12\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.19755148887634277}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""abbaabdadccbbba""
T = ""bbcaabbadccbbbbd"""
722,ilp_assign,10,47,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_tqfwictl/main.py"", line 11, in <module>\n    model += pulp.lpSum(C[i][j] * decision_variables[i][j] for i in range(n) for j in range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 2469, in lpSum\n    return LpAffineExpression().addInPlace(vector)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 968, in addInPlace\n    for e in other:\n  File ""/tmp/cot_exec_tqfwictl/main.py"", line 11, in <genexpr>\n    model += pulp.lpSum(C[i][j] * decision_variables[i][j] for i in range(n) for j in range(n))\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.15703940391540527}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[16, 21, 5, 24, 3, 1, 18], [23, 18, 16, 19, 20, 18, 5], [8, 2, 29, 18, 26, 10, 14], [26, 22, 19, 29, 30, 15, 9], [19, 12, 18, 11, 17, 12, 19], [2, 6, 14, 8, 16, 27, 21], [12, 22, 9, 24, 24, 25, 8]]"
723,ilp_assign,5,21,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/e60ea20e80a24614a85186e9258af8aa-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/e60ea20e80a24614a85186e9258af8aa-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 15 COLUMNS\nAt line 141 RHS\nAt line 152 BOUNDS\nAt line 178 ENDATA\nProblem MODEL has 10 rows, 25 columns and 50 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 21 - 0.00 seconds\nCgl0004I processed model has 10 rows, 25 columns (25 integer (25 of which binary)) and 50 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 21\nCbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 21 - took 0.00 seconds\nCbc0012I Integer solution of 21 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 21, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 21 to 21\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                21.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_ilvpjr2z/main.py"", line 28, in <module>\n    print(value(objective))\nNameError: name \'value\' is not defined. Did you mean: \'False\'?\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1743302345275879}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[4, 11, 4, 4, 12], [7, 7, 4, 10, 3], [12, 5, 12, 12, 15], [6, 1, 12, 12, 11], [5, 8, 8, 3, 11]]"
724,lcs,5,3,3,1,3,1,"{'ok': True, 'value': 3, 'stdout': '3\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22672438621520996}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""accbd""
T = ""cbaabd"""
725,ilp_prod,15,112,42,0,102,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_o14agur_/main.py"", line 12, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.18555974960327148}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [8, 28, 18, 6, 18, 24]
consumption (rows=resources) = [[10, 5, 11, 4, 15, 6], [8, 12, 11, 4, 9, 4], [2, 2, 5, 7, 11, 14], [7, 11, 11, 5, 15, 4]]
capacity = [34, 55, 38, 38]
upper_bounds = [3, 3, 3, 5, 3, 3]"
726,ilp_assign,5,22,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/df9ab73db6804bacbdc72b1f5fa900ba-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/df9ab73db6804bacbdc72b1f5fa900ba-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 15 COLUMNS\nAt line 141 RHS\nAt line 152 BOUNDS\nAt line 178 ENDATA\nProblem MODEL has 10 rows, 25 columns and 50 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 22 - 0.00 seconds\nCgl0004I processed model has 10 rows, 25 columns (25 integer (25 of which binary)) and 50 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 22\nCbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 22 - took 0.00 seconds\nCbc0012I Integer solution of 22 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 22, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 22 to 22\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                22.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_wyr3yekh/main.py"", line 26, in <module>\n    print(value(objective_function))\nNameError: name \'value\' is not defined. Did you mean: \'False\'?\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1842489242553711}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[9, 5, 15, 15, 6], [13, 14, 6, 7, 8], [6, 6, 6, 7, 8], [9, 1, 6, 3, 5], [3, 5, 10, 3, 14]]"
727,ilp_prod,10,47,42,0,50,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_rfe_q1dd/main.py"", line 7, in <module>\n    vars = pulp.LpVariable.dicts(""x"", range(len(profit)), lowBound=0, cat=\'Integer\')\nNameError: name \'profit\' is not defined\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1685636043548584}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [19, 4, 15, 11, 9]
consumption (rows=resources) = [[6, 4, 2, 10, 3], [7, 7, 10, 5, 10], [3, 2, 5, 4, 5], [10, 3, 8, 7, 1]]
capacity = [24, 29, 36, 24]
upper_bounds = [3, 4, 3, 3, 3]"
728,lcs,15,9,12,0,6,0,"{'ok': True, 'value': 9, 'stdout': '9\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22858500480651855}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""bcdcaacbaccbadb""
T = ""cdddcdaaabcbaac"""
729,ilp_prod,10,110,42,0,105,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_ouq2xzp9/main.py"", line 10, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16279315948486328}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [26, 15, 28, 28, 10]
consumption (rows=resources) = [[5, 10, 7, 5, 1], [5, 3, 2, 7, 5], [5, 7, 9, 1, 3], [2, 3, 9, 8, 7]]
capacity = [23, 21, 31, 40]
upper_bounds = [4, 3, 3, 3, 4]"
730,ilp_assign,5,15,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/00119ca74d6b489e9e015d9c61f5da93-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/00119ca74d6b489e9e015d9c61f5da93-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 15 COLUMNS\nAt line 141 RHS\nAt line 152 BOUNDS\nAt line 178 ENDATA\nProblem MODEL has 10 rows, 25 columns and 50 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 15 - 0.00 seconds\nCgl0004I processed model has 10 rows, 25 columns (25 integer (25 of which binary)) and 50 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 15\nCbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 15 - took 0.00 seconds\nCbc0012I Integer solution of 15 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 15, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 15 to 15\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                15.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n15.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.1553027629852295}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[10, 1, 1, 14, 13], [6, 3, 13, 3, 15], [11, 14, 2, 2, 14], [7, 11, 10, 4, 12], [4, 9, 9, 7, 2]]"
731,rod,20,540,189,0,107,0,"{'ok': True, 'value': 540, 'stdout': '540\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.07865500450134277}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [11, 54, 4, 25, 10, 56, 9, 23, 28, 19, 58, 28, 6, 5, 57, 50, 31, 53, 4, 35]"
732,ilp_prod,20,214,42,0,234,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_gdx94xe4/main.py"", line 10\n    x_j = [pulp.LpVariable(f\'x_{i}\', lowBound=0, upBound=upper_bounds[i]) for i in range(len(profit))]\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.07772326469421387}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [14, 14, 47, 24, 55, 23]
consumption (rows=resources) = [[7, 1, 10, 19, 3, 12], [5, 5, 3, 2, 17, 5], [2, 4, 15, 17, 13, 2], [3, 5, 8, 15, 16, 17]]
capacity = [67, 74, 47, 53]
upper_bounds = [9, 10, 3, 3, 3, 3]"
733,ilp_prod,10,120,42,0,104,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_fve3q94x/main.py"", line 11\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, cat=\'Integer\')\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08995437622070312}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [28, 7, 25, 18, 11]
consumption (rows=resources) = [[5, 7, 10, 8, 10], [1, 5, 9, 8, 6], [8, 3, 8, 3, 8], [3, 4, 6, 2, 9]]
capacity = [38, 38, 31, 25]
upper_bounds = [3, 5, 3, 4, 3]"
734,ilp_assign,15,31,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_y4g9_2q6/main.py"", line 7\n    tasks = range(n)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09726834297180176}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[4, 10, 42, 37, 1, 42, 27], [45, 11, 16, 6, 13, 18, 30], [9, 31, 12, 28, 24, 20, 2], [25, 6, 18, 9, 37, 31, 1], [20, 43, 12, 24, 11, 5, 18], [1, 9, 22, 43, 24, 33, 35], [42, 43, 10, 8, 13, 29, 18]]"
735,ilp_assign,10,64,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_sxd8tev9/main.py"", line 11, in <module>\n    model += pulp.lpSum(C[i][j] * decision_variables[i][j] for i in range(n) for j in range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 2469, in lpSum\n    return LpAffineExpression().addInPlace(vector)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 968, in addInPlace\n    for e in other:\n  File ""/tmp/cot_exec_sxd8tev9/main.py"", line 11, in <genexpr>\n    model += pulp.lpSum(C[i][j] * decision_variables[i][j] for i in range(n) for j in range(n))\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.15079855918884277}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[19, 18, 11, 14, 26, 13, 29], [18, 28, 30, 21, 22, 7, 5], [14, 27, 6, 4, 19, 4, 24], [27, 10, 6, 29, 12, 16, 16], [25, 28, 17, 6, 29, 19, 28], [9, 21, 23, 8, 9, 3, 23], [28, 17, 11, 8, 21, 26, 20]]"
736,lcs,5,3,3,1,3,1,"{'ok': True, 'value': 3, 'stdout': '3\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20763516426086426}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""adcda""
T = ""dcabb"""
737,ilp_prod,20,198,42,0,189,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/d6b74c75a91f48fc80f0e184702b9008-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/d6b74c75a91f48fc80f0e184702b9008-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 9 COLUMNS\nAt line 52 RHS\nAt line 57 BOUNDS\nAt line 64 ENDATA\nProblem MODEL has 4 rows, 6 columns and 24 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 221.406 - 0.00 seconds\nCgl0004I processed model has 4 rows, 6 columns (6 integer (0 of which binary)) and 24 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0012I Integer solution of -191 found by DiveCoefficient after 0 iterations and 0 nodes (0.00 seconds)\nCbc0038I Full problem 4 rows 6 columns, reduced to 4 rows 2 columns\nCbc0012I Integer solution of -198 found by DiveCoefficient after 37 iterations and 0 nodes (0.00 seconds)\nCbc0031I 3 added rows had average density of 3\nCbc0013I At root node, 3 cuts changed objective from -221.40566 to -198 in 18 passes\nCbc0014I Cut generator 0 (Probing) - 10 row cuts average 2.5 elements, 4 column cuts (4 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 1 (Gomory) - 33 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 5 (FlowCover) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 6 (TwoMirCuts) - 18 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0001I Search completed - best objective -198, took 37 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from -221.406 to -198\nProbing was tried 18 times and created 14 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 18 times and created 33 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 18 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 18 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 18 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 18 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 18 times and created 18 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                198.00000000\nEnumerated nodes:               0\nTotal iterations:               37\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n198.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.17399334907531738}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [14, 35, 12, 26, 33, 17]
consumption (rows=resources) = [[13, 18, 18, 14, 3, 5], [15, 17, 7, 3, 8, 18], [8, 15, 15, 10, 1, 4], [7, 1, 5, 17, 10, 11]]
capacity = [60, 49, 41, 80]
upper_bounds = [3, 3, 3, 4, 6, 3]"
738,ilp_assign,15,57,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_rqf1x6ce/main.py"", line 13, in <module>\n    cost = pulp.lpSum([C[i][j] * worker_assignment[i] * task_assignment[j] for i in range(n) for j in range(n)])\n  File ""/tmp/cot_exec_rqf1x6ce/main.py"", line 13, in <listcomp>\n    cost = pulp.lpSum([C[i][j] * worker_assignment[i] * task_assignment[j] for i in range(n) for j in range(n)])\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 1028, in __mul__\n    return self * LpAffineExpression(other)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 1016, in __mul__\n    raise TypeError(""Non-constant expressions cannot be multiplied"")\nTypeError: Non-constant expressions cannot be multiplied\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16165637969970703}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[10, 37, 12, 45, 12, 39, 24], [26, 6, 40, 14, 39, 39, 40], [10, 32, 24, 18, 12, 20, 31], [3, 25, 9, 40, 30, 20, 22], [40, 37, 8, 23, 28, 16, 7], [1, 30, 8, 21, 40, 32, 39], [14, 7, 33, 2, 35, 20, 27]]"
739,lcs,10,5,4,0,4,0,"{'ok': True, 'value': 5, 'stdout': '5\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20328879356384277}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""cbcbcaacdb""
T = ""cdabdabbad"""
740,ilp_assign,10,53,42,0,42,0,"{'ok': True, 'value': 53, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/e443b41105234e1ca0e2f540aa9e9868-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/e443b41105234e1ca0e2f540aa9e9868-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 53 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 53\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 53 - took 0.00 seconds\nCbc0012I Integer solution of 53 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 53, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 53 to 53\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                53.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n53\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.15569496154785156}",1,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[8, 14, 5, 25, 8, 22, 30], [13, 20, 24, 2, 8, 7, 19], [5, 19, 11, 6, 4, 29, 25], [7, 14, 2, 30, 17, 11, 28], [18, 25, 23, 12, 12, 22, 23], [14, 30, 8, 12, 30, 25, 13], [3, 8, 30, 28, 15, 5, 12]]"
741,ilp_assign,20,55,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_199xwrdc/main.py"", line 12, in <module>\n    model += pulp.lpSum(C[i][j] * vars[i][j] for i in range(n) for j in range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 2469, in lpSum\n    return LpAffineExpression().addInPlace(vector)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 968, in addInPlace\n    for e in other:\n  File ""/tmp/cot_exec_199xwrdc/main.py"", line 12, in <genexpr>\n    model += pulp.lpSum(C[i][j] * vars[i][j] for i in range(n) for j in range(n))\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.14757990837097168}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[24, 4, 17, 16, 58, 3, 21], [36, 44, 47, 13, 29, 15, 46], [39, 27, 8, 28, 42, 35, 39], [51, 60, 38, 34, 48, 27, 5], [56, 5, 47, 57, 44, 36, 59], [6, 4, 32, 37, 24, 11, 24], [20, 16, 59, 18, 15, 41, 8]]"
742,knap,20,669,42,0,988,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_vqilcx30/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1)) \nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08216667175292969}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [19, 32, 16, 1, 19, 21, 20, 13, 12, 31, 23, 15, 29, 12, 31, 27, 28, 5, 28, 3]
V = [73, 79, 17, 64, 16, 39, 39, 47, 56, 54, 38, 52, 64, 64, 19, 34, 80, 45, 51, 6]
C = 192"
743,knap,5,50,42,0,37,0,"{'ok': True, 'value': 0, 'stdout': '50.0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2220897674560547}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [8, 7, 3, 4, 4]
V = [10, 15, 18, 19, 13]
C = 13"
744,ilp_prod,20,209,141,0,216,0,"{'ok': True, 'value': 4285721, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/20c8b621d54d4de5ba33dba10282e747-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/20c8b621d54d4de5ba33dba10282e747-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 9 COLUMNS\nAt line 40 RHS\nAt line 45 BOUNDS\nAt line 52 ENDATA\nProblem MODEL has 4 rows, 6 columns and 24 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nPresolve 4 (0) rows, 6 (0) columns and 24 (0) elements\n0  Obj -0 Dual inf 1070.9719 (6)\n3  Obj 231.42857\nOptimal - objective value 231.42857\nOptimal objective 231.4285714 - 3 iterations time 0.002\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n231.4285721\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.16580557823181152}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [57, 15, 28, 45, 51, 28]
consumption (rows=resources) = [[20, 16, 12, 8, 3, 2], [16, 4, 13, 18, 7, 14], [11, 17, 3, 16, 14, 15], [1, 3, 9, 14, 5, 19]]
capacity = [41, 60, 52, 64]
upper_bounds = [3, 3, 3, 3, 3, 3]"
745,lcs,5,2,3,0,3,0,"{'ok': True, 'value': 2, 'stdout': '2\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2042381763458252}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""cbcda""
T = ""daacbb"""
746,lcs,20,13,42,0,12,0,"{'ok': True, 'value': 13, 'stdout': '13\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20603275299072266}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""dbdbdacccabddbbcbcaa""
T = ""abbaccaabdacdbbaadda"""
747,rod,5,25,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_zo2vnvzu/main.py"", line 2\n    dp = [0] * (N + 1)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09591436386108398}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [5, 7, 4, 1, 12]"
748,rod,10,110,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'no_fenced_code', 'retcode': None, 'timeout': False, 'duration_s': 0.0}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [3, 22, 21, 9, 11, 13, 27, 12, 19, 11]"
749,ilp_prod,15,213,42,0,161,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_fixm00au/main.py"", line 10\n    x = {} \nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08746886253356934}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [34, 39, 9, 38, 4, 15]
consumption (rows=resources) = [[4, 14, 6, 7, 2, 4], [4, 14, 10, 3, 13, 2], [8, 4, 4, 14, 10, 15], [1, 6, 1, 6, 1, 3]]
capacity = [32, 45, 55, 36]
upper_bounds = [6, 3, 4, 3, 3, 3]"
750,ilp_assign,15,83,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_pf4597wu/main.py"", line 12, in <module>\n    model += pulp.lpSum(C[i][j] * vars[i][j] for i in range(n) for j in range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 2469, in lpSum\n    return LpAffineExpression().addInPlace(vector)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 968, in addInPlace\n    for e in other:\n  File ""/tmp/cot_exec_pf4597wu/main.py"", line 12, in <genexpr>\n    model += pulp.lpSum(C[i][j] * vars[i][j] for i in range(n) for j in range(n))\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1603243350982666}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[2, 7, 17, 18, 19, 36, 20], [12, 28, 45, 32, 21, 25, 18], [36, 26, 14, 27, 23, 5, 45], [35, 29, 20, 20, 26, 23, 43], [2, 19, 9, 8, 21, 16, 43], [16, 34, 38, 44, 22, 9, 39], [3, 23, 11, 38, 17, 34, 42]]"
751,ilp_assign,10,61,42,0,42,0,"{'ok': True, 'value': 61, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/bee03f8b8ba040f49ab93ab5cda5a3be-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/bee03f8b8ba040f49ab93ab5cda5a3be-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 61 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 61\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 61 - took 0.00 seconds\nCbc0012I Integer solution of 61 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 61, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 61 to 61\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                61.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n61\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.17571783065795898}",1,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[24, 8, 21, 7, 28, 28, 26], [26, 9, 8, 26, 24, 23, 27], [14, 27, 29, 24, 23, 9, 23], [30, 8, 12, 27, 26, 29, 16], [29, 14, 26, 7, 15, 17, 22], [17, 26, 11, 2, 8, 8, 18], [5, 14, 4, 18, 3, 25, 14]]"
752,ilp_assign,10,52,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/640d772eccc2435d944576f3a1ffa65b-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/640d772eccc2435d944576f3a1ffa65b-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 52 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 52\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 52 - took 0.00 seconds\nCbc0012I Integer solution of 52 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 52, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 52 to 52\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                52.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n52.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.1786661148071289}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[4, 12, 17, 28, 22, 30, 27], [16, 20, 4, 24, 28, 20, 18], [22, 6, 17, 30, 10, 4, 10], [3, 29, 30, 20, 4, 19, 11], [18, 15, 19, 24, 19, 10, 15], [10, 25, 17, 15, 26, 26, 30], [18, 15, 19, 5, 10, 19, 9]]"
753,lcs,15,6,42,0,6,1,"{'ok': True, 'value': 6, 'stdout': '6\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21872496604919434}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""ddaaaaaabcbdaab""
T = ""bbbbcbbacbddada"""
754,knap,15,337,42,0,220,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/a7893ad6c8ce46518f92858e458b6d40-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/a7893ad6c8ce46518f92858e458b6d40-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 6 COLUMNS\nAt line 67 RHS\nAt line 69 BOUNDS\nAt line 85 ENDATA\nProblem MODEL has 1 rows, 15 columns and 15 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 342.706 - 0.00 seconds\nCgl0004I processed model has 1 rows, 15 columns (15 integer (15 of which binary)) and 15 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 1 integers unsatisfied sum - 0.411765\nCbc0038I Solution found of -332\nCbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 15 columns, reduced to 0 rows 0 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -333.97\nCbc0038I Reduced cost fixing fixed 11 variables on major pass 2\nCbc0038I Pass   1: suminf.    0.06568 (1) obj. -333.97 iterations 2\nCbc0038I Pass   2: suminf.    0.30435 (1) obj. -341.13 iterations 1\nCbc0038I Pass   3: suminf.    0.06568 (1) obj. -333.97 iterations 1\nCbc0038I Pass   4: suminf.    0.30435 (1) obj. -341.13 iterations 1\nCbc0038I Pass   5: suminf.    0.08696 (1) obj. -339.609 iterations 2\nCbc0038I Solution found of -337\nCbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 15 columns, reduced to 1 rows 2 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -338.941\nCbc0038I Reduced cost fixing fixed 12 variables on major pass 3\nCbc0038I Pass   6: suminf.    0.26697 (1) obj. -338.941 iterations 1\nCbc0038I Pass   7: suminf.    0.41176 (1) obj. -342.706 iterations 1\nCbc0038I Pass   8: suminf.    0.41176 (1) obj. -342.706 iterations 0\nCbc0038I Pass   9: suminf.    0.41176 (1) obj. -342.706 iterations 0\nCbc0038I Pass  10: suminf.    0.41176 (1) obj. -342.706 iterations 0\nCbc0038I Pass  11: suminf.    0.26697 (1) obj. -338.941 iterations 1\nCbc0038I Pass  12: suminf.    0.41176 (1) obj. -342.706 iterations 1\nCbc0038I Pass  13: suminf.    0.30000 (1) obj. -341.8 iterations 1\nCbc0038I Pass  14: suminf.    0.07466 (1) obj. -338.941 iterations 3\nCbc0038I Pass  15: suminf.    0.11765 (1) obj. -340.059 iterations 1\nCbc0038I Pass  16: suminf.    0.07466 (1) obj. -338.941 iterations 1\nCbc0038I Pass  17: suminf.    0.07466 (1) obj. -338.941 iterations 0\nCbc0038I Pass  18: suminf.    0.07466 (1) obj. -338.941 iterations 0\nCbc0038I Pass  19: suminf.    0.07466 (1) obj. -338.941 iterations 0\nCbc0038I Pass  20: suminf.    0.07466 (1) obj. -338.941 iterations 0\nCbc0038I Pass  21: suminf.    0.07466 (1) obj. -338.941 iterations 0\nCbc0038I Pass  22: suminf.    0.07466 (1) obj. -338.941 iterations 0\nCbc0038I Pass  23: suminf.    0.38688 (1) obj. -338.941 iterations 1\nCbc0038I Pass  24: suminf.    0.29412 (1) obj. -341.353 iterations 1\nCbc0038I Pass  25: suminf.    0.38688 (1) obj. -338.941 iterations 1\nCbc0038I Pass  26: suminf.    0.11765 (1) obj. -340.059 iterations 2\nCbc0038I Pass  27: suminf.    0.11765 (1) obj. -340.059 iterations 0\nCbc0038I Pass  28: suminf.    0.30000 (1) obj. -341.8 iterations 2\nCbc0038I Pass  29: suminf.    0.30000 (1) obj. -341.8 iterations 0\nCbc0038I Pass  30: suminf.    0.26697 (1) obj. -338.941 iterations 2\nCbc0038I Pass  31: suminf.    0.41176 (1) obj. -342.706 iterations 1\nCbc0038I Pass  32: suminf.    0.30000 (1) obj. -341.8 iterations 1\nCbc0038I Pass  33: suminf.    0.38688 (1) obj. -338.941 iterations 3\nCbc0038I Pass  34: suminf.    0.29412 (1) obj. -341.353 iterations 1\nCbc0038I Pass  35: suminf.    0.38688 (1) obj. -338.941 iterations 1\nCbc0038I No solution found this major pass\nCbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 15 columns, reduced to 1 rows 2 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -337 - took 0.00 seconds\nCbc0012I Integer solution of -337 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0038I Full problem 1 rows 15 columns, reduced to 1 rows 2 columns\nCbc0006I The LP relaxation is infeasible or too expensive\nCbc0013I At root node, 0 cuts changed objective from -341.8 to -341.8 in 1 passes\nCbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0001I Search completed - best objective -337, took 1 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 12 variables fixed on reduced cost\nCuts at root node changed objective from -342.706 to -341.8\nProbing was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                337.00000000\nEnumerated nodes:               0\nTotal iterations:               1\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n337.0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.18096137046813965}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [23, 8, 4, 19, 25, 10, 17, 14, 11, 28, 19, 18, 12, 5, 17]
V = [30, 33, 15, 42, 21, 14, 36, 56, 48, 22, 9, 58, 35, 9, 26]
C = 115"
755,ilp_partition,5,3,42,0,4,0,"{'ok': True, 'value': 9, 'stdout': '9\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21830224990844727}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [2, 7, 7, 15, 10]"
756,knap,15,458,197,0,292,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_lntnkgby/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1050422191619873}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [2, 3, 7, 28, 6, 13, 21, 15, 7, 20, 1, 15, 13, 13, 12]
V = [44, 24, 57, 32, 54, 39, 39, 1, 42, 17, 48, 5, 52, 43, 55]
C = 88"
757,rod,5,45,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_bsbofetn/main.py"", line 2\n    dp = [0] * (N + 1)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10122537612915039}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [9, 7, 9, 14, 15]"
758,knap,10,152,42,0,169,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_rb9yjze4/main.py"", line 7\n    dp = np.zeros((C + 1, len(W) + 1)) \nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10720229148864746}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [7, 8, 8, 13, 12, 9, 1, 16, 17, 5]
V = [28, 31, 6, 34, 18, 7, 15, 7, 28, 26]
C = 48"
759,knap,10,179,42,0,147,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_i6hiw96f/main.py"", line 13\n    dp = np.zeros((num_items + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09609746932983398}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [20, 13, 6, 6, 10, 10, 13, 1, 18, 20]
V = [9, 36, 9, 20, 36, 27, 8, 27, 33, 36]
C = 58"
760,rod,10,240,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_u9x87e8t/main.py"", line 8\n    for i in range(1, N + 1):\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.0974264144897461}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [24, 13, 29, 3, 19, 14, 5, 22, 23, 17]"
761,rod,15,345,42,0,42,0,"{'ok': True, 'value': 345, 'stdout': '345\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.0935664176940918}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [23, 28, 3, 23, 1, 15, 31, 37, 26, 14, 45, 31, 18, 11, 24]"
762,lcs,5,2,3,0,3,0,"{'ok': True, 'value': 2, 'stdout': '2\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2096707820892334}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""addcd""
T = ""baacac"""
763,knap,10,133,42,0,99,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_0eb2uemx/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10864543914794922}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [10, 17, 19, 10, 16, 10, 9, 6, 10, 9]
V = [22, 10, 17, 25, 29, 32, 11, 25, 3, 6]
C = 58"
764,ilp_prod,10,113,42,0,90,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_qjxoopx8/main.py"", line 12, in <module>\n    variables = pulp.LpVariable.dicts(""x"", range(len(profit)), cat=""Integer"", lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.15784478187561035}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [26, 7, 29, 15, 6]
consumption (rows=resources) = [[7, 9, 4, 3, 1], [9, 10, 2, 2, 2], [6, 2, 10, 9, 6], [7, 7, 2, 7, 8]]
capacity = [29, 33, 34, 32]
upper_bounds = [3, 3, 3, 3, 4]"
765,knap,5,32,42,0,32,1,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_e_mjb10_/main.py"", line 8\n    dp = np.zeros((C + 1, len(W) + 1)) \nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.11684918403625488}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [1, 5, 2, 7, 2]
V = [7, 1, 16, 5, 9]
C = 8"
766,ilp_assign,20,66,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'Traceback (most recent call last):\n  File ""/tmp/cot_exec_8thz4bw1/main.py"", line 10, in <module>\n    min_cost = sum(C[row, col] for row, col in zip(row_ind, col_ind))\n  File ""/tmp/cot_exec_8thz4bw1/main.py"", line 10, in <genexpr>\n    min_cost = sum(C[row, col] for row, col in zip(row_ind, col_ind))\nTypeError: list indices must be integers or slices, not tuple\n', 'retcode': 1, 'timeout': False, 'duration_s': 1.1481480598449707}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[6, 34, 33, 1, 43, 18, 13], [7, 55, 33, 33, 36, 7, 41], [40, 58, 36, 33, 41, 8, 25], [29, 35, 6, 3, 60, 60, 43], [59, 24, 35, 25, 7, 11, 18], [26, 33, 25, 37, 26, 38, 56], [45, 33, 19, 13, 20, 1, 4]]"
767,ilp_assign,10,45,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_u1m3q76e/main.py"", line 10\n    tasks = range(n)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10159444808959961}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[1, 20, 9, 18, 21, 4, 20], [29, 3, 28, 21, 18, 18, 30], [27, 20, 12, 2, 8, 18, 22], [18, 5, 28, 1, 25, 30, 13], [2, 5, 11, 22, 13, 18, 26], [27, 3, 20, 25, 15, 10, 11], [7, 14, 16, 3, 13, 30, 25]]"
768,rod,20,460,100,0,102,0,"{'ok': True, 'value': 460, 'stdout': '460\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08979034423828125}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [23, 20, 30, 31, 42, 50, 24, 44, 40, 10, 10, 29, 1, 58, 50, 24, 22, 13, 38, 3]"
769,lcs,15,8,12,0,6,0,"{'ok': True, 'value': 8, 'stdout': '8\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20111727714538574}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""aacddbbbacbaccb""
T = ""ccbaabcbaacdbc"""
770,ilp_partition,20,1,42,0,42,0,"{'ok': True, 'value': 45, 'stdout': '45\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20382952690124512}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [12, 27, 18, 32, 48, 56, 52, 57, 52, 12, 53, 28, 19, 47, 16, 25, 40, 17, 13, 25]"
771,lcs,5,2,4,0,3,0,"{'ok': True, 'value': 2, 'stdout': '2\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20110011100769043}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""abbba""
T = ""caaaad"""
772,ilp_prod,20,174,42,0,272,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_ufn3eyis/main.py"", line 12, in <module>\n    x = pulp.LpVariable.dicts(""x"", range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17310357093811035}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [11, 46, 44, 3, 18, 58]
consumption (rows=resources) = [[10, 15, 17, 20, 18, 15], [20, 20, 4, 7, 9, 15], [9, 18, 2, 9, 8, 2], [4, 1, 16, 17, 14, 6]]
capacity = [63, 46, 56, 67]
upper_bounds = [3, 3, 3, 3, 3, 3]"
773,ilp_partition,10,0,42,0,42,0,"{'ok': True, 'value': 6, 'stdout': '6\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20917892456054688}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [12, 28, 28, 3, 6, 22, 6, 7, 7, 29]"
774,ilp_partition,5,0,4,0,4,0,"{'ok': True, 'value': 0, 'stdout': '0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22882294654846191}",1,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [8, 9, 9, 5, 3]"
775,ilp_prod,15,155,42,0,142,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_qb5xb5y5/main.py"", line 11, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16098952293395996}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [12, 6, 31, 8, 26, 19]
consumption (rows=resources) = [[4, 3, 5, 9, 12, 11], [6, 7, 8, 11, 14, 3], [8, 13, 6, 9, 14, 12], [7, 4, 5, 10, 7, 8]]
capacity = [47, 54, 32, 30]
upper_bounds = [4, 3, 5, 3, 3, 3]"
776,lcs,10,6,4,0,5,0,"{'ok': True, 'value': 6, 'stdout': '6\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22841167449951172}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""dbbcbccadd""
T = ""dbbbacacb"""
777,knap,15,353,42,0,285,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/2447a6ebeca343bf8c1b48a428c923a0-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/2447a6ebeca343bf8c1b48a428c923a0-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 6 COLUMNS\nAt line 67 RHS\nAt line 69 BOUNDS\nAt line 85 ENDATA\nProblem MODEL has 1 rows, 15 columns and 15 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 358.857 - 0.00 seconds\nCgl0004I processed model has 1 rows, 15 columns (15 integer (15 of which binary)) and 15 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 1 integers unsatisfied sum - 0.285714\nCbc0038I Solution found of -346\nCbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 15 columns, reduced to 0 rows 0 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -348.186\nCbc0038I Reduced cost fixing fixed 8 variables on major pass 2\nCbc0038I Pass   1: suminf.    0.04857 (1) obj. -348.186 iterations 1\nCbc0038I Pass   2: suminf.    0.28571 (1) obj. -358.857 iterations 1\nCbc0038I Pass   3: suminf.    0.28571 (1) obj. -358.857 iterations 0\nCbc0038I Pass   4: suminf.    0.44032 (1) obj. -348.186 iterations 4\nCbc0038I Pass   5: suminf.    0.28571 (1) obj. -355.143 iterations 1\nCbc0038I Pass   6: suminf.    0.44032 (1) obj. -348.186 iterations 1\nCbc0038I Pass   7: suminf.    0.10714 (1) obj. -357.643 iterations 3\nCbc0038I Pass   8: suminf.    0.29629 (1) obj. -348.186 iterations 1\nCbc0038I Pass   9: suminf.    0.10714 (1) obj. -357.643 iterations 1\nCbc0038I Pass  10: suminf.    0.00000 (0) obj. -353 iterations 3\nCbc0038I Solution found of -353\nCbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 15 columns, reduced to 1 rows 5 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -354.971\nCbc0038I Reduced cost fixing fixed 10 variables on major pass 3\nCbc0038I Pass  11: suminf.    0.19936 (1) obj. -354.971 iterations 0\nCbc0038I Pass  12: suminf.    0.28571 (1) obj. -358.857 iterations 1\nCbc0038I Pass  13: suminf.    0.19936 (1) obj. -354.971 iterations 1\nCbc0038I Pass  14: suminf.    0.28571 (1) obj. -358.857 iterations 1\nCbc0038I Pass  15: suminf.    0.27586 (1) obj. -357.862 iterations 1\nCbc0038I Pass  16: suminf.    0.13043 (1) obj. -357.783 iterations 2\nCbc0038I Pass  17: suminf.    0.28953 (1) obj. -354.971 iterations 2\nCbc0038I Pass  18: suminf.    0.28571 (1) obj. -355.143 iterations 1\nCbc0038I Pass  19: suminf.    0.28571 (1) obj. -355.143 iterations 0\nCbc0038I Pass  20: suminf.    0.13043 (1) obj. -357.783 iterations 1\nCbc0038I Pass  21: suminf.    0.13043 (1) obj. -357.783 iterations 0\nCbc0038I Pass  22: suminf.    0.13043 (1) obj. -357.783 iterations 0\nCbc0038I Pass  23: suminf.    0.13043 (1) obj. -357.783 iterations 0\nCbc0038I Pass  24: suminf.    0.13043 (1) obj. -357.783 iterations 0\nCbc0038I Pass  25: suminf.    0.10714 (1) obj. -357.821 iterations 2\nCbc0038I Pass  26: suminf.    0.04381 (1) obj. -354.971 iterations 1\nCbc0038I Pass  27: suminf.    0.10714 (1) obj. -357.821 iterations 1\nCbc0038I Pass  28: suminf.    0.10714 (1) obj. -357.821 iterations 0\nCbc0038I Pass  29: suminf.    0.19936 (1) obj. -354.971 iterations 4\nCbc0038I Pass  30: suminf.    0.28571 (1) obj. -358.857 iterations 1\nCbc0038I Pass  31: suminf.    0.19936 (1) obj. -354.971 iterations 1\nCbc0038I Pass  32: suminf.    0.13043 (1) obj. -357.783 iterations 3\nCbc0038I Pass  33: suminf.    0.28953 (1) obj. -354.971 iterations 2\nCbc0038I Pass  34: suminf.    0.28571 (1) obj. -355.143 iterations 1\nCbc0038I Pass  35: suminf.    0.13043 (1) obj. -357.783 iterations 1\nCbc0038I Pass  36: suminf.    0.13043 (1) obj. -357.783 iterations 0\nCbc0038I Pass  37: suminf.    0.10714 (1) obj. -357.821 iterations 2\nCbc0038I Pass  38: suminf.    0.04381 (1) obj. -354.971 iterations 1\nCbc0038I Pass  39: suminf.    0.10714 (1) obj. -357.821 iterations 1\nCbc0038I Pass  40: suminf.    0.77092 (2) obj. -354.971 iterations 3\nCbc0038I No solution found this major pass\nCbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 15 columns, reduced to 1 rows 5 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -353 - took 0.00 seconds\nCbc0012I Integer solution of -353 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0038I Full problem 1 rows 15 columns, reduced to 1 rows 2 columns\nCbc0006I The LP relaxation is infeasible or too expensive\nCbc0013I At root node, 0 cuts changed objective from -358.85714 to -358.85714 in 1 passes\nCbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0001I Search completed - best objective -353, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 10 variables fixed on reduced cost\nCuts at root node changed objective from -358.857 to -358.857\nProbing was tried 1 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                353.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n353.0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.1965041160583496}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [26, 7, 4, 24, 27, 1, 19, 28, 23, 28, 30, 6, 16, 29, 11]
V = [17, 57, 20, 6, 53, 14, 50, 45, 40, 50, 36, 10, 52, 43, 17]
C = 139"
778,ilp_assign,20,63,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_vhqitjy_/main.py"", line 11, in <module>\n    model += variables[i, j] * C[i][j]\nKeyError: (0, 0)\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16663217544555664}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[38, 54, 48, 38, 45, 16, 14], [36, 40, 14, 52, 33, 35, 21], [14, 2, 45, 45, 3, 15, 19], [16, 32, 35, 1, 44, 16, 28], [15, 45, 14, 29, 39, 37, 5], [56, 5, 2, 54, 7, 19, 39], [45, 6, 17, 6, 15, 34, 42]]"
779,ilp_partition,5,1,4,0,5,0,"{'ok': True, 'value': 13, 'stdout': '13\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2606043815612793}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [6, 14, 4, 1, 2]"
780,ilp_partition,5,2,42,0,4,0,"{'ok': True, 'value': 8, 'stdout': '8\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2255406379699707}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [8, 9, 14, 10, 1]"
781,ilp_assign,15,91,42,0,119,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_o2j8a6xn/main.py"", line 8\n    tasks = range(7)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08616161346435547}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[19, 21, 34, 44, 26, 40, 40], [31, 18, 34, 19, 42, 30, 20], [2, 1, 23, 18, 11, 26, 27], [27, 31, 32, 33, 4, 35, 16], [16, 29, 16, 4, 8, 30, 38], [27, 28, 36, 42, 43, 23, 18], [43, 4, 23, 35, 28, 22, 25]]"
782,knap,20,657,42,0,772,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_xzyev59m/main.py"", line 11\n    DP = np.zeros((K+1, C+1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.0965728759765625}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [33, 1, 30, 37, 8, 28, 17, 3, 25, 27, 19, 4, 28, 24, 18, 2, 17, 34, 12, 4]
V = [28, 47, 3, 11, 55, 38, 30, 1, 32, 58, 15, 42, 43, 75, 65, 68, 24, 79, 8, 71]
C = 185"
783,ilp_partition,5,2,42,0,4,0,"{'ok': True, 'value': 2, 'stdout': '2\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.23664546012878418}",1,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [14, 6, 4, 3, 3]"
784,rod,10,300,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'Traceback (most recent call last):\n  File ""/tmp/cot_exec_nkfjfr1f/main.py"", line 4, in <module>\n    @lru_cache(maxsize=None)\nNameError: name \'lru_cache\' is not defined\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1040797233581543}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [30, 10, 10, 28, 15, 15, 23, 18, 19, 23]"
785,knap,5,40,42,0,38,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_d8ve0euv/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10543322563171387}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [7, 5, 8, 1, 7]
V = [13, 1, 7, 20, 19]
C = 14"
786,ilp_partition,20,1,42,0,42,0,"{'ok': True, 'value': 39, 'stdout': '39\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.1943521499633789}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [18, 60, 45, 1, 3, 6, 29, 31, 54, 9, 37, 41, 36, 34, 28, 53, 52, 26, 43, 19]"
787,ilp_prod,20,177,42,0,237,0,"{'ok': True, 'value': 3089882, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/6b0423582bc64f27b080b9d470343f29-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/6b0423582bc64f27b080b9d470343f29-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 9 COLUMNS\nAt line 40 RHS\nAt line 45 BOUNDS\nAt line 52 ENDATA\nProblem MODEL has 4 rows, 6 columns and 24 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nPresolve 4 (0) rows, 6 (0) columns and 24 (0) elements\n0  Obj -0 Dual inf 231.73333 (6)\n3  Obj 191.30899\nOptimal - objective value 191.30899\nOptimal objective 191.3089888 - 3 iterations time 0.002\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n191.3089882\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.16600298881530762}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [52, 19, 26, 12, 54, 54]
consumption (rows=resources) = [[13, 9, 3, 10, 17, 16], [12, 8, 14, 9, 7, 19], [15, 12, 16, 8, 10, 7], [19, 3, 15, 2, 14, 3]]
capacity = [44, 71, 77, 57]
upper_bounds = [3, 4, 3, 4, 3, 3]"
788,ilp_prod,10,87,42,0,76,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_29jny5cm/main.py"", line 12, in <module>\n    variables = pulp.LpVariable.dicts(""x"", range(len(profit)), cat=""Integer"", lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.15504169464111328}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [7, 9, 14, 18, 23]
consumption (rows=resources) = [[6, 10, 1, 1, 8], [3, 8, 8, 9, 4], [5, 5, 10, 3, 5], [2, 6, 4, 6, 6]]
capacity = [26, 23, 33, 26]
upper_bounds = [4, 3, 3, 3, 3]"
789,ilp_assign,15,80,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_60gmll4g/main.py"", line 11, in <module>\n    objective = pulp.lpSum([C[i][j] * variables[i][j] for i in range(n) for j in range(n)])\n  File ""/tmp/cot_exec_60gmll4g/main.py"", line 11, in <listcomp>\n    objective = pulp.lpSum([C[i][j] * variables[i][j] for i in range(n) for j in range(n)])\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16631460189819336}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[33, 10, 36, 11, 8, 28, 9], [45, 5, 13, 26, 27, 45, 37], [19, 33, 43, 29, 4, 21, 12], [37, 13, 38, 22, 25, 18, 30], [39, 10, 35, 26, 16, 10, 22], [38, 14, 16, 25, 45, 1, 31], [45, 43, 19, 9, 44, 37, 14]]"
790,ilp_assign,10,40,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/47690bae40bd4fd0b0b112510e7210ea-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/47690bae40bd4fd0b0b112510e7210ea-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 40 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 40\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 40 - took 0.00 seconds\nCbc0012I Integer solution of 40 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 40, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 40 to 40\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                40.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n40.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.17921066284179688}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[1, 11, 30, 15, 4, 3, 14], [12, 9, 2, 5, 23, 23, 21], [17, 10, 12, 26, 11, 13, 30], [6, 28, 25, 2, 15, 27, 11], [6, 20, 8, 27, 16, 6, 20], [14, 18, 13, 4, 10, 29, 25], [3, 20, 15, 28, 6, 19, 14]]"
791,ilp_assign,10,53,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_4cr_yihq/main.py"", line 11, in <module>\n    model += pulp.lpSum(C[i][j] * variables[i][j] for i in range(n) for j in range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 2469, in lpSum\n    return LpAffineExpression().addInPlace(vector)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 968, in addInPlace\n    for e in other:\n  File ""/tmp/cot_exec_4cr_yihq/main.py"", line 11, in <genexpr>\n    model += pulp.lpSum(C[i][j] * variables[i][j] for i in range(n) for j in range(n))\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.15822219848632812}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[3, 20, 9, 28, 10, 17, 25], [2, 10, 16, 30, 16, 23, 28], [6, 28, 3, 22, 19, 17, 30], [18, 7, 2, 19, 19, 17, 11], [10, 3, 18, 20, 8, 19, 21], [6, 5, 22, 24, 14, 21, 20], [11, 21, 23, 7, 20, 25, 15]]"
792,rod,15,165,42,0,42,0,"{'ok': True, 'value': 165, 'stdout': '165\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.0969853401184082}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [11, 15, 10, 43, 15, 35, 42, 16, 16, 37, 19, 34, 40, 28, 15]"
793,ilp_prod,5,37,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'no_fenced_code', 'retcode': None, 'timeout': False, 'duration_s': 0.0}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [14, 9, 5]
consumption (rows=resources) = [[5, 2, 5], [3, 5, 4], [5, 4, 5]]
capacity = [12, 16, 16]
upper_bounds = [3, 3, 3]"
794,knap,20,595,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/a7cc6e8ef7434a7bbdaf6e973871fce7-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/a7cc6e8ef7434a7bbdaf6e973871fce7-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 6 COLUMNS\nAt line 87 RHS\nAt line 89 BOUNDS\nAt line 110 ENDATA\nProblem MODEL has 1 rows, 20 columns and 20 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 599.714 - 0.00 seconds\nCgl0004I processed model has 1 rows, 20 columns (20 integer (20 of which binary)) and 20 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 1 integers unsatisfied sum - 0.142857\nCbc0038I Solution found of -594\nCbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 20 columns, reduced to 0 rows 0 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -595.471\nCbc0038I Reduced cost fixing fixed 16 variables on major pass 2\nCbc0038I Pass   1: suminf.    0.03678 (1) obj. -595.471 iterations 1\nCbc0038I Pass   2: suminf.    0.14286 (1) obj. -599.714 iterations 1\nCbc0038I Pass   3: suminf.    0.03571 (1) obj. -596.429 iterations 1\nCbc0038I Pass   4: suminf.    0.01178 (1) obj. -595.471 iterations 1\nCbc0038I Pass   5: suminf.    0.03571 (1) obj. -596.429 iterations 1\nCbc0038I Pass   6: suminf.    0.03571 (1) obj. -596.429 iterations 0\nCbc0038I Pass   7: suminf.    0.01178 (1) obj. -595.471 iterations 1\nCbc0038I Pass   8: suminf.    0.03571 (1) obj. -596.429 iterations 1\nCbc0038I Pass   9: suminf.    0.01178 (1) obj. -595.471 iterations 1\nCbc0038I Pass  10: suminf.    0.01178 (1) obj. -595.471 iterations 0\nCbc0038I Pass  11: suminf.    0.01178 (1) obj. -595.471 iterations 0\nCbc0038I Pass  12: suminf.    0.60250 (2) obj. -595.471 iterations 1\nCbc0038I Pass  13: suminf.    0.03846 (1) obj. -596.385 iterations 2\nCbc0038I Pass  14: suminf.    0.03571 (1) obj. -596.429 iterations 1\nCbc0038I Pass  15: suminf.    0.60250 (2) obj. -595.471 iterations 2\nCbc0038I Pass  16: suminf.    0.76509 (2) obj. -595.471 iterations 1\nCbc0038I Pass  17: suminf.    0.25000 (1) obj. -597 iterations 1\nCbc0038I Pass  18: suminf.    0.28822 (1) obj. -595.471 iterations 1\nCbc0038I Pass  19: suminf.    0.25000 (1) obj. -597 iterations 1\nCbc0038I Pass  20: suminf.    0.28822 (1) obj. -595.471 iterations 1\nCbc0038I Pass  21: suminf.    0.60250 (2) obj. -595.471 iterations 2\nCbc0038I Pass  22: suminf.    0.01178 (1) obj. -595.471 iterations 1\nCbc0038I Pass  23: suminf.    0.03571 (1) obj. -596.429 iterations 1\nCbc0038I Pass  24: suminf.    0.03678 (1) obj. -595.471 iterations 2\nCbc0038I Pass  25: suminf.    0.14286 (1) obj. -599.714 iterations 1\nCbc0038I Pass  26: suminf.    0.03678 (1) obj. -595.471 iterations 1\nCbc0038I Pass  27: suminf.    0.19231 (1) obj. -596.077 iterations 3\nCbc0038I Pass  28: suminf.    0.28822 (1) obj. -595.471 iterations 2\nCbc0038I Pass  29: suminf.    0.25000 (1) obj. -597 iterations 1\nCbc0038I Pass  30: suminf.    0.25000 (1) obj. -597 iterations 0\nCbc0038I Rounding solution of -595 is better than previous of -594\n\nCbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -596.743\nCbc0038I Reduced cost fixing fixed 17 variables on major pass 3\nCbc0038I Pass  30: suminf.    0.06857 (1) obj. -596.743 iterations 0\nCbc0038I Pass  31: suminf.    0.14286 (1) obj. -599.714 iterations 1\nCbc0038I Pass  32: suminf.    0.06857 (1) obj. -596.743 iterations 1\nCbc0038I Pass  33: suminf.    0.14286 (1) obj. -599.714 iterations 1\nCbc0038I Pass  34: suminf.    0.14286 (1) obj. -599.714 iterations 0\nCbc0038I Pass  35: suminf.    0.14286 (1) obj. -599.714 iterations 0\nCbc0038I Pass  36: suminf.    0.15385 (1) obj. -599.538 iterations 1\nCbc0038I Pass  37: suminf.    0.15385 (1) obj. -599.538 iterations 0\nCbc0038I Pass  38: suminf.    0.25643 (1) obj. -596.743 iterations 4\nCbc0038I Pass  39: suminf.    0.25000 (1) obj. -597 iterations 1\nCbc0038I Pass  40: suminf.    0.25643 (1) obj. -596.743 iterations 1\nCbc0038I Pass  41: suminf.    0.25643 (1) obj. -596.743 iterations 0\nCbc0038I Pass  42: suminf.    0.14286 (1) obj. -599.714 iterations 2\nCbc0038I Pass  43: suminf.    0.06857 (1) obj. -596.743 iterations 1\nCbc0038I Pass  44: suminf.    0.06857 (1) obj. -596.743 iterations 0\nCbc0038I Pass  45: suminf.    0.06857 (1) obj. -596.743 iterations 0\nCbc0038I Pass  46: suminf.    0.15385 (1) obj. -599.538 iterations 2\nCbc0038I Pass  47: suminf.    0.06857 (1) obj. -596.743 iterations 2\nCbc0038I Pass  48: suminf.    0.14286 (1) obj. -599.714 iterations 1\nCbc0038I Pass  49: suminf.    0.15385 (1) obj. -599.538 iterations 1\nCbc0038I Pass  50: suminf.    0.06857 (1) obj. -596.743 iterations 2\nCbc0038I Pass  51: suminf.    0.14286 (1) obj. -599.714 iterations 1\nCbc0038I Pass  52: suminf.    0.06857 (1) obj. -596.743 iterations 1\nCbc0038I Pass  53: suminf.    0.25643 (1) obj. -596.743 iterations 1\nCbc0038I Pass  54: suminf.    0.25000 (1) obj. -597 iterations 1\nCbc0038I Pass  55: suminf.    0.25643 (1) obj. -596.743 iterations 1\nCbc0038I Pass  56: suminf.    0.25643 (1) obj. -596.743 iterations 0\nCbc0038I Pass  57: suminf.    0.25643 (1) obj. -596.743 iterations 0\nCbc0038I Pass  58: suminf.    0.25000 (1) obj. -597 iterations 1\nCbc0038I Pass  59: suminf.    0.25643 (1) obj. -596.743 iterations 1\nCbc0038I No solution found this major pass\nCbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -595 - took 0.00 seconds\nCbc0012I Integer solution of -595 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective -595, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 16 variables fixed on reduced cost\nCuts at root node changed objective from -599.714 to -595\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                595.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n595.0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.1844649314880371}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [33, 22, 7, 36, 15, 26, 19, 40, 23, 28, 1, 3, 17, 8, 22, 33, 9, 22, 4, 38]
V = [13, 48, 42, 74, 61, 36, 33, 23, 62, 40, 24, 1, 27, 22, 20, 36, 63, 13, 74, 64]
C = 203"
795,rod,15,207,42,0,42,0,"{'ok': True, 'value': 207, 'stdout': '207\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09378433227539062}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [11, 28, 15, 24, 25, 45, 7, 45, 31, 40, 26, 21, 42, 41, 44]"
796,ilp_partition,10,1,42,0,42,0,"{'ok': True, 'value': 1, 'stdout': '1\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20281672477722168}",1,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [18, 8, 9, 12, 25, 25, 29, 21, 26, 20]"
797,ilp_assign,10,42,42,1,42,1,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_2t2xfmq2/main.py"", line 21, in <module>\n    pulp.lpSolve(prob)\nAttributeError: module \'pulp\' has no attribute \'lpSolve\'. Did you mean: \'LpSolver\'?\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16884398460388184}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[7, 30, 13, 11, 25, 23, 15], [9, 9, 6, 10, 22, 3, 25], [20, 20, 18, 3, 17, 20, 16], [19, 19, 18, 8, 4, 16, 4], [15, 17, 18, 6, 4, 23, 21], [11, 17, 23, 26, 13, 19, 8], [17, 4, 26, 15, 8, 4, 27]]"
798,ilp_partition,15,1,42,0,42,0,"{'ok': True, 'value': 15, 'stdout': '15\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21246981620788574}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [16, 22, 14, 43, 34, 35, 36, 28, 20, 8, 36, 3, 22, 25, 43]"
799,lcs,10,6,4,0,5,0,"{'ok': True, 'value': 6, 'stdout': '6\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.223663330078125}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""dbcccdaddd""
T = ""cdccbadbdb"""
800,ilp_prod,5,75,0,0,57,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_sc7yvd4j/main.py"", line 13\n    x[f\'x_{j}\'] = pulp.LpVariable(f\'x_{j}\', lowBound=0, upBound=upper_bounds[j])\n    ^\nIndentationError: expected an indented block after \'for\' statement on line 12\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.0984039306640625}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [15, 6, 10]
consumption (rows=resources) = [[3, 3, 2], [3, 5, 3], [2, 5, 1]]
capacity = [15, 15, 12]
upper_bounds = [5, 3, 5]"
801,ilp_prod,15,108,42,0,126,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_hvzu1tz5/main.py"", line 12, in <module>\n    x = pulp.LpVariable.dicts(""x"", range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17842388153076172}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [9, 12, 22, 27, 17, 27]
consumption (rows=resources) = [[8, 10, 11, 11, 12, 10], [15, 11, 7, 12, 9, 8], [7, 15, 14, 3, 2, 11], [12, 11, 1, 4, 2, 1]]
capacity = [45, 41, 35, 53]
upper_bounds = [3, 3, 3, 3, 3, 3]"
802,ilp_prod,10,77,42,0,86,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_lin8spmm/main.py"", line 11\n    x = pulp.LpVariable.dicts(""x"", range(num_products), lowBound=0, upBound=upper_bounds)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09769701957702637}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [29, 24, 29, 7, 3]
consumption (rows=resources) = [[3, 5, 3, 3, 4], [3, 4, 8, 3, 2], [8, 9, 9, 7, 7], [10, 7, 9, 9, 7]]
capacity = [35, 28, 35, 24]
upper_bounds = [3, 3, 3, 3, 3]"
803,lcs,5,3,4,0,3,1,"{'ok': True, 'value': 3, 'stdout': '3\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22337079048156738}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""badba""
T = ""bddbdb"""
804,ilp_assign,15,25,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'no_fenced_code', 'retcode': None, 'timeout': False, 'duration_s': 0.0}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[21, 11, 40, 9, 17, 35, 42], [43, 42, 2, 26, 35, 18, 42], [12, 35, 23, 7, 35, 17, 3], [12, 41, 45, 28, 2, 5, 42], [2, 37, 35, 1, 30, 35, 28], [24, 39, 10, 12, 4, 1, 24], [38, 42, 6, 4, 8, 10, 10]]"
805,knap,10,155,42,0,90,0,"{'ok': True, 'value': 155, 'stdout': '155\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.23300385475158691}",1,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [8, 20, 1, 8, 16, 12, 5, 14, 11, 14]
V = [40, 29, 8, 17, 4, 34, 19, 33, 21, 13]
C = 54"
806,ilp_assign,15,55,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/4e27256842ef4755a7f96bcf83961a82-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/4e27256842ef4755a7f96bcf83961a82-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 55 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 55\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 55 - took 0.00 seconds\nCbc0012I Integer solution of 55 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 55, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 55 to 55\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                55.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n55.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.19473886489868164}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[12, 6, 12, 43, 1, 28, 20], [45, 3, 43, 28, 40, 14, 13], [32, 44, 2, 33, 39, 34, 38], [45, 20, 44, 42, 39, 15, 7], [22, 1, 32, 27, 14, 15, 30], [11, 11, 10, 35, 11, 30, 23], [7, 16, 43, 19, 40, 28, 28]]"
807,rod,5,75,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_ttggu90_/main.py"", line 2\n    dp = [0] * (N + 1)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10378623008728027}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [15, 6, 15, 12, 7]"
808,ilp_partition,5,1,42,0,4,0,"{'ok': True, 'value': 7, 'stdout': '7\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22965526580810547}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [2, 7, 7, 12, 11]"
809,ilp_prod,20,361,42,0,197,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_ltakfsiu/main.py"", line 10\n    x = pulp.LpVariable.dicts(""x"", range(len(profit)), lowBound=0, upBound=upper_bounds)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08125638961791992}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [32, 14, 58, 43, 7, 23]
consumption (rows=resources) = [[2, 5, 4, 13, 20, 8], [15, 19, 10, 3, 7, 19], [8, 7, 13, 1, 12, 6], [18, 20, 5, 16, 18, 9]]
capacity = [66, 60, 57, 71]
upper_bounds = [3, 3, 4, 4, 3, 3]"
810,lcs,5,2,3,0,3,0,"{'ok': True, 'value': 2, 'stdout': '2\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.19669365882873535}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""dcdbc""
T = ""cbda"""
811,ilp_assign,5,8,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/2bdb1d5ed76041d185f7519266e46370-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/2bdb1d5ed76041d185f7519266e46370-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 15 COLUMNS\nAt line 141 RHS\nAt line 152 BOUNDS\nAt line 178 ENDATA\nProblem MODEL has 10 rows, 25 columns and 50 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 8 - 0.00 seconds\nCgl0004I processed model has 10 rows, 25 columns (25 integer (25 of which binary)) and 50 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 8\nCbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 8 - took 0.00 seconds\nCbc0012I Integer solution of 8 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 8, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 8 to 8\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                8.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_ci_6f8oi/main.py"", line 26, in <module>\n    print(value(objective_function))\nNameError: name \'value\' is not defined. Did you mean: \'False\'?\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.15789008140563965}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[11, 1, 1, 8, 1], [3, 5, 15, 9, 1], [1, 4, 13, 15, 2], [9, 14, 3, 1, 9], [4, 4, 8, 5, 4]]"
812,ilp_assign,20,86,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/d6cd262a624e450c9819b88fde2c1c19-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/d6cd262a624e450c9819b88fde2c1c19-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 86 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 86\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 86 - took 0.00 seconds\nCbc0012I Integer solution of 86 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 86, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 86 to 86\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                86.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n86.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.17957592010498047}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[26, 16, 15, 25, 34, 13, 24], [23, 29, 33, 55, 26, 14, 3], [29, 15, 50, 47, 58, 4, 51], [30, 1, 57, 33, 43, 15, 20], [11, 27, 46, 52, 60, 51, 22], [9, 55, 22, 49, 54, 36, 16], [39, 29, 56, 42, 20, 41, 20]]"
813,ilp_assign,10,37,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_c0j46c61/main.py"", line 9\n    x = pulp.LpVariable.dicts(\'x\', [(i, j) for i in range(n) for j in range(n)], cat=\'Binary\')\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.07990121841430664}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[19, 7, 14, 19, 13, 2, 6], [19, 27, 1, 27, 21, 7, 4], [2, 10, 5, 18, 13, 20, 12], [6, 30, 19, 25, 22, 6, 6], [29, 17, 27, 5, 16, 28, 21], [3, 30, 15, 6, 26, 25, 10], [9, 12, 15, 8, 19, 23, 2]]"
814,knap,20,668,42,0,1284,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_ogwlq873/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.0813298225402832}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [17, 4, 31, 25, 25, 25, 33, 7, 5, 31, 19, 3, 39, 29, 7, 18, 38, 12, 2, 31]
V = [5, 27, 63, 4, 69, 64, 44, 63, 38, 60, 65, 47, 22, 41, 43, 52, 39, 6, 71, 2]
C = 200"
815,knap,20,625,42,0,1163,0,"{'ok': True, 'value': 625, 'stdout': '625\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22749066352844238}",1,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [6, 34, 4, 15, 28, 5, 36, 3, 12, 14, 27, 7, 25, 14, 14, 28, 35, 30, 34, 22]
V = [31, 46, 6, 60, 71, 5, 37, 60, 71, 25, 41, 72, 36, 40, 3, 44, 46, 65, 42, 64]
C = 196"
816,rod,10,130,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_k9eaa82z/main.py"", line 8\n    for i in range(1, N + 1):\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.0906381607055664}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [3, 26, 15, 23, 14, 23, 13, 10, 22, 5]"
817,ilp_assign,5,23,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/b5e21a24d12240da8b25033d7e3d8fa1-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/b5e21a24d12240da8b25033d7e3d8fa1-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 15 COLUMNS\nAt line 141 RHS\nAt line 152 BOUNDS\nAt line 178 ENDATA\nProblem MODEL has 10 rows, 25 columns and 50 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 23 - 0.00 seconds\nCgl0004I processed model has 10 rows, 25 columns (25 integer (25 of which binary)) and 50 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 23\nCbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 23 - took 0.00 seconds\nCbc0012I Integer solution of 23 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 23, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 23 to 23\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                23.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n23.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.19110989570617676}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[6, 4, 3, 15, 10], [3, 10, 2, 7, 6], [14, 9, 7, 14, 6], [6, 14, 5, 10, 6], [1, 12, 2, 13, 11]]"
818,ilp_assign,10,55,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_2mva7jzo/main.py"", line 11, in <module>\n    objective = pulp.lpSum(C[i][j] * decision_variables[i][j] for i in range(n) for j in range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 2469, in lpSum\n    return LpAffineExpression().addInPlace(vector)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 968, in addInPlace\n    for e in other:\n  File ""/tmp/cot_exec_2mva7jzo/main.py"", line 11, in <genexpr>\n    objective = pulp.lpSum(C[i][j] * decision_variables[i][j] for i in range(n) for j in range(n))\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1627790927886963}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[30, 30, 23, 14, 24, 9, 23], [16, 18, 15, 15, 21, 19, 20], [29, 3, 19, 11, 4, 28, 10], [8, 25, 2, 8, 4, 7, 6], [21, 25, 13, 25, 27, 29, 13], [21, 5, 27, 19, 8, 18, 21], [7, 16, 28, 23, 19, 29, 21]]"
819,rod,10,220,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'Traceback (most recent call last):\n  File ""/tmp/cot_exec_klgau3y9/main.py"", line 4, in <module>\n    @lru_cache(maxsize=None)\nNameError: name \'lru_cache\' is not defined\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08587312698364258}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [22, 24, 28, 13, 10, 26, 13, 16, 10, 22]"
820,rod,20,500,42,0,42,0,"{'ok': True, 'value': 500, 'stdout': '500\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09050989151000977}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [25, 47, 58, 2, 20, 33, 14, 41, 17, 7, 28, 21, 36, 44, 11, 14, 9, 39, 37, 1]"
821,knap,20,664,42,0,1810,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_rnmzwwkq/main.py"", line 8\n    dp = np.zeros((len(V)+1, C+1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10353565216064453}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [19, 32, 33, 19, 14, 26, 4, 22, 27, 38, 36, 9, 35, 34, 10, 9, 24, 6, 38, 36]
V = [7, 55, 59, 58, 71, 71, 56, 69, 11, 70, 73, 2, 1, 29, 27, 15, 42, 48, 72, 77]
C = 235"
822,knap,15,423,42,0,297,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_fwi6_hah/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.0881798267364502}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [4, 10, 15, 7, 19, 22, 30, 15, 5, 9, 2, 30, 6, 7, 23]
V = [32, 57, 35, 13, 3, 26, 41, 23, 31, 33, 57, 57, 53, 55, 27]
C = 102"
823,ilp_prod,10,168,42,0,132,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_fs1p0wju/main.py"", line 10, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.15836286544799805}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [18, 30, 20, 30, 9]
consumption (rows=resources) = [[9, 9, 4, 3, 7], [4, 6, 8, 4, 1], [4, 2, 6, 2, 1], [4, 7, 6, 7, 8]]
capacity = [34, 34, 39, 39]
upper_bounds = [3, 3, 4, 5, 4]"
824,rod,15,150,42,0,42,0,"{'ok': True, 'value': 150, 'stdout': '150\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08812355995178223}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [10, 4, 6, 4, 12, 32, 22, 28, 3, 29, 8, 32, 17, 13, 25]"
825,knap,20,704,42,0,843,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_tegjpdyt/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.0800619125366211}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [32, 10, 2, 38, 3, 31, 10, 13, 28, 16, 30, 10, 17, 25, 16, 9, 10, 7, 32, 18]
V = [79, 62, 68, 64, 20, 57, 72, 9, 18, 43, 75, 4, 12, 78, 56, 49, 74, 1, 68, 48]
C = 178"
826,ilp_partition,10,1,42,0,42,0,"{'ok': True, 'value': 3, 'stdout': '3\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2139286994934082}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [18, 6, 24, 5, 14, 11, 18, 10, 20, 27]"
827,ilp_partition,10,0,42,0,42,0,"{'ok': True, 'value': 18, 'stdout': '18\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.215071439743042}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [26, 7, 17, 11, 9, 21, 19, 7, 25, 16]"
828,rod,5,60,42,0,42,0,"{'ok': True, 'value': 60, 'stdout': '60\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08119559288024902}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [12, 13, 5, 4, 15]"
829,knap,10,156,42,0,85,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_mnhxy6m1/main.py"", line 8\n    dp = np.zeros((N + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09692835807800293}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [17, 3, 2, 11, 1, 15, 1, 6, 9, 20]
V = [14, 28, 19, 11, 3, 3, 32, 25, 35, 8]
C = 42"
830,knap,5,42,42,1,32,0,"{'ok': True, 'value': 0, 'stdout': '42.0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.1986699104309082}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [7, 6, 3, 10, 2]
V = [2, 10, 18, 11, 14]
C = 14"
831,knap,5,36,42,0,32,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_gx2bmymp/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09846329689025879}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [5, 5, 4, 7, 9]
V = [1, 7, 17, 15, 19]
C = 15"
832,rod,15,660,42,0,42,0,"{'ok': True, 'value': 660, 'stdout': '660\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08806180953979492}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [44, 36, 16, 29, 28, 9, 12, 38, 3, 33, 37, 21, 31, 43, 45]"
833,ilp_assign,5,27,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_9ducqxss/main.py"", line 12, in <module>\n    model += pulp.lpSum(C[i][j] * vars[i][j] for i in range(n) for j in range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 2469, in lpSum\n    return LpAffineExpression().addInPlace(vector)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 968, in addInPlace\n    for e in other:\n  File ""/tmp/cot_exec_9ducqxss/main.py"", line 12, in <genexpr>\n    model += pulp.lpSum(C[i][j] * vars[i][j] for i in range(n) for j in range(n))\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16439318656921387}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[15, 15, 12, 4, 14], [7, 11, 15, 9, 3], [14, 12, 10, 5, 12], [1, 12, 2, 13, 4], [13, 10, 7, 11, 8]]"
834,rod,5,45,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_bi82eu8_/main.py"", line 2\n    dp = [0] * (N + 1)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08898329734802246}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [9, 7, 10, 11, 10]"
835,knap,5,29,42,0,30,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_ydo29sf1/main.py"", line 8\n    dp = np.zeros((len(V)+1, C+1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.0812535285949707}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [4, 8, 5, 6, 8]
V = [19, 4, 7, 3, 2]
C = 15"
836,ilp_partition,15,1,42,0,42,0,"{'ok': True, 'value': 27, 'stdout': '27\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20900583267211914}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [42, 4, 24, 25, 27, 12, 31, 45, 11, 12, 34, 40, 12, 30, 8]"
837,ilp_assign,20,78,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'Traceback (most recent call last):\n  File ""/tmp/cot_exec_k4d49h8w/main.py"", line 10, in <module>\n    model = pulp.LpProblem(""Assignment Problem"", pulp.LpMinimize)\nNameError: name \'pulp\' is not defined\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.07864737510681152}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[22, 18, 11, 56, 14, 41, 53], [14, 5, 33, 29, 48, 15, 11], [52, 12, 6, 10, 45, 22, 14], [17, 30, 53, 58, 28, 54, 57], [49, 56, 57, 46, 55, 7, 33], [21, 44, 4, 4, 9, 55, 49], [58, 48, 32, 35, 20, 4, 58]]"
838,knap,10,143,42,0,79,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_bfpghgvu/main.py"", line 8\n    dp = np.zeros((N + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08769893646240234}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [1, 11, 1, 6, 7, 9, 8, 3, 14, 12]
V = [24, 13, 7, 1, 26, 22, 37, 22, 27, 22]
C = 36"
839,rod,20,660,164,0,164,0,"{'ok': True, 'value': 660, 'stdout': '660\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08907866477966309}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [33, 57, 56, 39, 28, 34, 59, 49, 55, 23, 10, 33, 45, 26, 49, 43, 55, 8, 19, 47]"
840,ilp_partition,15,0,42,0,42,0,"{'ok': True, 'value': 16, 'stdout': '16\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2111954689025879}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [6, 22, 34, 25, 4, 35, 1, 33, 30, 32, 43, 10, 16, 38, 7]"
841,ilp_prod,10,96,42,0,108,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'no_fenced_code', 'retcode': None, 'timeout': False, 'duration_s': 0.0}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [3, 30, 3, 24, 5]
consumption (rows=resources) = [[2, 3, 9, 5, 1], [4, 7, 6, 5, 6], [4, 3, 7, 2, 6], [2, 7, 8, 6, 9]]
capacity = [23, 20, 21, 24]
upper_bounds = [5, 3, 3, 4, 3]"
842,ilp_prod,20,265,42,0,194,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_ygxwwbe9/main.py"", line 10\n    x_j = [pulp.LpVariable(f\'x_{i}\', lowBound=0, upBound=upper_bounds[i]) for i in range(len(profit))]\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08925580978393555}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [4, 10, 53, 8, 41, 5]
consumption (rows=resources) = [[16, 19, 10, 15, 14, 9], [7, 11, 12, 4, 4, 15], [16, 4, 8, 2, 16, 19], [8, 11, 3, 19, 12, 2]]
capacity = [57, 71, 55, 74]
upper_bounds = [3, 3, 5, 3, 3, 3]"
843,knap,20,614,42,0,1394,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/d20a2c0679284564b7a181424dcdafa0-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/d20a2c0679284564b7a181424dcdafa0-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 6 COLUMNS\nAt line 87 RHS\nAt line 89 BOUNDS\nAt line 110 ENDATA\nProblem MODEL has 1 rows, 20 columns and 20 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 621.857 - 0.00 seconds\nCgl0004I processed model has 1 rows, 20 columns (20 integer (20 of which binary)) and 20 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 1 integers unsatisfied sum - 0.342857\nCbc0038I Solution found of -603\nCbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 20 columns, reduced to 0 rows 0 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -605.786\nCbc0038I Reduced cost fixing fixed 14 variables on major pass 2\nCbc0038I Pass   1: suminf.    0.05065 (1) obj. -605.786 iterations 1\nCbc0038I Pass   2: suminf.    0.34286 (1) obj. -621.857 iterations 1\nCbc0038I Pass   3: suminf.    0.25714 (1) obj. -621.857 iterations 1\nCbc0038I Pass   4: suminf.    0.45065 (1) obj. -605.786 iterations 1\nCbc0038I Pass   5: suminf.    0.25714 (1) obj. -621.857 iterations 1\nCbc0038I Pass   6: suminf.    0.32857 (1) obj. -605.786 iterations 2\nCbc0038I Pass   7: suminf.    0.25714 (1) obj. -621.857 iterations 2\nCbc0038I Pass   8: suminf.    0.02857 (1) obj. -621.429 iterations 1\nCbc0038I Pass   9: suminf.    0.31299 (1) obj. -605.786 iterations 1\nCbc0038I Pass  10: suminf.    0.02857 (1) obj. -621.429 iterations 1\nCbc0038I Pass  11: suminf.    0.25714 (1) obj. -621.857 iterations 1\nCbc0038I Pass  12: suminf.    0.45065 (1) obj. -605.786 iterations 1\nCbc0038I Pass  13: suminf.    0.32857 (1) obj. -605.786 iterations 1\nCbc0038I Pass  14: suminf.    0.32857 (1) obj. -605.786 iterations 0\nCbc0038I Pass  15: suminf.    0.25714 (1) obj. -621.857 iterations 2\nCbc0038I Pass  16: suminf.    0.25714 (1) obj. -621.857 iterations 0\nCbc0038I Pass  17: suminf.    0.48571 (1) obj. -618.714 iterations 1\nCbc0038I Pass  18: suminf.    0.25065 (1) obj. -605.786 iterations 1\nCbc0038I Pass  19: suminf.    0.48571 (1) obj. -618.714 iterations 1\nCbc0038I Pass  20: suminf.    0.48571 (1) obj. -618.714 iterations 0\nCbc0038I Pass  21: suminf.    0.34317 (1) obj. -605.786 iterations 3\nCbc0038I Pass  22: suminf.    0.34317 (1) obj. -605.786 iterations 0\nCbc0038I Pass  23: suminf.    0.34317 (1) obj. -605.786 iterations 0\nCbc0038I Pass  24: suminf.    0.00000 (0) obj. -612 iterations 2\nCbc0038I Solution found of -612\nCbc0038I Rounding solution of -614 is better than previous of -612\n\nCbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 20 columns, reduced to 1 rows 5 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -616.371\nCbc0038I Reduced cost fixing fixed 15 variables on major pass 3\nCbc0038I Pass  25: suminf.    0.24312 (1) obj. -616.371 iterations 0\nCbc0038I Pass  26: suminf.    0.34286 (1) obj. -621.857 iterations 1\nCbc0038I Pass  27: suminf.    0.13851 (1) obj. -616.371 iterations 4\nCbc0038I Pass  28: suminf.    0.31429 (1) obj. -618.286 iterations 2\nCbc0038I Pass  29: suminf.    0.27948 (1) obj. -616.371 iterations 1\nCbc0038I Pass  30: suminf.    0.04312 (1) obj. -616.371 iterations 1\nCbc0038I Pass  31: suminf.    0.08571 (1) obj. -618.714 iterations 1\nCbc0038I Pass  32: suminf.    0.04312 (1) obj. -616.371 iterations 1\nCbc0038I Pass  33: suminf.    0.44312 (1) obj. -616.371 iterations 1\nCbc0038I Pass  34: suminf.    0.48571 (1) obj. -618.714 iterations 1\nCbc0038I Pass  35: suminf.    0.44312 (1) obj. -616.371 iterations 1\nCbc0038I Pass  36: suminf.    0.32052 (1) obj. -616.371 iterations 1\nCbc0038I Pass  37: suminf.    0.28571 (1) obj. -618.286 iterations 1\nCbc0038I Pass  38: suminf.    0.32052 (1) obj. -616.371 iterations 1\nCbc0038I Pass  39: suminf.    0.32052 (1) obj. -616.371 iterations 0\nCbc0038I Pass  40: suminf.    0.32052 (1) obj. -616.371 iterations 0\nCbc0038I Pass  41: suminf.    0.32052 (1) obj. -616.371 iterations 0\nCbc0038I Pass  42: suminf.    0.35688 (1) obj. -616.371 iterations 2\nCbc0038I Pass  43: suminf.    0.25714 (1) obj. -621.857 iterations 1\nCbc0038I Pass  44: suminf.    0.35688 (1) obj. -616.371 iterations 1\nCbc0038I Pass  45: suminf.    0.42671 (1) obj. -616.371 iterations 1\nCbc0038I Pass  46: suminf.    0.14410 (1) obj. -616.371 iterations 1\nCbc0038I Pass  47: suminf.    0.02857 (1) obj. -621.429 iterations 2\nCbc0038I Pass  48: suminf.    0.12052 (1) obj. -616.371 iterations 1\nCbc0038I Pass  49: suminf.    0.02857 (1) obj. -621.429 iterations 1\nCbc0038I Pass  50: suminf.    0.12052 (1) obj. -616.371 iterations 1\nCbc0038I Pass  51: suminf.    0.32052 (1) obj. -616.371 iterations 1\nCbc0038I Pass  52: suminf.    0.28571 (1) obj. -618.286 iterations 1\nCbc0038I Pass  53: suminf.    0.32052 (1) obj. -616.371 iterations 1\nCbc0038I Pass  54: suminf.    0.27948 (1) obj. -616.371 iterations 1\nCbc0038I No solution found this major pass\nCbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 20 columns, reduced to 1 rows 5 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -614 - took 0.00 seconds\nCbc0012I Integer solution of -614 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0006I The LP relaxation is infeasible or too expensive\nCbc0013I At root node, 0 cuts changed objective from -621.85714 to -621.85714 in 1 passes\nCbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0001I Search completed - best objective -614, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 15 variables fixed on reduced cost\nCuts at root node changed objective from -621.857 to -621.857\nProbing was tried 1 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                614.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n614.0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.1795358657836914}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [31, 23, 9, 24, 33, 23, 23, 14, 5, 11, 22, 35, 29, 10, 17, 1, 32, 8, 18, 29]
V = [25, 77, 11, 1, 28, 74, 45, 22, 48, 64, 58, 55, 18, 41, 64, 51, 28, 13, 6, 46]
C = 198"
844,ilp_prod,15,94,42,0,102,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_u3qrm0gb/main.py"", line 11, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16945171356201172}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [8, 27, 20, 8, 4, 25]
consumption (rows=resources) = [[9, 12, 3, 6, 5, 8], [8, 5, 2, 8, 15, 15], [5, 6, 9, 4, 7, 2], [12, 14, 13, 15, 14, 14]]
capacity = [39, 54, 37, 54]
upper_bounds = [4, 3, 4, 3, 3, 3]"
845,rod,15,360,42,0,42,0,"{'ok': True, 'value': 360, 'stdout': '360\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09741973876953125}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [24, 25, 40, 2, 25, 5, 35, 28, 19, 1, 20, 8, 13, 31, 8]"
846,ilp_partition,15,1,42,0,42,0,"{'ok': True, 'value': 13, 'stdout': '13\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21132469177246094}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [26, 29, 10, 43, 34, 40, 14, 36, 30, 13, 7, 9, 36, 7, 43]"
847,ilp_prod,15,90,42,0,105,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_07rf9ntr/main.py"", line 12, in <module>\n    x = pulp.LpVariable.dicts(""x"", range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1976604461669922}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [14, 6, 9, 30, 35, 9]
consumption (rows=resources) = [[11, 4, 13, 10, 13, 10], [7, 4, 7, 2, 7, 6], [8, 8, 11, 9, 15, 7], [10, 2, 13, 15, 12, 8]]
capacity = [30, 59, 52, 59]
upper_bounds = [3, 6, 3, 3, 3, 3]"
848,ilp_assign,10,19,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec__v6e9t1w/main.py"", line 8\n    tasks = range(7)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09751319885253906}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[28, 5, 2, 24, 10, 9, 11], [2, 3, 5, 5, 8, 11, 7], [25, 6, 15, 7, 14, 12, 5], [10, 26, 19, 6, 15, 1, 19], [6, 24, 21, 4, 2, 24, 5], [14, 22, 10, 17, 25, 7, 2], [29, 3, 20, 17, 25, 17, 18]]"
849,ilp_prod,10,96,42,0,88,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_1e5xd99t/main.py"", line 11\n    x = pulp.LpVariable.dicts(""x"", range(len(profit)), lowBound=0, cat=\'Integer\', upBound=upper_bounds)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09166121482849121}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [20, 17, 28, 14, 18]
consumption (rows=resources) = [[7, 9, 1, 7, 4], [7, 5, 10, 1, 9], [6, 2, 9, 4, 7], [5, 3, 9, 8, 10]]
capacity = [37, 31, 28, 23]
upper_bounds = [4, 4, 3, 3, 3]"
850,ilp_assign,10,48,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_x_89wjxe/main.py"", line 12, in <module>\n    model += pulp.lpSum(C[i][j] * variables[i][j] for i in range(n) for j in range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 2469, in lpSum\n    return LpAffineExpression().addInPlace(vector)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 968, in addInPlace\n    for e in other:\n  File ""/tmp/cot_exec_x_89wjxe/main.py"", line 12, in <genexpr>\n    model += pulp.lpSum(C[i][j] * variables[i][j] for i in range(n) for j in range(n))\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16476106643676758}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[26, 1, 16, 21, 22, 19, 15], [5, 5, 11, 13, 15, 9, 27], [20, 15, 19, 26, 28, 12, 23], [29, 13, 25, 22, 20, 19, 3], [1, 7, 18, 8, 8, 20, 22], [12, 14, 18, 25, 4, 3, 1], [25, 8, 28, 21, 11, 8, 24]]"
851,knap,5,50,42,0,38,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_nvj4t43x/main.py"", line 8\n    dp = np.zeros((len(W) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1238560676574707}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [8, 9, 9, 1, 3]
V = [10, 18, 9, 12, 20]
C = 15"
852,knap,5,46,42,0,39,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_pa62qino/main.py"", line 8\n    dp = np.zeros((len(V)+1, C+1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09891247749328613}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [3, 1, 1, 7, 3]
V = [18, 2, 19, 13, 9]
C = 7"
853,ilp_assign,15,51,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_mbkfur5l/main.py"", line 9\n    x = pulp.LpVariable.dicts(""x"", [(i, j) for i in range(n) for j in range(n)], cat=\'Binary\')\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08984136581420898}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[25, 4, 23, 7, 14, 29, 27], [28, 43, 13, 44, 4, 38, 26], [10, 15, 23, 42, 4, 24, 22], [20, 14, 3, 22, 29, 13, 20], [1, 31, 4, 28, 4, 24, 36], [19, 28, 19, 28, 34, 44, 18], [3, 25, 41, 14, 41, 3, 14]]"
854,ilp_prod,10,69,42,0,102,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec__le8e6hd/main.py"", line 11\n    x = pulp.LpVariable.dicts(""x"", range(len(profit)), lowBound=0, cat=\'Integer\', upBound=upper_bounds)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09443855285644531}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [27, 11, 3, 20, 23]
consumption (rows=resources) = [[10, 10, 1, 7, 9], [8, 1, 10, 9, 7], [2, 2, 10, 10, 1], [7, 2, 8, 4, 6]]
capacity = [38, 21, 33, 35]
upper_bounds = [3, 3, 3, 3, 3]"
855,ilp_prod,5,33,42,0,52,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_npm6v4w3/main.py"", line 13\n    x[f\'x_{j}\'] = pulp.LpVariable(f\'x_{j}\', lowBound=0, upBound=upper_bounds[j])\n    ^\nIndentationError: expected an indented block after \'for\' statement on line 12\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08319592475891113}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [8, 11, 11]
consumption (rows=resources) = [[5, 5, 1], [5, 3, 4], [2, 2, 1]]
capacity = [19, 12, 20]
upper_bounds = [3, 3, 3]"
856,ilp_assign,20,87,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/59dcca8ef6dc47f1a357a6b6cd11648c-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/59dcca8ef6dc47f1a357a6b6cd11648c-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 87 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 87\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 87 - took 0.00 seconds\nCbc0012I Integer solution of 87 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 87, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 87 to 87\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                87.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n87.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.18677735328674316}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[1, 42, 60, 10, 59, 57, 19], [56, 19, 5, 39, 60, 45, 28], [32, 53, 20, 16, 12, 53, 29], [17, 15, 60, 12, 36, 11, 33], [12, 51, 59, 20, 12, 57, 19], [38, 27, 27, 53, 52, 53, 44], [34, 18, 17, 46, 36, 11, 24]]"
857,knap,20,696,42,0,1518,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/a69ebd4f8cce4020b85a7b2c99e39c68-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/a69ebd4f8cce4020b85a7b2c99e39c68-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 6 COLUMNS\nAt line 87 RHS\nAt line 89 BOUNDS\nAt line 110 ENDATA\nProblem MODEL has 1 rows, 20 columns and 20 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 704.412 - 0.00 seconds\nCgl0004I processed model has 1 rows, 20 columns (20 integer (20 of which binary)) and 20 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 1 integers unsatisfied sum - 0.117647\nCbc0038I Pass   1: suminf.    0.11429 (1) obj. -702.2 iterations 1\nCbc0038I Solution found of -634\nCbc0038I Rounding solution of -675 is better than previous of -634\n\nCbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 20 columns, reduced to 1 rows 2 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -678.841\nCbc0038I Reduced cost fixing fixed 9 variables on major pass 2\nCbc0038I Pass   2: suminf.    0.11429 (1) obj. -702.2 iterations 0\nCbc0038I Pass   3: suminf.    0.41765 (1) obj. -678.841 iterations 1\nCbc0038I Pass   4: suminf.    0.44380 (1) obj. -678.841 iterations 2\nCbc0038I Pass   5: suminf.    0.31429 (1) obj. -695.8 iterations 2\nCbc0038I Pass   6: suminf.    0.46547 (1) obj. -678.841 iterations 1\nCbc0038I Pass   7: suminf.    0.18141 (1) obj. -678.841 iterations 2\nCbc0038I Solution found of -689\nCbc0038I Rounding solution of -696 is better than previous of -689\n\nCbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 20 columns, reduced to 1 rows 2 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -698.482\nCbc0038I Reduced cost fixing fixed 17 variables on major pass 3\nCbc0038I Pass   8: suminf.    0.11765 (1) obj. -704.412 iterations 1\nCbc0038I Pass   9: suminf.    0.22353 (1) obj. -698.482 iterations 1\nCbc0038I Pass  10: suminf.    0.32353 (1) obj. -701.882 iterations 2\nCbc0038I Pass  11: suminf.    0.38425 (1) obj. -698.482 iterations 1\nCbc0038I Pass  12: suminf.    0.32353 (1) obj. -701.882 iterations 1\nCbc0038I Pass  13: suminf.    0.32353 (1) obj. -701.882 iterations 0\nCbc0038I Pass  14: suminf.    0.11765 (1) obj. -704.412 iterations 1\nCbc0038I Pass  15: suminf.    0.11765 (1) obj. -704.412 iterations 0\nCbc0038I Pass  16: suminf.    0.11765 (1) obj. -704.412 iterations 0\nCbc0038I Pass  17: suminf.    0.32353 (1) obj. -701.882 iterations 1\nCbc0038I Pass  18: suminf.    0.32353 (1) obj. -701.882 iterations 0\nCbc0038I Pass  19: suminf.    0.32353 (1) obj. -701.882 iterations 0\nCbc0038I Pass  20: suminf.    0.32353 (1) obj. -701.882 iterations 0\nCbc0038I Pass  21: suminf.    0.20588 (1) obj. -698.529 iterations 2\nCbc0038I Pass  22: suminf.    0.20504 (1) obj. -698.482 iterations 1\nCbc0038I Pass  23: suminf.    0.20588 (1) obj. -698.529 iterations 1\nCbc0038I Pass  24: suminf.    0.11765 (1) obj. -704.412 iterations 1\nCbc0038I Pass  25: suminf.    0.22353 (1) obj. -698.482 iterations 1\nCbc0038I Pass  26: suminf.    0.11765 (1) obj. -704.412 iterations 1\nCbc0038I Pass  27: suminf.    0.11765 (1) obj. -704.412 iterations 0\nCbc0038I Pass  28: suminf.    0.32353 (1) obj. -701.882 iterations 1\nCbc0038I Pass  29: suminf.    0.38425 (1) obj. -698.482 iterations 1\nCbc0038I Pass  30: suminf.    0.32353 (1) obj. -701.882 iterations 1\nCbc0038I Pass  31: suminf.    0.32353 (1) obj. -701.882 iterations 0\nCbc0038I Pass  32: suminf.    0.11765 (1) obj. -704.412 iterations 1\nCbc0038I Pass  33: suminf.    0.32353 (1) obj. -701.882 iterations 1\nCbc0038I Pass  34: suminf.    0.32353 (1) obj. -701.882 iterations 0\nCbc0038I Pass  35: suminf.    0.32353 (1) obj. -701.882 iterations 0\nCbc0038I Pass  36: suminf.    0.70745 (2) obj. -698.482 iterations 1\nCbc0038I Pass  37: suminf.    0.70745 (2) obj. -698.482 iterations 0\nCbc0038I No solution found this major pass\nCbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -696 - took 0.00 seconds\nCbc0012I Integer solution of -696 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective -696, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 17 variables fixed on reduced cost\nCuts at root node changed objective from -704.412 to -696\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                696.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n696.0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.1544170379638672}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [14, 1, 26, 7, 30, 35, 32, 7, 19, 23, 7, 26, 34, 23, 19, 31, 40, 36, 12, 10]
V = [31, 80, 70, 57, 19, 77, 74, 56, 68, 32, 9, 18, 56, 48, 8, 18, 23, 51, 67, 27]
C = 216"
858,knap,20,612,42,0,945,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/9b40e103ab024af0a82910f4d85df8a6-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/9b40e103ab024af0a82910f4d85df8a6-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 6 COLUMNS\nAt line 87 RHS\nAt line 89 BOUNDS\nAt line 110 ENDATA\nProblem MODEL has 1 rows, 20 columns and 20 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 624.079 - 0.00 seconds\nCgl0004I processed model has 1 rows, 20 columns (20 integer (20 of which binary)) and 20 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 1 integers unsatisfied sum - 0.289474\nCbc0038I Solution found of -607\nCbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 20 columns, reduced to 0 rows 0 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -609.608\nCbc0038I Reduced cost fixing fixed 13 variables on major pass 2\nCbc0038I Pass   1: suminf.    0.04420 (1) obj. -609.608 iterations 1\nCbc0038I Pass   2: suminf.    0.28947 (1) obj. -624.079 iterations 1\nCbc0038I Pass   3: suminf.    0.02941 (1) obj. -612.088 iterations 2\nCbc0038I Pass   4: suminf.    0.06757 (1) obj. -609.608 iterations 1\nCbc0038I Pass   5: suminf.    0.02941 (1) obj. -612.088 iterations 1\nCbc0038I Pass   6: suminf.    0.46871 (2) obj. -609.608 iterations 4\nCbc0038I Solution found of -612\nCbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 20 columns, reduced to 1 rows 5 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -615.216\nCbc0038I Reduced cost fixing fixed 16 variables on major pass 3\nCbc0038I Pass   7: suminf.    0.13925 (1) obj. -615.216 iterations 0\nCbc0038I Pass   8: suminf.    0.28947 (1) obj. -624.079 iterations 1\nCbc0038I Pass   9: suminf.    0.28947 (1) obj. -624.079 iterations 0\nCbc0038I Pass  10: suminf.    0.13925 (1) obj. -615.216 iterations 1\nCbc0038I Pass  11: suminf.    0.28947 (1) obj. -624.079 iterations 1\nCbc0038I Pass  12: suminf.    0.13925 (1) obj. -615.216 iterations 1\nCbc0038I Pass  13: suminf.    0.11111 (1) obj. -618.778 iterations 3\nCbc0038I Pass  14: suminf.    0.37654 (1) obj. -615.216 iterations 2\nCbc0038I Pass  15: suminf.    0.42105 (1) obj. -617.842 iterations 1\nCbc0038I Pass  16: suminf.    0.42105 (1) obj. -617.842 iterations 0\nCbc0038I Pass  17: suminf.    0.37654 (1) obj. -615.216 iterations 1\nCbc0038I Pass  18: suminf.    0.42105 (1) obj. -617.842 iterations 1\nCbc0038I Pass  19: suminf.    0.42105 (1) obj. -617.842 iterations 0\nCbc0038I Pass  20: suminf.    0.37654 (1) obj. -615.216 iterations 1\nCbc0038I Pass  21: suminf.    0.37654 (1) obj. -615.216 iterations 0\nCbc0038I Pass  22: suminf.    0.07871 (2) obj. -615.216 iterations 2\nCbc0038I Pass  23: suminf.    0.11111 (1) obj. -618.778 iterations 2\nCbc0038I Pass  24: suminf.    0.11111 (1) obj. -618.778 iterations 0\nCbc0038I Pass  25: suminf.    0.37654 (1) obj. -615.216 iterations 2\nCbc0038I Pass  26: suminf.    0.11111 (1) obj. -618.778 iterations 2\nCbc0038I Pass  27: suminf.    0.37654 (1) obj. -615.216 iterations 2\nCbc0038I Pass  28: suminf.    0.42105 (1) obj. -617.842 iterations 1\nCbc0038I Pass  29: suminf.    0.80093 (2) obj. -615.216 iterations 1\nCbc0038I Pass  30: suminf.    0.42105 (1) obj. -617.842 iterations 1\nCbc0038I Pass  31: suminf.    0.11111 (1) obj. -618.778 iterations 1\nCbc0038I Pass  32: suminf.    0.11111 (1) obj. -618.778 iterations 0\nCbc0038I Pass  33: suminf.    0.07871 (2) obj. -615.216 iterations 2\nCbc0038I Pass  34: suminf.    0.11111 (1) obj. -618.778 iterations 2\nCbc0038I Pass  35: suminf.    0.11111 (1) obj. -618.778 iterations 0\nCbc0038I Pass  36: suminf.    0.37654 (1) obj. -615.216 iterations 2\nCbc0038I No solution found this major pass\nCbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 20 columns, reduced to 1 rows 2 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -612 - took 0.00 seconds\nCbc0012I Integer solution of -612 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0038I Full problem 1 rows 20 columns, reduced to 1 rows 2 columns\nCbc0006I The LP relaxation is infeasible or too expensive\nCbc0013I At root node, 0 cuts changed objective from -619.69231 to -619.69231 in 1 passes\nCbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0001I Search completed - best objective -612, took 1 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 16 variables fixed on reduced cost\nCuts at root node changed objective from -624.079 to -619.692\nProbing was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                612.00000000\nEnumerated nodes:               0\nTotal iterations:               1\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n612.0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.1556093692779541}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [25, 4, 15, 12, 18, 6, 19, 27, 36, 26, 15, 1, 34, 13, 38, 11, 8, 2, 30, 20]
V = [72, 10, 38, 7, 29, 75, 2, 11, 15, 9, 68, 30, 65, 15, 59, 47, 33, 73, 67, 22]
C = 180"
859,knap,10,177,42,0,85,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_gm327_6m/main.py"", line 8\n    dp = np.zeros((len(W) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1528010368347168}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [17, 3, 2, 1, 19, 10, 4, 15, 3, 1]
V = [4, 18, 36, 20, 38, 40, 17, 30, 25, 8]
C = 37"
860,ilp_partition,5,1,4,0,4,0,"{'ok': True, 'value': 1, 'stdout': '1\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2357778549194336}",1,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [12, 10, 8, 10, 5]"
861,ilp_prod,15,128,42,0,128,1,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_29iujq3p/main.py"", line 11, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.14896774291992188}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [16, 26, 41, 8, 5, 14]
consumption (rows=resources) = [[10, 8, 10, 8, 7, 11], [4, 7, 8, 6, 15, 12], [8, 4, 1, 9, 13, 3], [11, 14, 3, 8, 3, 10]]
capacity = [37, 59, 33, 31]
upper_bounds = [3, 3, 3, 3, 3, 3]"
862,ilp_assign,5,19,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/cd44a749ebf54508b63fd9d836624d79-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/cd44a749ebf54508b63fd9d836624d79-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 15 COLUMNS\nAt line 141 RHS\nAt line 152 BOUNDS\nAt line 178 ENDATA\nProblem MODEL has 10 rows, 25 columns and 50 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 19 - 0.00 seconds\nCgl0004I processed model has 10 rows, 25 columns (25 integer (25 of which binary)) and 50 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 19\nCbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 19 - took 0.00 seconds\nCbc0012I Integer solution of 19 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 19, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 19 to 19\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                19.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n19.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.16504573822021484}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[7, 14, 8, 4, 3], [10, 9, 4, 14, 9], [7, 9, 6, 4, 4], [6, 11, 15, 10, 13], [13, 2, 6, 15, 1]]"
863,ilp_assign,15,69,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/f835923c71c2417eacee2681db0e61b4-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/f835923c71c2417eacee2681db0e61b4-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 69 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 69\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 69 - took 0.00 seconds\nCbc0012I Integer solution of 69 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 69, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 69 to 69\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                69.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_l86tbo91/main.py"", line 28, in <module>\n    print(value(objective))\nNameError: name \'value\' is not defined. Did you mean: \'False\'?\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16512775421142578}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[25, 14, 6, 19, 8, 14, 7], [17, 24, 37, 35, 35, 9, 18], [6, 13, 43, 45, 21, 2, 23], [27, 6, 14, 43, 38, 3, 2], [29, 20, 36, 16, 33, 2, 25], [30, 12, 29, 35, 3, 1, 9], [20, 31, 40, 31, 41, 42, 42]]"
864,ilp_assign,20,107,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_jsrutf6c/main.py"", line 11, in <module>\n    model += pulp.lpSum([C[i][j] * variables[i][j] for i in range(n) for j in range(n)])\n  File ""/tmp/cot_exec_jsrutf6c/main.py"", line 11, in <listcomp>\n    model += pulp.lpSum([C[i][j] * variables[i][j] for i in range(n) for j in range(n)])\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16872429847717285}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[18, 38, 29, 55, 23, 42, 54], [47, 41, 43, 34, 19, 57, 20], [40, 54, 27, 34, 30, 47, 10], [34, 25, 22, 51, 47, 56, 1], [43, 6, 44, 52, 18, 14, 4], [40, 8, 10, 29, 41, 31, 9], [2, 47, 36, 45, 43, 54, 57]]"
865,lcs,20,10,42,0,12,0,"{'ok': True, 'value': 10, 'stdout': '10\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.1935257911682129}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""daabbbcaabcbbcabcaba""
T = ""caacbdbddaaaaacacdacc"""
866,ilp_prod,10,86,100,0,105,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_r4xyxver/main.py"", line 11\n    x = pulp.LpVariable.dicts(""x"", range(len(profit)), lowBound=0, cat=\'Integer\', upBound=upper_bounds)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.07914471626281738}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [13, 28, 24, 6, 30]
consumption (rows=resources) = [[4, 10, 6, 3, 3], [6, 2, 4, 5, 9], [10, 2, 8, 10, 8], [9, 8, 7, 6, 9]]
capacity = [40, 36, 35, 25]
upper_bounds = [3, 3, 3, 3, 3]"
867,ilp_assign,15,39,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_c64zyhrv/main.py"", line 12, in <module>\n    model += pulp.lpSum(C[i][j] * variables[i][j] for i in range(n) for j in range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 2469, in lpSum\n    return LpAffineExpression().addInPlace(vector)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 968, in addInPlace\n    for e in other:\n  File ""/tmp/cot_exec_c64zyhrv/main.py"", line 12, in <genexpr>\n    model += pulp.lpSum(C[i][j] * variables[i][j] for i in range(n) for j in range(n))\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17044425010681152}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[7, 7, 3, 21, 14, 20, 27], [37, 31, 4, 43, 22, 42, 8], [5, 40, 38, 1, 45, 24, 36], [23, 44, 3, 9, 28, 12, 8], [18, 27, 10, 1, 13, 37, 27], [28, 20, 22, 28, 11, 35, 45], [17, 45, 40, 8, 10, 4, 3]]"
868,rod,10,260,42,0,42,0,"{'ok': True, 'value': 260, 'stdout': '260\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.10355067253112793}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [26, 1, 5, 18, 9, 8, 12, 11, 24, 5]"
869,ilp_assign,15,86,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_v0obhg9k/main.py"", line 12, in <module>\n    objective = pulp.lpSum([C[i][j] * vars[i][j] for i in range(n) for j in range(n)])\n  File ""/tmp/cot_exec_v0obhg9k/main.py"", line 12, in <listcomp>\n    objective = pulp.lpSum([C[i][j] * vars[i][j] for i in range(n) for j in range(n)])\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17912912368774414}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[29, 43, 1, 26, 10, 28, 34], [17, 25, 40, 24, 20, 28, 31], [39, 37, 42, 7, 22, 7, 11], [10, 20, 43, 34, 34, 12, 6], [29, 32, 27, 39, 7, 34, 35], [41, 31, 25, 36, 25, 24, 20], [20, 29, 31, 30, 20, 17, 31]]"
870,ilp_partition,10,0,42,0,4,0,"{'ok': True, 'value': 14, 'stdout': '14\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22760343551635742}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [18, 7, 4, 11, 22, 16, 7, 10, 20, 23]"
871,ilp_assign,20,85,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_xgx_3x95/main.py"", line 12, in <module>\n    model += pulp.lpSum(C[i][j] * vars[i][j] for i in range(n) for j in range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 2469, in lpSum\n    return LpAffineExpression().addInPlace(vector)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 968, in addInPlace\n    for e in other:\n  File ""/tmp/cot_exec_xgx_3x95/main.py"", line 12, in <genexpr>\n    model += pulp.lpSum(C[i][j] * vars[i][j] for i in range(n) for j in range(n))\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1832566261291504}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[21, 45, 34, 23, 8, 29, 36], [42, 17, 13, 49, 32, 28, 39], [16, 31, 2, 40, 44, 1, 10], [24, 1, 7, 41, 43, 7, 11], [33, 2, 52, 34, 50, 19, 35], [42, 14, 33, 32, 16, 53, 56], [48, 17, 54, 49, 56, 53, 8]]"
872,rod,20,377,181,0,102,0,"{'ok': True, 'value': 377, 'stdout': '377\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09857463836669922}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [15, 35, 57, 32, 42, 24, 39, 34, 60, 39, 39, 22, 9, 5, 45, 6, 5, 55, 4, 12]"
873,ilp_partition,10,1,42,0,42,0,"{'ok': True, 'value': 7, 'stdout': '7\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.23405122756958008}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [23, 5, 22, 28, 27, 20, 25, 7, 18, 28]"
874,lcs,10,7,6,0,5,0,"{'ok': True, 'value': 7, 'stdout': '7\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.23046445846557617}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""bcddcacbca""
T = ""acdcacbadda"""
875,ilp_assign,10,40,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_8pko0qq7/main.py"", line 12, in <module>\n    model += pulp.lpSum(C[i][j] * variables[i][j] for i in range(n) for j in range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 2469, in lpSum\n    return LpAffineExpression().addInPlace(vector)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 968, in addInPlace\n    for e in other:\n  File ""/tmp/cot_exec_8pko0qq7/main.py"", line 12, in <genexpr>\n    model += pulp.lpSum(C[i][j] * variables[i][j] for i in range(n) for j in range(n))\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1760697364807129}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[13, 25, 2, 22, 13, 3, 6], [16, 5, 12, 29, 10, 6, 2], [23, 16, 15, 12, 12, 12, 20], [17, 24, 30, 18, 7, 25, 18], [5, 8, 14, 26, 22, 3, 8], [9, 10, 18, 29, 15, 29, 11], [21, 15, 1, 16, 23, 16, 5]]"
876,rod,10,130,42,0,42,0,"{'ok': True, 'value': 130, 'stdout': '130\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09800386428833008}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [11, 26, 18, 18, 15, 26, 25, 23, 3, 14]"
877,ilp_partition,10,0,42,0,42,0,"{'ok': True, 'value': 30, 'stdout': '30\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21074724197387695}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [18, 29, 8, 17, 30, 8, 22, 4, 27, 11]"
878,ilp_assign,15,60,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/e9be1ec4f5b8470290839afb2bb4c9a5-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/e9be1ec4f5b8470290839afb2bb4c9a5-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 60 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 60\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 60 - took 0.00 seconds\nCbc0012I Integer solution of 60 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 60, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 60 to 60\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                60.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n60.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.1871352195739746}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[2, 17, 15, 37, 37, 13, 44], [5, 23, 27, 23, 32, 25, 33], [13, 18, 36, 13, 27, 16, 25], [14, 7, 21, 11, 26, 44, 16], [21, 35, 24, 3, 14, 11, 21], [20, 40, 30, 7, 1, 12, 35], [24, 13, 11, 18, 11, 8, 13]]"
879,rod,5,45,42,0,12,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'no_fenced_code', 'retcode': None, 'timeout': False, 'duration_s': 0.0}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [9, 9, 3, 1, 3]"
880,ilp_prod,5,39,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_29olxql5/main.py"", line 13\n    x[f\'x_{j}\'] = pulp.LpVariable(f\'x_{j}\', lowBound=0, upBound=upper_bounds[j])\n    ^\nIndentationError: expected an indented block after \'for\' statement on line 12\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10672712326049805}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [13, 10, 8]
consumption (rows=resources) = [[1, 5, 1], [4, 2, 4], [2, 4, 2]]
capacity = [11, 13, 15]
upper_bounds = [3, 3, 3]"
881,rod,10,83,42,0,42,0,"{'ok': True, 'value': 83, 'stdout': '83\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.11526799201965332}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [2, 6, 27, 19, 10, 2, 22, 4, 9, 21]"
882,knap,10,197,42,0,163,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_k3hmjxzi/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10581564903259277}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [13, 16, 12, 7, 2, 17, 14, 8, 16, 7]
V = [11, 16, 13, 34, 22, 20, 31, 40, 37, 33]
C = 56"
883,knap,20,612,42,0,1428,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_jls1p_fv/main.py"", line 8\n    dp = np.zeros((len(V)+1, C+1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.0993201732635498}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [31, 28, 14, 32, 22, 12, 11, 38, 13, 23, 22, 6, 9, 32, 2, 6, 14, 40, 23, 13]
V = [40, 31, 2, 67, 20, 28, 40, 53, 40, 23, 6, 44, 28, 30, 75, 61, 74, 22, 71, 8]
C = 195"
884,knap,20,725,42,0,1374,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/b7ed7f9995ae4a8b8a5c2b3226a7b5a5-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/b7ed7f9995ae4a8b8a5c2b3226a7b5a5-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 6 COLUMNS\nAt line 87 RHS\nAt line 89 BOUNDS\nAt line 110 ENDATA\nProblem MODEL has 1 rows, 20 columns and 20 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 744.5 - 0.00 seconds\nCgl0004I processed model has 1 rows, 20 columns (20 integer (20 of which binary)) and 20 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 1 integers unsatisfied sum - 0.305556\nCbc0038I Pass   1: suminf.    0.30556 (1) obj. -744.5 iterations 0\nCbc0038I Solution found of -707\nCbc0038I Rounding solution of -715 is better than previous of -707\n\nCbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -718.85\nCbc0038I Reduced cost fixing fixed 14 variables on major pass 2\nCbc0038I Pass   2: suminf.    0.30556 (1) obj. -744.5 iterations 0\nCbc0038I Pass   3: suminf.    0.21944 (1) obj. -718.85 iterations 1\nCbc0038I Pass   4: suminf.    0.15093 (1) obj. -718.85 iterations 1\nCbc0038I Pass   5: suminf.    0.05556 (1) obj. -724 iterations 1\nCbc0038I Pass   6: suminf.    0.15093 (1) obj. -718.85 iterations 1\nCbc0038I Pass   7: suminf.    0.05556 (1) obj. -724 iterations 1\nCbc0038I Pass   8: suminf.    0.15093 (1) obj. -718.85 iterations 1\nCbc0038I Pass   9: suminf.    0.56565 (2) obj. -718.85 iterations 2\nCbc0038I Pass  10: suminf.    0.05556 (1) obj. -724 iterations 2\nCbc0038I Pass  11: suminf.    0.46214 (2) obj. -718.85 iterations 1\nCbc0038I Pass  12: suminf.    0.15093 (1) obj. -718.85 iterations 1\nCbc0038I Pass  13: suminf.    0.00000 (0) obj. -725 iterations 3\nCbc0038I Solution found of -725\nCbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 20 columns, reduced to 1 rows 4 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I Round again with cutoff of -729.7\nCbc0038I Reduced cost fixing fixed 16 variables on major pass 3\nCbc0038I Pass  14: suminf.    0.30556 (1) obj. -744.5 iterations 0\nCbc0038I Pass  15: suminf.    0.42037 (1) obj. -729.7 iterations 1\nCbc0038I Pass  16: suminf.    0.12368 (1) obj. -729.7 iterations 2\nCbc0038I Pass  17: suminf.    0.12368 (1) obj. -729.7 iterations 0\nCbc0038I Pass  18: suminf.    0.74658 (2) obj. -729.7 iterations 2\nCbc0038I Pass  19: suminf.    0.12368 (1) obj. -729.7 iterations 1\nCbc0038I Pass  20: suminf.    0.30556 (1) obj. -744.5 iterations 3\nCbc0038I Pass  21: suminf.    0.12368 (1) obj. -729.7 iterations 3\nCbc0038I Pass  22: suminf.    0.12368 (1) obj. -729.7 iterations 0\nCbc0038I Pass  23: suminf.    0.20263 (1) obj. -729.7 iterations 1\nCbc0038I Pass  24: suminf.    0.69103 (2) obj. -729.7 iterations 2\nCbc0038I Pass  25: suminf.    0.20263 (1) obj. -729.7 iterations 1\nCbc0038I Pass  26: suminf.    0.20263 (1) obj. -729.7 iterations 0\nCbc0038I Pass  27: suminf.    0.30556 (1) obj. -744.5 iterations 4\nCbc0038I Pass  28: suminf.    0.42037 (1) obj. -729.7 iterations 1\nCbc0038I Pass  29: suminf.    0.30556 (1) obj. -744.5 iterations 1\nCbc0038I Pass  30: suminf.    0.30556 (1) obj. -744.5 iterations 0\nCbc0038I Pass  31: suminf.    0.26471 (1) obj. -734.941 iterations 1\nCbc0038I Pass  32: suminf.    0.26471 (1) obj. -734.941 iterations 0\nCbc0038I Pass  33: suminf.    0.20588 (1) obj. -734.176 iterations 1\nCbc0038I Pass  34: suminf.    0.47592 (1) obj. -729.7 iterations 2\nCbc0038I Pass  35: suminf.    0.25000 (1) obj. -744.5 iterations 1\nCbc0038I Pass  36: suminf.    0.20588 (1) obj. -734.176 iterations 1\nCbc0038I Pass  37: suminf.    0.20588 (1) obj. -734.176 iterations 0\nCbc0038I Pass  38: suminf.    0.33964 (2) obj. -729.7 iterations 1\nCbc0038I Pass  39: suminf.    0.20588 (1) obj. -734.176 iterations 1\nCbc0038I Pass  40: suminf.    0.20588 (1) obj. -734.176 iterations 0\nCbc0038I Pass  41: suminf.    0.20263 (1) obj. -729.7 iterations 4\nCbc0038I Pass  42: suminf.    0.20263 (1) obj. -729.7 iterations 0\nCbc0038I Pass  43: suminf.    0.69103 (2) obj. -729.7 iterations 2\nCbc0038I No solution found this major pass\nCbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous\nCbc0038I Full problem 1 rows 20 columns, reduced to 1 rows 4 columns\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of -725 - took 0.00 seconds\nCbc0012I Integer solution of -725 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0038I Full problem 1 rows 20 columns, reduced to 1 rows 2 columns\nCbc0006I The LP relaxation is infeasible or too expensive\nCbc0013I At root node, 0 cuts changed objective from -744.5 to -744.5 in 1 passes\nCbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0001I Search completed - best objective -725, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 16 variables fixed on reduced cost\nCuts at root node changed objective from -744.5 to -744.5\nProbing was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                725.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.01\n\n725.0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21410536766052246}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [16, 2, 25, 2, 14, 11, 9, 29, 38, 34, 14, 19, 29, 36, 12, 34, 13, 18, 12, 11]
V = [66, 68, 10, 3, 67, 50, 34, 4, 24, 38, 68, 36, 80, 54, 73, 10, 46, 8, 68, 48]
C = 189"
885,knap,10,164,42,0,92,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_x9xpz2ir/main.py"", line 8\n    dp = np.zeros((C + 1, len(W) + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10602951049804688}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [19, 14, 9, 5, 3, 7, 6, 20, 14, 7]
V = [26, 35, 32, 12, 39, 5, 32, 16, 14, 5]
C = 52"
886,ilp_prod,5,65,0,0,68,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'no_fenced_code', 'retcode': None, 'timeout': False, 'duration_s': 0.0}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [3, 13, 4]
consumption (rows=resources) = [[5, 4, 1], [3, 3, 2], [4, 1, 2]]
capacity = [20, 20, 11]
upper_bounds = [3, 5, 5]"
887,knap,15,386,285,0,222,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_4leo8nvm/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10578012466430664}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [12, 26, 16, 5, 20, 7, 14, 7, 4, 25, 3, 30, 6, 29, 1]
V = [41, 2, 6, 30, 34, 53, 37, 5, 12, 23, 34, 51, 36, 41, 58]
C = 102"
888,ilp_assign,15,28,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/92adf169321d48e79652f79672735d05-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/92adf169321d48e79652f79672735d05-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 28 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 28\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 28 - took 0.00 seconds\nCbc0012I Integer solution of 28 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 28, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 28 to 28\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                28.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n28.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.18562793731689453}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[1, 12, 21, 33, 25, 19, 11], [16, 1, 29, 1, 41, 13, 15], [33, 44, 10, 38, 3, 6, 39], [19, 14, 5, 20, 7, 21, 32], [5, 3, 39, 1, 36, 28, 1], [12, 42, 10, 35, 36, 8, 19], [25, 10, 11, 20, 26, 11, 9]]"
889,ilp_prod,15,206,42,0,149,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_2vkgfj_g/main.py"", line 10\n    x_j = [pulp.LpVariable(f\'x_{i}\', lowBound=0, upBound=upper_bounds[i]) for i in range(len(profit))]\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10686421394348145}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [35, 34, 18, 33, 7, 14]
consumption (rows=resources) = [[5, 10, 11, 14, 12, 5], [10, 6, 6, 15, 12, 11], [15, 4, 9, 13, 10, 7], [2, 5, 4, 12, 5, 7]]
capacity = [57, 47, 48, 44]
upper_bounds = [3, 5, 5, 3, 3, 4]"
890,ilp_prod,10,65,42,0,94,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_5222a8yb/main.py"", line 11\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, cat=\'Integer\')\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10468697547912598}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [22, 20, 22, 7, 17]
consumption (rows=resources) = [[10, 8, 7, 2, 6], [5, 3, 5, 1, 2], [3, 1, 1, 6, 6], [1, 3, 7, 8, 10]]
capacity = [20, 33, 37, 38]
upper_bounds = [3, 3, 3, 4, 3]"
891,ilp_prod,5,54,69,0,52,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_q93nzvg7/main.py"", line 13\n    x[f\'x_{j}\'] = pulp.LpVariable(f\'x_{j}\', lowBound=0, upBound=upper_bounds[j])\n    ^\nIndentationError: expected an indented block after \'for\' statement on line 12\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1103217601776123}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [15, 5, 13]
consumption (rows=resources) = [[5, 1, 3], [1, 1, 1], [3, 3, 2]]
capacity = [14, 18, 10]
upper_bounds = [3, 3, 4]"
892,knap,20,656,427,0,1342,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_1azxqyo9/main.py"", line 8\n    dp = np.zeros((len(W) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10505175590515137}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [28, 8, 29, 23, 30, 23, 27, 5, 3, 22, 37, 11, 19, 15, 9, 10, 1, 33, 38, 29]
V = [80, 4, 27, 55, 21, 64, 13, 78, 13, 33, 49, 28, 59, 10, 54, 49, 55, 37, 61, 60]
C = 200"
893,lcs,10,5,4,0,5,1,"{'ok': True, 'value': 5, 'stdout': '5\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.3338954448699951}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""bbacdcbcba""
T = ""caadcdddabb"""
894,ilp_assign,15,40,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/882a9c1749bc4d0caa6ea79de38fca4c-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/882a9c1749bc4d0caa6ea79de38fca4c-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 40 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 40\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 40 - took 0.00 seconds\nCbc0012I Integer solution of 40 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 40, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 40 to 40\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                40.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n40.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.2567427158355713}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[29, 5, 45, 34, 36, 17, 19], [40, 45, 36, 12, 31, 16, 11], [1, 20, 35, 17, 8, 4, 37], [12, 34, 2, 23, 42, 35, 5], [39, 40, 38, 38, 40, 1, 23], [34, 10, 33, 2, 34, 11, 28], [25, 30, 1, 27, 33, 6, 6]]"
895,lcs,15,9,12,0,6,0,"{'ok': True, 'value': 9, 'stdout': '9\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2166433334350586}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""acbaacaddbacccb""
T = ""ccdcdaaaacddccab"""
896,knap,15,396,42,0,292,0,"{'ok': True, 'value': 0, 'stdout': '396.0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.24274969100952148}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [13, 20, 27, 3, 19, 29, 13, 22, 30, 13, 4, 4, 12, 28, 27]
V = [50, 57, 23, 23, 26, 31, 32, 59, 60, 14, 42, 14, 53, 52, 10]
C = 132"
897,knap,5,33,42,0,32,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_qu9i08c8/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10832667350769043}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [8, 1, 3, 9, 3]
V = [3, 13, 9, 20, 10]
C = 12"
898,knap,5,53,42,0,38,0,"{'ok': True, 'value': 53, 'stdout': '53\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.23408722877502441}",1,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [1, 1, 10, 1, 4]
V = [2, 16, 17, 20, 15]
C = 8"
899,rod,5,65,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'no_fenced_code', 'retcode': None, 'timeout': False, 'duration_s': 0.0}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [13, 4, 12, 10, 12]"
900,knap,5,35,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec__h9g7gz8/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1051943302154541}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [10, 7, 7, 6, 10]
V = [19, 3, 16, 8, 10]
C = 20"
901,lcs,15,7,14,0,6,0,"{'ok': True, 'value': 7, 'stdout': '7\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2266232967376709}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""bdcdbdcbcacccbb""
T = ""acaaaadbdddbadb"""
902,ilp_prod,20,170,42,0,171,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_2vrcx8an/main.py"", line 10\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.12814903259277344}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [4, 36, 52, 3, 33, 18]
consumption (rows=resources) = [[15, 19, 20, 15, 13, 8], [12, 20, 7, 12, 18, 19], [5, 19, 12, 7, 9, 12], [19, 11, 12, 16, 2, 11]]
capacity = [66, 65, 69, 54]
upper_bounds = [3, 3, 3, 3, 3, 3]"
903,ilp_assign,5,18,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/ef0fe9db155e423b9176fcde1f0cd7b6-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/ef0fe9db155e423b9176fcde1f0cd7b6-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 15 COLUMNS\nAt line 141 RHS\nAt line 152 BOUNDS\nAt line 178 ENDATA\nProblem MODEL has 10 rows, 25 columns and 50 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 18 - 0.00 seconds\nCgl0004I processed model has 10 rows, 25 columns (25 integer (25 of which binary)) and 50 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 18\nCbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 18 - took 0.00 seconds\nCbc0012I Integer solution of 18 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 18, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 18 to 18\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                18.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n18.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.2115192413330078}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[2, 11, 8, 2, 9], [4, 14, 10, 12, 11], [12, 15, 5, 7, 6], [13, 4, 1, 2, 10], [9, 9, 9, 3, 3]]"
904,lcs,10,5,4,0,5,1,"{'ok': True, 'value': 5, 'stdout': '5\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.23508977890014648}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""babcddcdbd""
T = ""dcdbdabcaa"""
905,lcs,10,4,4,1,5,0,"{'ok': True, 'value': 4, 'stdout': '4\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22804713249206543}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""daaccdccdc""
T = ""dbbbbbacac"""
906,ilp_assign,20,65,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_mid1zvt5/main.py"", line 8\n    tasks = range(7)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09048700332641602}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[5, 37, 18, 19, 49, 50, 40], [13, 21, 31, 48, 19, 58, 2], [47, 10, 7, 58, 35, 27, 10], [13, 15, 30, 49, 21, 3, 2], [28, 29, 48, 13, 41, 39, 45], [59, 6, 2, 4, 26, 17, 57], [7, 44, 9, 5, 48, 58, 44]]"
907,rod,5,20,42,0,42,0,"{'ok': True, 'value': 20, 'stdout': '20\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.10932445526123047}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [1, 6, 14, 8, 1]"
908,ilp_partition,20,1,42,0,42,0,"{'ok': True, 'value': 9, 'stdout': '9\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20220541954040527}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [56, 4, 29, 41, 58, 21, 33, 47, 6, 58, 39, 60, 3, 51, 28, 29, 39, 26, 52, 35]"
909,rod,5,40,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_2x7jt4q_/main.py"", line 2\n    dp = [0] * (N + 1)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09178328514099121}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [8, 2, 7, 10, 15]"
910,rod,15,375,42,0,42,0,"{'ok': True, 'value': 375, 'stdout': '375\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09834909439086914}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [25, 6, 2, 37, 24, 23, 25, 8, 9, 40, 11, 14, 14, 30, 15]"
911,ilp_assign,15,38,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/b1f1edaebaed4e87b52890d4b22aad1b-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/b1f1edaebaed4e87b52890d4b22aad1b-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 38 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 38\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 38 - took 0.00 seconds\nCbc0012I Integer solution of 38 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 38, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 38 to 38\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                38.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_iabs2ipg/main.py"", line 25, in <module>\n    print(value(model.objective))\nNameError: name \'value\' is not defined. Did you mean: \'False\'?\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17558574676513672}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[24, 19, 20, 4, 14, 31, 2], [6, 34, 3, 6, 32, 14, 8], [41, 8, 2, 3, 41, 27, 29], [8, 3, 2, 36, 1, 39, 17], [7, 44, 17, 20, 11, 24, 4], [7, 35, 22, 22, 10, 33, 36], [27, 6, 35, 18, 35, 40, 6]]"
912,lcs,10,4,4,1,5,0,"{'ok': True, 'value': 4, 'stdout': '4\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21382665634155273}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""dccbcbaaab""
T = ""cdcadadcdd"""
913,lcs,10,6,4,0,5,0,"{'ok': True, 'value': 6, 'stdout': '6\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20583105087280273}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""dbbbadabca""
T = ""badbcdbadd"""
914,knap,15,367,342,0,292,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_0_7cmn86/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.11093902587890625}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [6, 13, 23, 19, 12, 23, 20, 12, 5, 18, 22, 6, 26, 26, 8]
V = [17, 36, 16, 42, 52, 56, 56, 53, 5, 52, 6, 13, 37, 28, 32]
C = 119"
915,lcs,10,6,4,0,5,0,"{'ok': True, 'value': 6, 'stdout': '6\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20716500282287598}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""bbdabdcddd""
T = ""dbdbacdda"""
916,rod,10,98,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_4telbp7n/main.py"", line 4\n    dp = [0] * (N + 1)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08748793601989746}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [8, 8, 30, 16, 1, 10, 9, 16, 16, 29]"
917,ilp_partition,10,1,42,0,4,0,"{'ok': True, 'value': 7, 'stdout': '7\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22301173210144043}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [29, 9, 19, 9, 22, 18, 28, 19, 12, 4]"
918,ilp_prod,20,254,42,0,240,0,"{'ok': True, 'value': 8125, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/623f1fa03e594b2cbf7e2fc62deacc10-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/623f1fa03e594b2cbf7e2fc62deacc10-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 15 COLUMNS\nAt line 52 RHS\nAt line 63 BOUNDS\nAt line 64 ENDATA\nProblem MODEL has 10 rows, 6 columns and 30 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nPresolve 4 (-6) rows, 6 (0) columns and 24 (-6) elements\n0  Obj -0 Dual inf 282.27272 (6)\n4  Obj 264.8125\nOptimal - objective value 264.8125\nAfter Postsolve, objective 264.8125, infeasibilities - dual 0 (0), primal 0 (0)\nOptimal objective 264.8125 - 4 iterations time 0.002, Presolve 0.00\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n264.8125\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.1694934368133545}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [52, 55, 50, 5, 51, 28]
consumption (rows=resources) = [[13, 15, 5, 6, 16, 20], [6, 13, 6, 3, 11, 7], [6, 6, 13, 15, 6, 17], [7, 16, 15, 10, 5, 14]]
capacity = [55, 70, 64, 48]
upper_bounds = [4, 3, 3, 4, 3, 3]"
919,ilp_prod,15,156,186,0,143,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_iunam4da/main.py"", line 12, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.21332073211669922}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [29, 21, 25, 12, 11, 39]
consumption (rows=resources) = [[2, 2, 10, 10, 10, 2], [13, 2, 14, 3, 4, 6], [14, 15, 1, 4, 6, 7], [7, 13, 9, 5, 8, 7]]
capacity = [56, 50, 55, 30]
upper_bounds = [3, 3, 3, 5, 3, 4]"
920,ilp_partition,15,1,42,0,42,0,"{'ok': True, 'value': 1, 'stdout': '1\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2127685546875}",1,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [10, 35, 10, 36, 35, 22, 22, 40, 17, 45, 10, 8, 23, 15, 11]"
921,rod,5,27,42,0,42,0,"{'ok': True, 'value': 27, 'stdout': '27\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.1050558090209961}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [5, 11, 4, 10, 3]"
922,knap,10,130,42,0,122,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_ydrqevam/main.py"", line 8\n    dp = np.zeros((C + 1, len(W) + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10362815856933594}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [8, 10, 5, 17, 17, 1, 12, 15, 4, 14]
V = [10, 18, 8, 24, 17, 14, 22, 40, 10, 36]
C = 51"
923,knap,15,299,42,0,317,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_kpbqe69t/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09444355964660645}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [25, 21, 6, 23, 7, 22, 6, 28, 26, 19, 16, 22, 24, 8, 5]
V = [14, 3, 33, 22, 52, 16, 26, 30, 46, 17, 55, 46, 12, 8, 3]
C = 129"
924,ilp_partition,10,1,42,0,4,0,"{'ok': True, 'value': 9, 'stdout': '9\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22158169746398926}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [4, 6, 17, 20, 15, 20, 30, 15, 2, 4]"
925,ilp_prod,10,240,42,0,140,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_d26lrrmp/main.py"", line 11\n    x = pulp.LpVariable.dicts(""x"", range(len(profit)), lowBound=0, cat=\'Integer\')\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10926389694213867}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [28, 24, 25, 6, 3]
consumption (rows=resources) = [[6, 3, 10, 7, 8], [8, 2, 4, 10, 6], [1, 2, 4, 3, 4], [7, 3, 7, 7, 10]]
capacity = [31, 22, 21, 37]
upper_bounds = [3, 10, 3, 3, 3]"
926,ilp_prod,20,271,42,0,229,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/c9424a5627464a088da179a5ed578bc4-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/c9424a5627464a088da179a5ed578bc4-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 9 COLUMNS\nAt line 52 RHS\nAt line 57 BOUNDS\nAt line 64 ENDATA\nProblem MODEL has 4 rows, 6 columns and 24 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 284.604 - 0.00 seconds\nCgl0004I processed model has 4 rows, 6 columns (6 integer (0 of which binary)) and 24 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0012I Integer solution of -241 found by DiveCoefficient after 0 iterations and 0 nodes (0.00 seconds)\nCbc0012I Integer solution of -271 found by DiveCoefficient after 11 iterations and 0 nodes (0.00 seconds)\nCbc0031I 3 added rows had average density of 5\nCbc0013I At root node, 3 cuts changed objective from -279.52529 to -271.01732 in 5 passes\nCbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 1 (Gomory) - 10 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 6 (TwoMirCuts) - 16 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0001I Search completed - best objective -271, took 11 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from -279.525 to -271.017\nProbing was tried 5 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 5 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 5 times and created 16 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                271.00000000\nEnumerated nodes:               0\nTotal iterations:               11\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.01\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.01\n\n271.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.1845693588256836}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [53, 17, 45, 56, 30, 8]
consumption (rows=resources) = [[7, 10, 11, 14, 11, 9], [1, 16, 19, 17, 3, 12], [16, 6, 6, 15, 9, 11], [6, 3, 10, 14, 4, 19]]
capacity = [63, 65, 61, 50]
upper_bounds = [3, 4, 3, 3, 5, 3]"
927,ilp_partition,20,1,42,0,42,0,"{'ok': True, 'value': 37, 'stdout': '37\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21802163124084473}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [41, 54, 56, 40, 34, 30, 32, 52, 22, 30, 15, 34, 8, 28, 6, 15, 37, 59, 22, 26]"
928,ilp_assign,5,17,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'Traceback (most recent call last):\n  File ""/tmp/cot_exec__ntu_w06/main.py"", line 22, in <module>\n    solution = pulp.solve(prob)\nAttributeError: module \'pulp\' has no attribute \'solve\'\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.15532732009887695}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[4, 14, 14, 5, 6], [10, 7, 4, 6, 13], [1, 4, 5, 12, 10], [1, 4, 2, 3, 4], [6, 9, 15, 5, 3]]"
929,ilp_partition,10,0,42,0,42,0,"{'ok': True, 'value': 12, 'stdout': '12\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20476841926574707}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [21, 17, 29, 1, 22, 14, 16, 25, 21, 2]"
930,knap,20,696,42,0,1163,0,"{'ok': True, 'value': 696, 'stdout': '696\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21175050735473633}",1,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [20, 10, 20, 20, 11, 3, 25, 6, 36, 38, 17, 33, 12, 28, 26, 4, 39, 36, 29, 12]
V = [59, 67, 63, 7, 40, 62, 16, 77, 11, 50, 11, 57, 48, 29, 54, 42, 11, 49, 45, 66]
C = 212"
931,ilp_prod,5,63,42,0,62,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_8oi9wxjb/main.py"", line 12, in <module>\n    vars = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.15069031715393066}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [4, 6, 9]
consumption (rows=resources) = [[2, 3, 2], [4, 3, 2], [2, 3, 2]]
capacity = [15, 17, 18]
upper_bounds = [4, 5, 7]"
932,knap,15,376,42,0,423,0,"{'ok': True, 'value': 376, 'stdout': '376\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21628904342651367}",1,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [25, 12, 23, 15, 4, 7, 1, 19, 26, 1, 26, 22, 30, 18, 27]
V = [56, 7, 20, 41, 44, 2, 27, 60, 42, 36, 12, 53, 35, 39, 39]
C = 128"
933,lcs,5,2,3,0,3,0,"{'ok': True, 'value': 2, 'stdout': '2\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20018649101257324}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""cbdaa""
T = ""dbbcdb"""
934,rod,20,600,42,0,107,0,"{'ok': True, 'value': 600, 'stdout': '600\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08922863006591797}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [30, 60, 31, 28, 51, 3, 57, 1, 57, 26, 5, 2, 4, 11, 33, 54, 8, 44, 1, 54]"
935,ilp_prod,20,292,42,0,212,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_0t7l1hhm/main.py"", line 10, in <module>\n    variables = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16424226760864258}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [47, 49, 42, 19, 34, 32]
consumption (rows=resources) = [[7, 4, 13, 3, 9, 11], [19, 5, 3, 18, 7, 12], [10, 9, 15, 7, 19, 1], [7, 12, 18, 1, 14, 20]]
capacity = [51, 56, 80, 68]
upper_bounds = [3, 5, 3, 3, 4, 3]"
936,knap,20,586,42,0,366,0,"{'ok': True, 'value': 586, 'stdout': '586\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2238328456878662}",1,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [27, 37, 25, 38, 26, 37, 35, 12, 14, 25, 28, 22, 10, 15, 35, 32, 21, 39, 27, 11]
V = [74, 2, 14, 26, 50, 53, 78, 2, 27, 8, 25, 72, 64, 15, 54, 13, 26, 41, 46, 66]
C = 258"
937,ilp_partition,5,1,42,0,4,0,"{'ok': True, 'value': 7, 'stdout': '7\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.1969282627105713}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [14, 13, 4, 5, 11]"
938,rod,5,45,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_npvxr6tx/main.py"", line 2\n    dp = [0] * (N + 1)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.12239909172058105}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [9, 2, 3, 6, 15]"
939,rod,10,69,42,0,42,0,"{'ok': True, 'value': 69, 'stdout': '69\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.10817670822143555}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [5, 5, 20, 29, 23, 29, 4, 5, 25, 2]"
940,knap,10,167,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_k5a4sozx/main.py"", line 12\n    dp = np.zeros((K + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10122179985046387}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [20, 15, 6, 15, 19, 12, 12, 5, 15, 7]
V = [35, 31, 35, 19, 39, 14, 9, 39, 15, 19]
C = 63"
941,rod,20,1200,145,0,102,0,"{'ok': True, 'value': 1200, 'stdout': '1200\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.10079193115234375}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [60, 8, 27, 48, 2, 35, 37, 33, 57, 53, 44, 36, 27, 27, 38, 52, 25, 47, 34, 52]"
942,rod,10,52,42,0,42,0,"{'ok': True, 'value': 52, 'stdout': '52\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08911895751953125}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 10
P = [1, 8, 17, 18, 2, 21, 5, 28, 18, 3]"
943,ilp_assign,20,95,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_ek_87ypk/main.py"", line 15\n    x = pulp.LpVariable.dicts(""x"", [(i, j) for i in range(n) for j in range(n)], cat=\'Binary\')\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10413002967834473}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[42, 30, 14, 48, 7, 54, 28], [53, 43, 53, 29, 16, 30, 17], [19, 55, 55, 37, 44, 18, 38], [36, 19, 60, 54, 2, 12, 50], [17, 45, 36, 37, 33, 50, 60], [4, 21, 58, 19, 11, 54, 13], [34, 8, 10, 42, 40, 52, 56]]"
944,lcs,5,2,3,0,3,0,"{'ok': True, 'value': 2, 'stdout': '2\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2154831886291504}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""cbaac""
T = ""bccc"""
945,ilp_prod,10,52,42,0,77,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/8e221bbd9e9a449182cb90173c623654-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/8e221bbd9e9a449182cb90173c623654-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 9 COLUMNS\nAt line 45 RHS\nAt line 50 BOUNDS\nAt line 56 ENDATA\nProblem MODEL has 4 rows, 5 columns and 20 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 66.0541 - 0.00 seconds\nCgl0004I processed model has 4 rows, 5 columns (5 integer (0 of which binary)) and 20 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0012I Integer solution of -52 found by DiveCoefficient after 0 iterations and 0 nodes (0.00 seconds)\nCbc0006I The LP relaxation is infeasible or too expensive\nCbc0013I At root node, 0 cuts changed objective from -62.52 to -62.52 in 1 passes\nCbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0001I Search completed - best objective -52, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from -62.52 to -62.52\nProbing was tried 1 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                52.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n52.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.1900179386138916}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [9, 13, 26, 6, 8]
consumption (rows=resources) = [[5, 7, 9, 3, 2], [9, 8, 9, 2, 7], [6, 3, 8, 7, 10], [6, 5, 8, 9, 2]]
capacity = [36, 24, 20, 40]
upper_bounds = [3, 3, 3, 3, 3]"
946,knap,15,401,42,0,310,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_atkol5k7/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.10859394073486328}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [27, 12, 29, 1, 6, 27, 6, 20, 12, 26, 23, 23, 16, 21, 15]
V = [44, 35, 13, 8, 21, 42, 55, 59, 48, 2, 28, 15, 58, 60, 29]
C = 132"
947,lcs,20,14,42,0,10,0,"{'ok': True, 'value': 14, 'stdout': '14\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2069251537322998}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""aadacdbcbdbacbababca""
T = ""aabbbcdbcbddadcbabc"""
948,ilp_assign,10,35,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_3qye1mkq/main.py"", line 12, in <module>\n    model += pulp.lpSum([C[i][j] * variables[i][j] for i in range(n) for j in range(n)])\n  File ""/tmp/cot_exec_3qye1mkq/main.py"", line 12, in <listcomp>\n    model += pulp.lpSum([C[i][j] * variables[i][j] for i in range(n) for j in range(n)])\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17946076393127441}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[1, 14, 13, 6, 10, 18, 23], [13, 7, 28, 19, 22, 13, 26], [24, 23, 1, 8, 21, 16, 29], [11, 12, 15, 10, 3, 28, 2], [17, 11, 6, 5, 2, 12, 16], [8, 28, 29, 20, 30, 21, 23], [2, 27, 2, 1, 30, 16, 29]]"
949,knap,10,150,42,0,91,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_ejof7y8w/main.py"", line 8\n    dp = np.zeros((C + 1, len(W) + 1)) \nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09855842590332031}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [16, 7, 10, 18, 2, 10, 10, 5, 9, 17]
V = [20, 31, 9, 28, 22, 34, 21, 14, 18, 3]
C = 52"
950,ilp_assign,5,20,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_kmnh7s5n/main.py"", line 12, in <module>\n    prob += pulp.lpSum(C[i][j] * vars[i][j] for i in range(n) for j in range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 2469, in lpSum\n    return LpAffineExpression().addInPlace(vector)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 968, in addInPlace\n    for e in other:\n  File ""/tmp/cot_exec_kmnh7s5n/main.py"", line 12, in <genexpr>\n    prob += pulp.lpSum(C[i][j] * vars[i][j] for i in range(n) for j in range(n))\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.18552350997924805}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[9, 10, 4, 5, 1], [11, 3, 11, 11, 15], [9, 9, 4, 14, 7], [5, 13, 11, 7, 7], [5, 8, 2, 11, 14]]"
951,ilp_assign,10,26,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_7qxzg7xt/main.py"", line 13, in <module>\n    model += C[i][j] * worker[i] * task[j]\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 1028, in __mul__\n    return self * LpAffineExpression(other)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 1016, in __mul__\n    raise TypeError(""Non-constant expressions cannot be multiplied"")\nTypeError: Non-constant expressions cannot be multiplied\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.17933034896850586}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[26, 1, 14, 2, 10, 25, 29], [2, 12, 7, 11, 6, 8, 5], [3, 27, 2, 4, 27, 5, 10], [11, 16, 19, 19, 20, 16, 1], [13, 19, 18, 13, 8, 24, 17], [5, 18, 25, 30, 4, 14, 18], [13, 8, 18, 1, 20, 28, 27]]"
952,rod,5,60,42,0,42,0,"{'ok': True, 'value': 60, 'stdout': '60\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09905672073364258}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [12, 6, 13, 6, 10]"
953,rod,20,940,157,0,109,0,"{'ok': True, 'value': 940, 'stdout': '940\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09818387031555176}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [47, 47, 53, 59, 18, 12, 23, 42, 1, 43, 28, 41, 38, 26, 22, 44, 18, 5, 5, 14]"
954,ilp_partition,20,1,42,0,42,0,"{'ok': True, 'value': 9, 'stdout': '9\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22352266311645508}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [54, 57, 4, 51, 26, 51, 44, 47, 6, 58, 51, 31, 59, 36, 13, 36, 52, 2, 57, 52]"
955,ilp_assign,10,39,42,0,42,0,"{'ok': True, 'value': 39, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/34b3c6273aae4a09aa841f03d08f12c7-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/34b3c6273aae4a09aa841f03d08f12c7-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 39 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 39\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 39 - took 0.00 seconds\nCbc0012I Integer solution of 39 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 39, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 39 to 39\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                39.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n39\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.18890929222106934}",1,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[18, 8, 9, 25, 30, 6, 21], [27, 5, 2, 15, 12, 5, 28], [29, 20, 8, 10, 24, 2, 14], [15, 16, 28, 24, 2, 6, 18], [13, 26, 22, 22, 29, 16, 21], [24, 11, 10, 9, 6, 12, 22], [28, 17, 24, 24, 12, 27, 3]]"
956,ilp_prod,5,35,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'no_fenced_code', 'retcode': None, 'timeout': False, 'duration_s': 0.0}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [14, 6, 7]
consumption (rows=resources) = [[3, 3, 5], [5, 4, 1], [1, 3, 3]]
capacity = [12, 11, 14]
upper_bounds = [3, 3, 3]"
957,ilp_assign,10,47,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'no_fenced_code', 'retcode': None, 'timeout': False, 'duration_s': 0.0}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[19, 6, 15, 12, 12, 27, 23], [2, 23, 22, 6, 13, 18, 12], [12, 22, 27, 28, 18, 30, 19], [14, 10, 17, 9, 15, 3, 2], [4, 18, 9, 24, 10, 30, 26], [7, 14, 18, 19, 26, 28, 7], [8, 9, 3, 14, 13, 22, 17]]"
958,ilp_partition,5,1,42,0,4,0,"{'ok': True, 'value': 1, 'stdout': '1\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.23420333862304688}",1,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [8, 8, 1, 10, 4]"
959,rod,20,780,42,0,102,0,"{'ok': True, 'value': 780, 'stdout': '780\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.10120320320129395}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [39, 23, 19, 8, 15, 26, 22, 56, 51, 11, 11, 8, 6, 8, 35, 11, 18, 22, 17, 43]"
960,knap,10,145,42,0,99,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_hy8tdzlz/main.py"", line 8\n    dp = np.zeros((N + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.11038541793823242}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [4, 13, 15, 8, 3, 11, 5, 20, 1, 13]
V = [4, 19, 23, 2, 40, 29, 21, 38, 1, 35]
C = 46"
961,ilp_partition,15,0,42,0,42,0,"{'ok': True, 'value': 8, 'stdout': '8\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.211348295211792}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [36, 28, 45, 27, 10, 37, 16, 1, 19, 37, 44, 3, 39, 4, 12]"
962,lcs,5,3,3,1,3,1,"{'ok': True, 'value': 3, 'stdout': '3\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21041226387023926}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""dcbdd""
T = ""dcacd"""
963,ilp_assign,10,48,42,0,42,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/7e80527006224fe1ac51938247359cbf-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/7e80527006224fe1ac51938247359cbf-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 48 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 48\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 48 - took 0.00 seconds\nCbc0012I Integer solution of 48 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 48, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 48 to 48\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                48.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n48.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.1849956512451172}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[9, 8, 15, 13, 24, 11, 2], [19, 25, 7, 26, 25, 22, 4], [22, 21, 5, 8, 12, 29, 5], [23, 17, 28, 15, 25, 13, 9], [1, 14, 11, 28, 5, 11, 3], [7, 13, 7, 13, 20, 17, 18], [3, 22, 21, 15, 7, 4, 5]]"
964,ilp_prod,5,39,0,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'no_fenced_code', 'retcode': None, 'timeout': False, 'duration_s': 0.0}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [5, 13, 5]
consumption (rows=resources) = [[3, 2, 1], [5, 5, 2], [2, 4, 5]]
capacity = [10, 18, 13]
upper_bounds = [3, 3, 3]"
965,ilp_prod,10,75,42,0,105,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_rd8ybnpj/main.py"", line 10, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1703031063079834}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [15, 17, 13, 3, 29]
consumption (rows=resources) = [[8, 4, 3, 6, 3], [4, 8, 3, 5, 6], [4, 4, 10, 1, 10], [8, 5, 8, 8, 8]]
capacity = [31, 33, 33, 22]
upper_bounds = [3, 4, 3, 3, 3]"
966,ilp_assign,20,78,42,0,156,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/6f2b33edd4ef4a35b6dc3d7f236aad50-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/6f2b33edd4ef4a35b6dc3d7f236aad50-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 19 COLUMNS\nAt line 265 RHS\nAt line 280 BOUNDS\nAt line 330 ENDATA\nProblem MODEL has 14 rows, 49 columns and 98 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 78 - 0.00 seconds\nCgl0004I processed model has 14 rows, 49 columns (49 integer (49 of which binary)) and 98 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0038I Initial state - 0 integers unsatisfied sum - 0\nCbc0038I Solution found of 78\nCbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous\nCbc0038I Mini branch and bound did not improve solution (0.00 seconds)\nCbc0038I After 0.00 seconds - Feasibility pump exiting with objective of 78 - took 0.00 seconds\nCbc0012I Integer solution of 78 found by feasibility pump after 0 iterations and 0 nodes (0.00 seconds)\nCbc0001I Search completed - best objective 78, took 0 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from 78 to 78\nProbing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                78.00000000\nEnumerated nodes:               0\nTotal iterations:               0\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n78.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.2099895477294922}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[25, 45, 26, 21, 2, 21, 38], [37, 49, 1, 28, 40, 22, 53], [11, 27, 6, 55, 14, 49, 49], [25, 20, 38, 47, 58, 52, 60], [8, 13, 7, 26, 12, 18, 18], [44, 58, 17, 44, 7, 31, 15], [13, 50, 51, 11, 48, 52, 51]]"
967,knap,15,253,42,0,262,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_dzoz6zps/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.11468935012817383}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [8, 28, 7, 25, 21, 3, 1, 27, 5, 26, 16, 20, 23, 7, 16]
V = [18, 26, 8, 33, 5, 7, 23, 11, 13, 44, 28, 20, 27, 60, 17]
C = 116"
968,lcs,15,9,12,0,6,0,"{'ok': True, 'value': 9, 'stdout': '9\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2061762809753418}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""cbccbbbcabbadac""
T = ""dbdbbcbacccacbda"""
969,rod,20,520,104,0,164,0,"{'ok': True, 'value': 520, 'stdout': '520\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.1013181209564209}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 20
P = [10, 52, 59, 54, 34, 30, 5, 41, 32, 2, 29, 55, 35, 27, 27, 54, 54, 33, 53, 31]"
970,rod,5,75,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'no_fenced_code', 'retcode': None, 'timeout': False, 'duration_s': 0.0}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [15, 2, 3, 13, 7]"
971,lcs,20,8,42,0,10,0,"{'ok': True, 'value': 8, 'stdout': '8\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22071385383605957}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""abacbaaabcaddbaacaca""
T = ""dccccdcaccdaabaabdd"""
972,lcs,20,11,42,0,9,0,"{'ok': True, 'value': 11, 'stdout': '11\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2252054214477539}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""dbbcccacdadabbbabadc""
T = ""aaadbcaddbccbdcbcbcb"""
973,ilp_prod,20,222,42,0,187,0,"{'ok': True, 'value': 88888792, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/e29555d18ad14ab2af11d5cd1aafe95d-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/e29555d18ad14ab2af11d5cd1aafe95d-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 9 COLUMNS\nAt line 40 RHS\nAt line 45 BOUNDS\nAt line 52 ENDATA\nProblem MODEL has 4 rows, 6 columns and 24 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nPresolve 4 (0) rows, 6 (0) columns and 24 (0) elements\n0  Obj -0 Dual inf 809.1555 (6)\n3  Obj 251.08889\nOptimal - objective value 251.08889\nOptimal objective 251.0888889 - 3 iterations time 0.002\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n251.088888792\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.16707730293273926}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [32, 53, 23, 42, 12, 23]
consumption (rows=resources) = [[14, 13, 8, 2, 12, 6], [8, 14, 20, 14, 20, 17], [1, 7, 17, 18, 16, 9], [1, 7, 6, 15, 12, 14]]
capacity = [54, 69, 73, 72]
upper_bounds = [3, 4, 3, 4, 3, 4]"
974,lcs,10,6,4,0,5,0,"{'ok': True, 'value': 6, 'stdout': '6\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.22296714782714844}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""aaadbacdad""
T = ""cdaacddbccd"""
975,ilp_prod,10,100,42,0,108,0,"{'ok': True, 'value': 0, 'stdout': 'Welcome to the CBC MILP Solver \nVersion: 2.10.3 \nBuild Date: Dec 15 2019 \n\ncommand line - /mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/apis/../solverdir/cbc/linux/i64/cbc /tmp/73e7153ea2894111a2e8eeeb4df7ff13-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /tmp/73e7153ea2894111a2e8eeeb4df7ff13-pulp.sol (default strategy 1)\nAt line 2 NAME          MODEL\nAt line 3 ROWS\nAt line 9 COLUMNS\nAt line 45 RHS\nAt line 50 BOUNDS\nAt line 56 ENDATA\nProblem MODEL has 4 rows, 5 columns and 20 elements\nCoin0008I MODEL read with 0 errors\nOption for timeMode changed from cpu to elapsed\nContinuous objective value is 119.091 - 0.00 seconds\nCgl0004I processed model has 4 rows, 5 columns (5 integer (0 of which binary)) and 20 elements\nCutoff increment increased from 1e-05 to 0.9999\nCbc0012I Integer solution of -90 found by DiveCoefficient after 0 iterations and 0 nodes (0.00 seconds)\nCbc0012I Integer solution of -100 found by DiveCoefficient after 2 iterations and 0 nodes (0.00 seconds)\nCbc0031I 2 added rows had average density of 3.5\nCbc0013I At root node, 2 cuts changed objective from -116.66667 to -100 in 3 passes\nCbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 1 (Gomory) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0014I Cut generator 6 (TwoMirCuts) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1\nCbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100\nCbc0001I Search completed - best objective -100, took 2 iterations and 0 nodes (0.00 seconds)\nCbc0035I Maximum depth 0, 0 variables fixed on reduced cost\nCuts at root node changed objective from -116.667 to -100\nProbing was tried 3 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nGomory was tried 3 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nKnapsack was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nClique was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nMixedIntegerRounding2 was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nFlowCover was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nTwoMirCuts was tried 3 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\nZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)\n\nResult - Optimal solution found\n\nObjective value:                100.00000000\nEnumerated nodes:               0\nTotal iterations:               2\nTime (CPU seconds):             0.00\nTime (Wallclock seconds):       0.00\n\nOption for printingOptions changed from normal to all\nTotal time (CPU seconds):       0.00   (Wallclock seconds):       0.00\n\n100.0\n', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\n', 'retcode': 0, 'timeout': False, 'duration_s': 0.1658163070678711}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [30, 20, 13, 9, 3]
consumption (rows=resources) = [[3, 8, 8, 5, 7], [9, 2, 7, 8, 9], [9, 5, 2, 1, 7], [3, 6, 4, 2, 8]]
capacity = [31, 23, 38, 39]
upper_bounds = [3, 3, 3, 3, 3]"
976,rod,15,263,42,0,42,0,"{'ok': True, 'value': 263, 'stdout': '263\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09495830535888672}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [3, 37, 41, 27, 13, 30, 27, 22, 44, 2, 21, 12, 9, 15, 27]"
977,ilp_prod,15,138,186,0,147,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_lacbwzxv/main.py"", line 11, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1724998950958252}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [27, 22, 9, 37, 36, 15]
consumption (rows=resources) = [[13, 3, 15, 14, 15, 9], [8, 5, 1, 13, 7, 9], [1, 6, 3, 6, 1, 4], [13, 13, 7, 8, 4, 8]]
capacity = [47, 51, 58, 50]
upper_bounds = [3, 3, 3, 3, 3, 5]"
978,ilp_assign,5,29,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_pj5en7vo/main.py"", line 10\n    tasks = range(n)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08680105209350586}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[8, 1, 14, 10, 3], [15, 3, 14, 15, 5], [8, 1, 10, 9, 2], [14, 14, 10, 7, 2], [7, 13, 9, 14, 10]]"
979,ilp_prod,20,273,42,0,268,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_vsyf0412/main.py"", line 10, in <module>\n    variables = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1684269905090332}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [41, 40, 47, 18, 5, 59]
consumption (rows=resources) = [[5, 15, 5, 11, 8, 6], [20, 12, 9, 4, 4, 17], [6, 1, 20, 20, 5, 9], [15, 9, 5, 18, 13, 19]]
capacity = [67, 78, 55, 73]
upper_bounds = [3, 4, 3, 3, 5, 3]"
980,rod,15,215,42,0,42,0,"{'ok': True, 'value': 215, 'stdout': '215\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08788061141967773}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [5, 4, 43, 10, 10, 28, 13, 39, 26, 34, 7, 21, 28, 43, 38]"
981,ilp_assign,15,44,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'Traceback (most recent call last):\n  File ""/tmp/cot_exec_yaa9ghoi/main.py"", line 13, in <module>\n    m += pulp.lpSum(C[i][j] * worker[i] * task[j])\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 1028, in __mul__\n    return self * LpAffineExpression(other)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 1016, in __mul__\n    raise TypeError(""Non-constant expressions cannot be multiplied"")\nTypeError: Non-constant expressions cannot be multiplied\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.16204094886779785}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[42, 26, 1, 37, 32, 4, 9], [42, 38, 22, 20, 2, 26, 6], [27, 42, 34, 25, 43, 5, 13], [22, 5, 6, 4, 36, 34, 3], [19, 21, 5, 44, 17, 6, 8], [41, 1, 12, 18, 36, 39, 3], [34, 34, 4, 36, 22, 11, 37]]"
982,knap,5,36,42,0,35,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_4pj4q1zt/main.py"", line 8\n    dp = np.zeros((len(W) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08703804016113281}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [5, 2, 7, 4, 9]
V = [18, 7, 11, 11, 17]
C = 13"
983,ilp_partition,10,1,42,0,42,0,"{'ok': True, 'value': 13, 'stdout': '13\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2205498218536377}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [21, 4, 27, 26, 14, 7, 9, 25, 18, 18]"
984,knap,10,183,42,0,101,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_feef51qp/main.py"", line 8\n    dp = np.zeros((C + 1, len(W) + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.11696529388427734}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [16, 6, 9, 18, 7, 5, 2, 13, 18, 1]
V = [37, 33, 20, 1, 25, 22, 7, 17, 11, 39]
C = 47"
985,lcs,20,12,42,0,10,0,"{'ok': True, 'value': 12, 'stdout': '12\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21474170684814453}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""bcbcddaccbacbccdcbdb""
T = ""dccacadccdcbbdcacdbda"""
986,ilp_partition,20,0,42,0,42,0,"{'ok': True, 'value': 12, 'stdout': '12\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2049877643585205}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [16, 60, 26, 13, 59, 44, 29, 1, 4, 4, 43, 27, 55, 58, 59, 46, 8, 32, 45, 11]"
987,ilp_partition,10,0,42,0,42,0,"{'ok': True, 'value': 8, 'stdout': '8\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.1937863826751709}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [22, 23, 12, 14, 17, 14, 15, 27, 16, 8]"
988,ilp_partition,5,2,1,0,6,0,"{'ok': True, 'value': 24, 'stdout': '24\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.20200276374816895}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [8, 2, 6, 5, 3]"
989,ilp_partition,10,0,42,0,42,0,"{'ok': True, 'value': 16, 'stdout': '16\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21378135681152344}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [6, 13, 4, 26, 2, 7, 28, 12, 28, 6]"
990,rod,5,65,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_ow_hx4ic/main.py"", line 2\n    dp = [0] * (N + 1)\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09934520721435547}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [13, 14, 4, 11, 14]"
991,ilp_prod,5,49,65,0,56,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_ncw88iya/main.py"", line 13\n    x[f\'x_{j}\'] = pulp.LpVariable(f\'x_{j}\', lowBound=0, upBound=upper_bounds[j])\n    ^\nIndentationError: expected an indented block after \'for\' statement on line 12\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.07739543914794922}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [7, 10, 14]
consumption (rows=resources) = [[3, 3, 4], [2, 4, 3], [5, 4, 2]]
capacity = [15, 12, 19]
upper_bounds = [3, 3, 3]"
992,knap,20,640,42,0,288,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_py7vms97/main.py"", line 8\n    dp = np.zeros((len(V)+1, C+1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.07739639282226562}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [25, 37, 35, 37, 8, 23, 3, 32, 16, 24, 14, 8, 25, 25, 40, 7, 26, 27, 13, 12]
V = [7, 9, 55, 6, 48, 52, 22, 11, 19, 67, 18, 20, 20, 50, 80, 59, 61, 60, 73, 48]
C = 218"
993,lcs,20,12,42,0,9,0,"{'ok': True, 'value': 12, 'stdout': '12\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.2017354965209961}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""dbbbdabbcadddbdbadcd""
T = ""adcadbbabbabdcbcaca"""
994,rod,5,45,42,0,42,0,"{'ok': True, 'value': 45, 'stdout': '45\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09963297843933105}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 5
P = [9, 13, 10, 10, 7]"
995,rod,15,375,42,0,42,0,"{'ok': True, 'value': 375, 'stdout': '375\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09207487106323242}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [25, 19, 45, 13, 27, 3, 3, 21, 17, 25, 32, 19, 6, 21, 37]"
996,rod,15,240,42,0,42,0,"{'ok': True, 'value': 240, 'stdout': '240\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08096504211425781}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [16, 15, 13, 36, 2, 29, 16, 28, 15, 42, 10, 24, 4, 34, 36]"
997,ilp_prod,20,330,42,0,174,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_emqa7u40/main.py"", line 11, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, upBound=upper_bounds)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 461, in dicts\n    d[i] = LpVariable(\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 296, in __init__\n    if not math.isfinite(self.upBound):\nTypeError: must be real number, not list\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.15513896942138672}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [6, 9, 60, 58, 16, 42]
consumption (rows=resources) = [[15, 15, 11, 17, 11, 7], [15, 9, 13, 3, 7, 8], [3, 18, 3, 17, 16, 14], [6, 9, 4, 1, 4, 9]]
capacity = [64, 69, 79, 78]
upper_bounds = [4, 4, 5, 3, 4, 5]"
998,ilp_partition,10,1,42,0,4,0,"{'ok': True, 'value': 23, 'stdout': '23\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.21724724769592285}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [2, 25, 18, 7, 4, 11, 27, 30, 23, 10]"
999,rod,15,480,42,0,42,0,"{'ok': True, 'value': 480, 'stdout': '480\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09203934669494629}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 15
P = [32, 19, 36, 5, 13, 8, 12, 37, 1, 21, 9, 33, 10, 4, 13]"
