idx,kind,digits,truth,answer_nl,correct_nl,answer_code,correct_code,answer_code_exec,correct_code_exec,problem
0,lcs,6,2,4,0,3,0,"{'ok': True, 'value': 2, 'stdout': '2\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.09651017189025879}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""dbbbab""
T = ""bdccdca"""
1,ilp_assign,4,24,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_llcwh1n7/main.py"", line 11\n    tasks = range(len(C[0]))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08854484558105469}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[9, 12, 11, 12], [6, 2, 8, 11], [9, 2, 3, 9], [7, 6, 8, 12]]"
2,lcs,4,2,3,0,3,0,"{'ok': True, 'value': 2, 'stdout': '2\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.07842230796813965}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""dbda""
T = ""bddbc"""
3,rod,6,108,42,0,42,0,"{'ok': True, 'value': 108, 'stdout': '108\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.07892155647277832}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 6
P = [18, 7, 17, 14, 16, 12]"
4,ilp_prod,6,58,42,0,62,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'no_fenced_code', 'retcode': None, 'timeout': False, 'duration_s': 0.0}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [16, 14, 3, 13]
consumption (rows=resources) = [[4, 5, 1, 2], [6, 2, 5, 5], [2, 1, 5, 3]]
capacity = [12, 22, 13]
upper_bounds = [3, 3, 3, 4]"
5,ilp_assign,6,22,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_tpbbha32/main.py"", line 12, in <module>\n    model += pulp.lpSum(C[i][j] * vars[i][j] for i in range(n) for j in range(n))\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 2469, in lpSum\n    return LpAffineExpression().addInPlace(vector)\n  File ""/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py"", line 968, in addInPlace\n    for e in other:\n  File ""/tmp/cot_exec_tpbbha32/main.py"", line 12, in <genexpr>\n    model += pulp.lpSum(C[i][j] * vars[i][j] for i in range(n) for j in range(n))\nTypeError: \'LpVariable\' object is not subscriptable\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.20272016525268555}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[3, 1, 15, 1, 9, 8], [9, 4, 6, 12, 10, 3], [6, 6, 9, 17, 6, 9], [10, 15, 11, 16, 16, 4], [1, 10, 13, 11, 14, 7], [9, 4, 9, 17, 7, 14]]"
6,knap,2,8,42,0,10,0,"{'ok': True, 'value': 8, 'stdout': '8\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.07921409606933594}",1,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [4, 4, 4]
V = [4, 2, 8]
C = 6"
7,knap,4,20,42,0,22,0,"{'ok': True, 'value': 20, 'stdout': '20\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.10606551170349121}",1,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [4, 4, 8, 5]
V = [1, 14, 4, 6]
C = 10"
8,ilp_prod,2,31,39,0,39,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_24_fjshu/main.py"", line 10, in <module>\n    x = pulp.LpVariable.dicts(\'x\', range(len(profit)), lowBound=0, cat=\'Integer\', up=upper_bounds)\nTypeError: LpVariable.dicts() got an unexpected keyword argument \'up\'\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.2204887866973877}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [6, 7]
consumption (rows=resources) = [[1, 3], [2, 2]]
capacity = [7, 10]
upper_bounds = [5, 3]"
9,ilp_partition,4,1,1,1,6,0,"{'ok': True, 'value': 1, 'stdout': '1\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08907175064086914}",1,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [1, 8, 1, 5]"
10,rod,4,44,42,0,42,0,"{'ok': True, 'value': 44, 'stdout': '44\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.0884852409362793}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 4
P = [11, 12, 5, 2]"
11,lcs,2,1,1,1,1,1,"{'ok': True, 'value': 1, 'stdout': '1\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08561825752258301}",1,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""ba""
T = ""ad"""
12,ilp_prod,6,34,42,0,65,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'no_fenced_code', 'retcode': None, 'timeout': False, 'duration_s': 0.0}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [10, 17, 10, 3]
consumption (rows=resources) = [[4, 6, 5, 3], [6, 6, 4, 1], [6, 3, 2, 2]]
capacity = [12, 16, 13]
upper_bounds = [3, 3, 3, 4]"
13,ilp_assign,2,2,2,1,4,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': 'Traceback (most recent call last):\n  File ""/tmp/cot_exec_gd5_ihhd/main.py"", line 3, in <module>\n    n = len(C)\nNameError: name \'C\' is not defined\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.20204806327819824}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[1, 3], [1, 1]]"
14,ilp_partition,6,0,4,0,4,0,"{'ok': True, 'value': 0, 'stdout': '0\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.10979485511779785}",1,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [1, 8, 1, 13, 5, 2]"
15,knap,6,49,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_w29w6981/main.py"", line 8\n    dp = np.zeros((len(V) + 1, C + 1))\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.08126425743103027}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [7, 12, 9, 3, 9, 9]
V = [7, 14, 2, 16, 12, 19]
C = 24"
16,ilp_partition,2,1,1,1,4,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_qigh9ybd/main.py"", line 7\n    for i in range(len(weights) + 1):\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.09186625480651855}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [1, 6, 5, 1]"
17,ilp_partition,2,1,3,0,1,1,"{'ok': True, 'value': 1, 'stdout': '1\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08553743362426758}",1,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [4, 6, 5, 6]"
18,ilp_prod,4,40,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '/mnt/nlpgpu-io1/data/terry/ToolProj/.pixi/envs/default/lib/python3.10/site-packages/pulp/pulp.py:1489: UserWarning: Spaces are not permitted in the name. Converted to \'_\'\n  warnings.warn(""Spaces are not permitted in the name. Converted to \'_\'"")\nTraceback (most recent call last):\n  File ""/tmp/cot_exec_feruvazl/main.py"", line 7, in <module>\n    x = LpVariable.dicts(""x"", range(len(profit)), lowBound=0, cat=\'Integer\')\nNameError: name \'profit\' is not defined\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.21967482566833496}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [8, 11, 9]
consumption (rows=resources) = [[2, 3, 3], [4, 4, 1], [4, 2, 4]]
capacity = [14, 10, 13]
upper_bounds = [3, 3, 3]"
19,rod,2,4,4,1,4,1,"{'ok': True, 'value': 4, 'stdout': '4\n', 'stderr': '', 'retcode': 0, 'timeout': False, 'duration_s': 0.08844685554504395}",1,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 2
P = [1, 4]"
