idx,kind,digits,truth,answer_nl,correct_nl,answer_code,correct_code,answer_code_exec,correct_code_exec,problem
0,ilp_prod,8,78,42,0,72,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_4p__ma74/main.py"", line 10\n    ob j = -profit  # Maximize profit, so negate the profit array\n       ^\nSyntaxError: invalid syntax\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.1605367660522461}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [10, 24, 10, 17]
consumption (rows=resources) = [[5, 1, 7, 2], [3, 5, 2, 6], [7, 4, 5, 5], [8, 7, 1, 8]]
capacity = [23, 28, 29, 21]
upper_bounds = [3, 3, 3, 3]"
1,ilp_prod,8,86,42,0,62,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_qs68mmne/main.py"", line 10\n    ob j = -profit  # Maximize profit, so negate the profit array\n       ^\nSyntaxError: invalid syntax\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.14196372032165527}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [14, 20, 24, 14]
consumption (rows=resources) = [[2, 8, 2, 3], [7, 6, 8, 1], [8, 1, 5, 7], [3, 3, 4, 1]]
capacity = [22, 23, 28, 32]
upper_bounds = [3, 3, 3, 4]"
2,lcs,8,5,4,0,4,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_xyetw9b7/main.py"", line 5\n    for i in range(1, n + 1):\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.14453864097595215}",0,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""bacadddd""
T = ""adaddad"""
3,lcs,8,3,4,0,4,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '  File ""/tmp/cot_exec_1esuj3ds/main.py"", line 5\n    for i in range(1, n + 1):\nIndentationError: unexpected indent\n', 'retcode': 1, 'timeout': False, 'duration_s': 0.20766949653625488}",0,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""cbacaaaa""
T = ""bdabddbc"""
4,ilp_prod,8,55,42,0,69,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': ""/tmp/cot_exec_gides8cy/main.py:18: OptimizeWarning: x0 is used only when method is 'revised simplex'. \n  result = linprog(c, A_ub=A_ub, b_ub=b_ub, bounds=bounds, x0=x0)\nterminate called without an active exception\n"", 'retcode': -6, 'timeout': False, 'duration_s': 2.09006929397583}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [17, 11, 24, 20]
consumption (rows=resources) = [[1, 7, 3, 4], [7, 1, 8, 6], [4, 7, 8, 6], [7, 6, 1, 6]]
capacity = [30, 16, 23, 21]
upper_bounds = [3, 3, 3, 3]"
