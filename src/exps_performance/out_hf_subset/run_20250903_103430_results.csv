idx,kind,digits,truth,answer_nl,correct_nl,answer_code,correct_code,answer_code_exec,correct_code_exec,problem
0,ilp_partition,8,1,42,0,4,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '', 'retcode': None, 'timeout': False}",0,"Partition: Split the items into two groups to minimize the absolute difference between the sums. Return the minimum difference as an integer.
weights = [19, 18, 7, 17, 14, 16, 12, 14]"
1,ilp_prod,8,86,42,0,88,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '', 'retcode': None, 'timeout': False}",0,"Production planning: Choose integer quantities x_j ≥ 0 to maximize total profit sum_j profit[j]*x_j, subject to resource constraints sum_j consumption[i][j]*x_j ≤ capacity[i]. Return the max profit.
profit = [20, 23, 6, 8]
consumption (rows=resources) = [[5, 2, 6, 7], [4, 5, 5, 8], [7, 1, 8, 4], [7, 7, 3, 6]]
capacity = [27, 18, 30, 32]
upper_bounds = [4, 3, 3, 3]"
2,knap,8,95,42,0,55,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '', 'retcode': None, 'timeout': False}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [6, 3, 9, 2, 3, 3, 1, 15]
V = [1, 18, 16, 18, 8, 12, 23, 19]
C = 21"
3,rod,8,96,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '', 'retcode': None, 'timeout': False}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 8
P = [12, 8, 22, 8, 15, 10, 1, 14]"
4,lcs,8,4,4,1,4,1,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '', 'retcode': None, 'timeout': False}",0,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""bcbccdcd""
T = ""aacdcdbc"""
5,lcs,8,6,4,0,5,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '', 'retcode': None, 'timeout': False}",0,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""bdabadba""
T = ""bddbdbadc"""
6,knap,8,144,42,0,65,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '', 'retcode': None, 'timeout': False}",0,"0/1 Knapsack: Given item weights W and values V and capacity C, compute the maximum total value.
W = [9, 8, 4, 11, 1, 1, 1, 1]
V = [25, 14, 28, 2, 15, 29, 32, 15]
C = 18"
7,ilp_assign,8,44,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '', 'retcode': None, 'timeout': False}",0,"Assignment problem: Given an n×n cost matrix C, assign each worker to one task minimizing the total cost. Return the minimum total cost as an integer. 
C = [[4, 6, 17, 13, 12, 16, 24], [1, 16, 2, 10, 23, 20, 19], [19, 13, 21, 6, 6, 17, 8], [1, 7, 18, 18, 8, 13, 17], [12, 19, 12, 15, 9, 22, 18], [20, 24, 1, 13, 24, 17, 5], [17, 18, 7, 14, 2, 16, 12]]"
8,lcs,8,5,4,0,4,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '', 'retcode': None, 'timeout': False}",0,"Compute the length of the Longest Common Subsequence (LCS) between strings:
S = ""bacadddd""
T = ""adaddad"""
9,rod,8,144,42,0,42,0,"{'ok': False, 'value': None, 'stdout': '', 'stderr': '', 'retcode': None, 'timeout': False}",0,"Rod cutting: Given a rod of length N and price list P[1..N], compute the maximum obtainable revenue.
N = 8
P = [18, 18, 20, 20, 11, 15, 20, 1]"
